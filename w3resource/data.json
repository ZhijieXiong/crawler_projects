{"Collection": {"Java Collection: ArrayList Exercises [22 exercises with solution]\n": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to create a new array list, add some colors (string) and print out the collection.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise1 {\r\n  public static void main(String[] args) {\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  System.out.println(list_Strings);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to iterate through all elements in a array list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise2 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  // Print the list\r\n  for (String element : list_Strings) {\r\n    System.out.println(element);\r\n    }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to insert an element into the array list at the first position.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise3 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  // Print the list\r\n  System.out.println(list_Strings);\r\n  // Now insert a color at the first and last position of the list\r\n  list_Strings.add(0, \"Pink\");\r\n  list_Strings.add(5, \"Yellow\");\r\n  // Print the list\r\n  System.out.println(list_Strings);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to retrieve an element (at a specified index) from a given array list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise4 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  // Print the list\r\n  System.out.println(list_Strings);\r\n  // Retrive the first and third element\r\n  String element = list_Strings.get(0);\r\n  System.out.println(\"First element: \"+element);\r\n  element = list_Strings.get(2);\r\n  System.out.println(\"Third element: \"+element);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to update specific array element by given element.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise5 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  // Print the list\r\n  System.out.println(list_Strings);\r\n  // Update the third element with \"Yellow\"\r\n  list_Strings.set(2, \"Yellow\");\r\n   // Print the list again\r\n  System.out.println(list_Strings);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to remove the third element from a array list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise6 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  // Print the list\r\n  System.out.println(list_Strings);\r\n  // Remove the third element from the list.\r\n  list_Strings.remove(2);\r\n  // Print the list again\r\n  System.out.println(\"After removing third element from the list:\\n\"+list_Strings);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to search an element in a array list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise7 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  // Search the value Red\r\n    if (list_Strings.contains(\"Red\")) {\r\n    System.out.println(\"Found the element\");\r\n    } else {\r\n    System.out.println(\"There is no such element\");\r\n    }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to sort a given array list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise8 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  System.out.println(\"List before sort: \"+list_Strings);\r\n  Collections.sort(list_Strings);\r\n  System.out.println(\"List after sort: \"+list_Strings);    \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to copy one array list into another.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise9 {\r\n  public static void main(String[] args) {\r\n  List<String> List1 = new ArrayList<String>();\r\n  List1.add(\"1\");\r\n  List1.add(\"2\");\r\n  List1.add(\"3\");\r\n  List1.add(\"4\");\r\n  System.out.println(\"List1: \" + List1);\r\n  List<String> List2 = new ArrayList<String>();\r\n  List2.add(\"A\");\r\n  List2.add(\"B\");\r\n  List2.add(\"C\");\r\n  List2.add(\"D\");\r\n  System.out.println(\"List2: \" + List2);\r\n  // Copy List2 to List1\r\n  Collections.copy(List1, List2);\r\n  System.out.println(\"Copy List to List2,\\nAfter copy:\");\r\n  System.out.println(\"List1: \" + List1);\r\n  System.out.println(\"List2: \" + List2);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to shuffle elements in a array list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise10 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  System.out.println(\"List before shuffling:\\n\" + list_Strings);  \r\n  Collections.shuffle(list_Strings);\r\n  System.out.println(\"List after shuffling:\\n\" + list_Strings); \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to reverse elements in a array list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise11 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  System.out.println(\"List before reversing :\\n\" + list_Strings);  \r\n  Collections.reverse(list_Strings);\r\n  System.out.println(\"List after reversing :\\n\" + list_Strings); \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to extract a portion of a array list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise12 {\r\n  public static void main(String[] args) {\r\n  // Creae a list and add some colors to the list\r\n  List<String> list_Strings = new ArrayList<String>();\r\n  list_Strings.add(\"Red\");\r\n  list_Strings.add(\"Green\");\r\n  list_Strings.add(\"Orange\");\r\n  list_Strings.add(\"White\");\r\n  list_Strings.add(\"Black\");\r\n  System.out.println(\"Original list: \" + list_Strings);\r\n  List<String> sub_List = list_Strings.subList(0, 3);\r\n  System.out.println(\"List of first three elements: \" + sub_List);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to compare two array lists.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise13 {\r\n  public static void main(String[] args) {\r\n   ArrayList<String> c1= new ArrayList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n\r\n          ArrayList<String> c2= new ArrayList<String>();\r\n          c2.add(\"Red\");\r\n          c2.add(\"Green\");\r\n          c2.add(\"Black\");\r\n          c2.add(\"Pink\");\r\n\r\n          //Storing the comparison output in ArrayList<String>\r\n          ArrayList<String> c3 = new ArrayList<String>();\r\n          for (String e : c1)\r\n             c3.add(c2.contains(e) ? \"Yes\" : \"No\");\r\n          System.out.println(c3);\r\n         \r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program of swap two elements in an array list.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\n  public class Exercise14 {\r\n  public static void main(String[] args) {\r\n   ArrayList<String> c1= new ArrayList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n\r\n          System.out.println(\"Array list before Swap:\");\r\n          for(String a: c1){\r\n          System.out.println(a);\r\n        }\r\n          //Swapping 1st(index 0) element with the 3rd(index 2) element\r\n         Collections.swap(c1, 0, 2);\r\n          System.out.println(\"Array list after swap:\");\r\n          for(String b: c1){\r\n          System.out.println(b);\r\n         }\r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to join two array lists.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\n  public class Exercise15 {\r\n  public static void main(String[] args) {\r\n   ArrayList<String> c1= new ArrayList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"List of first array: \" + c1);\r\n          ArrayList<String> c2= new ArrayList<String>();\r\n          c2.add(\"Red\");\r\n          c2.add(\"Green\");\r\n          c2.add(\"Black\");\r\n          c2.add(\"Pink\");\r\n          System.out.println(\"List of second array: \" + c2);\r\n         \r\n      // Let join above two list\r\n        ArrayList<String> a = new ArrayList<String>();\r\n        a.addAll(c1);\r\n        a.addAll(c2);\r\n        System.out.println(\"New array: \" + a);\r\n        \r\n\r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to clone an array list to another array list.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\n  public class Exercise16 {\r\n  public static void main(String[] args) {\r\n          ArrayList<String> c1= new ArrayList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original array list: \" + c1);\r\n          ArrayList<String> newc1 = (ArrayList<String>)c1.clone();\r\n          System.out.println(\"Cloned array list: \" + newc1);       \r\n}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to empty an array list.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\n  public class Exercise17 {\r\n  public static void main(String[] args) {\r\n          ArrayList<String> c1= new ArrayList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original array list: \" + c1);\r\n          c1.removeAll(c1);\r\n          System.out.println(\"Array list after remove all elements \"+c1);   \r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to test an array list is empty or not.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\n  public class Exercise18 {\r\n  public static void main(String[] args) {\r\n          ArrayList<String> c1= new ArrayList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original array list: \" + c1);\r\n          System.out.println(\"Checking the above array list is empty or not! \"+c1.isEmpty());\r\n          c1.removeAll(c1);\r\n          System.out.println(\"Array list after remove all elements \"+c1);   \r\n          System.out.println(\"Checking the above array list is empty or not! \"+c1.isEmpty());\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to trim the capacity of an array list the current list size.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\n  public class Exercise19 {\r\n  public static void main(String[] args) {\r\n          ArrayList<String> c1= new ArrayList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original array list: \" + c1);\r\n          System.out.println(\"Let trim to size the above array: \");\r\n          c1.trimToSize();\r\n          System.out.println(c1);\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program to increase the size of an array list.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\n  public class Exercise20 {\r\n  public static void main(String[] args) {\r\n          ArrayList<String> c1= new ArrayList<String>(3);\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          System.out.println(\"Original array list: \" + c1);\r\n          //Increase capacity to 6\r\n          c1.ensureCapacity(6);\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          c1.add(\"Yellow\");\r\n          System.out.println(\"New array list: \" + c1);\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to replace the second element of a ArrayList with the specified element.", "exercise_solution_code": "import java.util.ArrayList;\r\n  public class Exercise21 {\r\n    public static void main(String[] args){\r\n  ArrayList<String>  color = new ArrayList<String>();\r\n\r\n  color.add(\"Red\");\r\n  color.add(\"Green\");\r\n\r\n  System.out.println(\"Original array list: \" + color);\r\n  String new_color = \"White\";\r\n  color.set(1,new_color);\r\n\r\n  int num=color.size();\r\n  System.out.println(\"Replace second element with 'White'.\"); \r\n  for(int i=0;i<num;i++)\r\n  System.out.println(color.get(i));\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to print all the elements of a ArrayList using the position of the elements.", "exercise_solution_code": "import java.util.ArrayList;\r\n  public class Exercise22 {\r\n    public static void main(String[] args) {\r\n  ArrayList <String> c1 = new ArrayList <String> ();\r\n  c1.add(\"Red\");\r\n  c1.add(\"Green\");\r\n  c1.add(\"Black\");\r\n  c1.add(\"White\");\r\n  c1.add(\"Pink\");\r\n  System.out.println(\"\\nOriginal array list: \" + c1);\r\n  System.out.println(\"\\nPrint using index of an element: \");\r\n  int no_of_elements = c1.size();\r\n  for (int index = 0; index < no_of_elements; index++)\r\n   System.out.println(c1.get(index));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-exercise-22.php"}], "Java Collection: LinkedList Exercises [26 exercises with solution]\n": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to append the specified element to the end of a linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\n  public class Exercise1 {\r\n  public static void main(String[] args) {\r\n     // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n          l_list.add(\"White\");\r\n          l_list.add(\"Pink\");\r\n          l_list.add(\"Yellow\");\r\n\t\r\n   // print the list\r\n   System.out.println(\"The linked list: \" + l_list);\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to iterate through all elements in a linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\n  public class Exercise2 {\r\n  public static void main(String[] args) {\r\n    // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n          l_list.add(\"White\");\r\n          l_list.add(\"Pink\");\r\n         // Print the linked list\r\n  for (String element : l_list) {\r\n    System.out.println(element);\r\n    }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to iterate through all elements in a linked list starting at the specified position.", "exercise_solution_code": "import java.util.LinkedList;\r\nimport java.util.Iterator;\r\n  public class Exercise3 {\r\n  public static void main(String[] args) {\r\n    // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n          l_list.add(\"White\");\r\n          l_list.add(\"Pink\");\r\n// set Iterator at specified index\r\n   Iterator p = l_list.listIterator(1);\r\n\r\n   // print list from second position\r\n   while (p.hasNext()) {\r\n   System.out.println(p.next());\r\n   }\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to iterate a linked list in reverse order.", "exercise_solution_code": "import java.util.LinkedList;\r\nimport java.util.Iterator;\r\n  public class Exercise4 {\r\n  public static void main(String[] args) {\r\n    // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n          l_list.add(\"Pink\");\r\n          l_list.add(\"orange\");\r\n      \r\n        // print original list\r\n   System.out.println(\"Original linked list:\" + l_list);  \r\n \r\n    Iterator it = l_list.descendingIterator();\r\n\r\n     // Print list elements in reverse order\r\n     System.out.println(\"Elements in Reverse Order:\");\r\n     while (it.hasNext()) {\r\n        System.out.println(it.next());\r\n     }\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to insert the specified element at the specified position in the linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\npublic class Exercise5 {\r\n\tpublic static void main(String[] args) {\r\n\t\t// create an empty linked list\r\n\t\tLinkedList <String> l_list = new LinkedList <String> ();\r\n\t\t// use add() method to add values in the linked list\r\n\t\tl_list.add(\"Red\");\r\n\t\tl_list.add(\"Green\");\r\n\t\tl_list.add(\"Black\");\r\n\t\tl_list.add(\"White\");\r\n\t\tl_list.add(\"Pink\");\r\n\t\tSystem.out.println(\"Original linked list: \");\r\n\t\tSystem.out.println(\"Let add the Yellow color after the Red Color: \" + l_list);\r\n\t\tl_list.add(1, \"Yellow\");\r\n\t\t// print the list\r\n\t\tSystem.out.println(\"The linked list:\" + l_list);\r\n\t}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to insert elements into the linked list at the first and last position.", "exercise_solution_code": "import java.util.LinkedList;\r\n  public class Exercise6 {\r\n  public static void main(String[] args) {\r\n   // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n     System.out.println(\"Original linked list:\" + l_list);    \r\n   // Add an element at the beginning \r\n    l_list.addFirst(\"White\");\r\n \r\n   // Add an element at the end of list \r\n    l_list.addLast(\"Pink\");\r\n     System.out.println(\"Final linked list:\" + l_list);  \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to insert the specified element at the front of a linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\n  public class Exercise7 {\r\n  public static void main(String[] args) {\r\n   // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n     System.out.println(\"Original linked list:\" + l_list);    \r\n  // Add an element to front of LinkedList\r\n     l_list.offerFirst(\"Pink\");\r\n     System.out.println(\"Final linked list:\" + l_list);  \r\n }\t\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to insert the specified element at the end of a linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\n  public class Exercise8 {\r\n  public static void main(String[] args) {\r\n   // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n     System.out.println(\"Original linked list:\" + l_list);    \r\n  // Add an element at the end of a linked list\r\n     l_list.offerLast(\"Pink\");\r\n     System.out.println(\"Final linked list:\" + l_list);  \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to insert some elements at the specified position into a linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\npublic class Exercise9 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> l_list = new LinkedList <String> ();\r\n  // use add() method to add values in the linked list\r\n  l_list.add(\"Red\");\r\n  l_list.add(\"Green\");\r\n  l_list.add(\"Black\");\r\n\r\n  // print original list\r\n  System.out.println(\"Original linked list:\" + l_list);\r\n\r\n  // create a new collection and add some elements\r\n\r\n  LinkedList <String> new_l_list = new LinkedList <String> ();\r\n  new_l_list.add(\"White\");\r\n  new_l_list.add(\"Pink\");\r\n\r\n  // Add the collection in the second position of the existing linked list\r\n  l_list.addAll(1, new_l_list);\r\n\r\n  // print the new list\r\n  System.out.println(\"LinkedList:\" + l_list);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to get the first and last occurrence of the specified elements in a linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\nimport java.util.Iterator;\r\n  public class Exercise10 {\r\n  public static void main(String[] args) {\r\n    // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n          l_list.add(\"Pink\");\r\n          l_list.add(\"orange\");\r\n      \r\n      // print original list\r\n   System.out.println(\"Original linked list:\" + l_list);  \r\n \r\n   // Find first element of the List\r\n    Object first_element = l_list.getFirst();\r\n    System.out.println(\"First Element is: \"+first_element);\r\n \r\n    // Find last element of the List\r\n    Object last_element = l_list.getLast();\r\n    System.out.println(\"Last Element is: \"+last_element);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to display the elements and their positions in a linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\nimport java.util.Iterator;\r\n  public class Exercise1 {\r\n  public static void main(String[] args) {\r\n    // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n          l_list.add(\"Pink\");\r\n          l_list.add(\"orange\");\r\n      \r\n      // print original list\r\n   System.out.println(\"Original linked list:\" + l_list);  \r\n  for(int p=0; p < l_list.size(); p++)\r\n   {\r\n      System.out.println(\"Element at index \"+p+\": \"+l_list.get(p));\r\n    } \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to remove a specified element from a linked list.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Exercise12 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> l_list = new LinkedList <String> ();\r\n  // use add() method to add values in the linked list\r\n  l_list.add(\"Red\");\r\n  l_list.add(\"Green\");\r\n  l_list.add(\"Black\");\r\n  l_list.add(\"Pink\");\r\n  l_list.add(\"orange\");\r\n\r\n  // print the list\r\n  System.out.println(\"The Original linked list: \" + l_list);\r\n\r\n  // Remove the element in third position from the said linked list\r\n  l_list.remove(2);\r\n  System.out.println(\"The New linked list: \" + l_list);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to remove first and last element from a linked list.", "exercise_solution_code": "import java.util.*;\r\n\r\n  public class Exercise13 {\r\n  public static void main(String[] args) {\r\n    // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n          l_list.add(\"Pink\");\r\n          l_list.add(\"orange\");\r\n      \r\n     // print the list\r\n   System.out.println(\"The Original linked list: \" + l_list);\r\n\r\n  // Remove the first element\r\n    Object firstElement = l_list.removeFirst();\r\n    System.out.println(\"Element removed: \"+ firstElement);\r\n \r\n  // Remove the last element\r\n    Object lastElement = l_list.removeLast();\r\n    System.out.println(\"Element removed: \"+ lastElement);\r\n    System.out.println(\"The New linked list: \" + l_list);\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to remove all the elements from a linked list.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise14 {\r\n  public static void main(String[] args) {\r\n    // create an empty linked list\r\n     LinkedList<String> l_list = new LinkedList<String>();\r\n   // use add() method to add values in the linked list\r\n          l_list.add(\"Red\");\r\n          l_list.add(\"Green\");\r\n          l_list.add(\"Black\");\r\n          l_list.add(\"Pink\");\r\n          l_list.add(\"orange\");\r\n      \r\n     // print the list\r\n   System.out.println(\"The Original linked list: \" + l_list);\r\n\r\n  // Removing all the elements from the linked list\r\n    l_list.clear();\r\n \r\n    System.out.println(\"The New linked list: \" + l_list);\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program of swap two elements in a linked list.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Exercise15 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> l_list = new LinkedList <String> ();\r\n  // use add() method to add values in the linked list\r\n  l_list.add(\"Red\");\r\n  l_list.add(\"Green\");\r\n  l_list.add(\"Black\");\r\n  l_list.add(\"Pink\");\r\n  l_list.add(\"orange\");\r\n  // print the list\r\n  System.out.println(\"The Original linked list: \" + l_list);\r\n  \r\n   //Swapping 1st(index 0) element(Red) with the 3rd(index 2) element (Black)\r\n    Collections.swap(l_list, 0, 2);\r\n    System.out.println(\"The New linked list after swap: \" + l_list);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to shuffle the elements in a linked list.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Exercise16 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> l_list = new LinkedList <String> ();\r\n  // use add() method to add values in the linked list\r\n  l_list.add(\"Red\");\r\n  l_list.add(\"Green\");\r\n  l_list.add(\"Black\");\r\n  l_list.add(\"Pink\");\r\n  l_list.add(\"orange\");\r\n  // print the list\r\n  System.out.println(\"Linked list before shuffling:\\n\" + l_list);  \r\n  Collections.shuffle(l_list);\r\n  System.out.println(\"Linked list after shuffling:\\n\" + l_list); \r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to join two linked lists.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise17 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> c1 = new LinkedList <String> ();\r\n  \r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"List of first linked list: \" + c1);\r\n         LinkedList <String> c2 = new LinkedList <String> ();\r\n          c2.add(\"Red\");\r\n          c2.add(\"Green\");\r\n          c2.add(\"Black\");\r\n          c2.add(\"Pink\");\r\n          System.out.println(\"List of second linked list: \" + c2);\r\n        \r\n      // Let join above two list\r\n        LinkedList <String> a = new LinkedList <String> ();\r\n        a.addAll(c1);\r\n        a.addAll(c2);\r\n        System.out.println(\"New linked list: \" + a);\r\n             }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to clone an linked list to another linked list.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise18 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> c1 = new LinkedList <String> ();\r\n            c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original linked  list: \" + c1);\r\n           LinkedList <String> newc1 = new LinkedList <String> ();\r\n                newc1 = (LinkedList)c1.clone();\r\n          System.out.println(\"Cloned linked list: \" + newc1);       \r\n}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to remove and return the first element of a linked list.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise19 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> c1 = new LinkedList <String> ();\r\n            c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original linked  list: \" + c1);\r\n           \r\n     System.out.println(\"Removed element: \"+c1.pop());\r\n     \r\n     System.out.println(\"Linked list after pop operation: \"+c1);\r\n  }\r\n} \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program to retrieve but does not remove, the first element of a linked list.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Exercise20 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> c1 = new LinkedList <String> ();\r\n            c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original linked list: \" + c1); \r\n     // Retrieve but does not remove, the first element of a linked list\r\n    String x = c1.peekFirst();\r\n    System.out.println(\"First element in the list: \" + x);\r\n    System.out.println(\"Original linked list: \" + c1);   \r\n }\r\n} \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to retrieve but does not remove, the last element of a linked list.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Exercise21 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> c1 = new LinkedList <String> ();\r\n            c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original linked list: \" + c1);    \r\n     // Retrieve but does not remove, the last element of a linked list\r\n        String x = c1.peekLast();\r\n    System.out.println(\"Last element in the list: \" + x);\r\n    System.out.println(\"Original linked list: \" + c1);\r\n    \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to check if a particular element exists in a linked list.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise22 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> c1 = new LinkedList <String> ();\r\n            c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original linked list: \" + c1);\r\n           \r\n     // Checks whether the color \"Green\" exists or not.\r\n    if (c1.contains(\"Green\")) {\r\n       System.out.println(\"Color Green is present in the linked list.\");\r\n    } else {\r\n       System.out.println(\"Color Green is not present in the linked list.\");\r\n     }\r\n    \r\n     // Checks whether the color \"Orange\" exists or not.\r\n    if (c1.contains(\"Orange\")) {\r\n       System.out.println(\"Color Orange is present in the linked list.\");\r\n    } else {\r\n       System.out.println(\"Color Orange is not present in the linked list.\");\r\n     }\r\n    \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java program to convert a linked list to array list.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Exercise23 {\r\n public static void main(String[] args) {\r\n  // create an empty linked list\r\n  LinkedList <String> linked_list = new LinkedList <String> ();\r\n            linked_list.add(\"Red\");\r\n          linked_list.add(\"Green\");\r\n          linked_list.add(\"Black\");\r\n          linked_list.add(\"White\");\r\n          linked_list.add(\"Pink\");\r\n          System.out.println(\"Original linked list: \" + linked_list);\r\n   \r\n      //Convert a linked list to array list    \r\n     List<String> list = new ArrayList<String>(linked_list);\r\n\r\n    for (String str : list){\r\n      System.out.println(str);\r\n    }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to compare two linked lists.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise24 {\r\n  public static void main(String[] args) {\r\n   LinkedList<String> c1= new LinkedList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n\r\n          LinkedList<String> c2= new LinkedList<String>();\r\n          c2.add(\"Red\");\r\n          c2.add(\"Green\");\r\n          c2.add(\"Black\");\r\n          c2.add(\"Orange\");\r\n\r\n          //comparison output in linked list\r\n          LinkedList<String> c3 = new LinkedList<String>();\r\n          for (String e : c1)\r\n             c3.add(c2.contains(e) ? \"Yes\" : \"No\");\r\n          System.out.println(c3);         \r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to test an linked list is empty or not.", "exercise_solution_code": "import java.util.LinkedList;\r\nimport java.util.Collections;\r\n  public class Exercise25 {\r\n  public static void main(String[] args) {\r\n          LinkedList<String> c1= new LinkedList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original linked list: \" + c1);\r\n          System.out.println(\"Check the above linked list is empty or not! \"+c1.isEmpty());\r\n          c1.removeAll(c1);\r\n          System.out.println(\"Linked list after remove all elements \"+c1);   \r\n          System.out.println(\"Check the above linked list is empty or not! \"+c1.isEmpty());\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to replace an element in a linked list.", "exercise_solution_code": "import java.util.LinkedList;\r\nimport java.util.Collections;\r\n  public class Exercise18 {\r\n  public static void main(String[] args) {\r\n          LinkedList<String> c1= new LinkedList<String>();\r\n          c1.add(\"Red\");\r\n          c1.add(\"Green\");\r\n          c1.add(\"Black\");\r\n          c1.add(\"White\");\r\n          c1.add(\"Pink\");\r\n          System.out.println(\"Original linked list: \" + c1);\r\n          // Replacing 2nd element with new value\r\n          c1.set(1, \"Orange\");\r\n          System.out.println(\"The value of second element changed.\");\r\n          System.out.println(\"New linked list: \" + c1);\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-linked-list-exercise-26.php"}], "Java Collection: HashSet Exercises [12 exercises with solution]\n": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to append the specified element to the end of a hash set.", "exercise_solution_code": "import java.util.HashSet;\r\n  public class Exercise1 {\r\n  public static void main(String[] args) {\r\n     // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet<String>();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n\r\n   // print the hash set\r\n   System.out.println(\"The Hash Set: \" + h_set);\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to iterate through all elements in a hash list.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Iterator;\r\n  public class Exercise2 {\r\n  public static void main(String[] args) {\r\n         // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet<String>();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n\r\n  // set Iterator \r\n    Iterator<String> p = h_set.iterator();\r\n  // Iterate the hash set\r\n   while (p.hasNext()) {\r\n   System.out.println(p.next());\r\n   }\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to get the number of elements in a hash set.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Iterator;\r\n  public class Exercise3 {\r\n  public static void main(String[] args) {\r\n         // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet<String>();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n    System.out.println(\"Original Hash Set: \" + h_set);\r\n    System.out.println(\"Size of the Hash Set: \" + h_set.size());\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to empty an hash set.", "exercise_solution_code": "import java.util.*;\r\n\r\n  public class Exercise4 {\r\n  public static void main(String[] args) {\r\n         // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet<String>();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n    System.out.println(\"Original Hash Set: \" + h_set);\r\n    // Remove all elements\r\n    h_set.removeAll(h_set);\r\n    System.out.println(\"Hash Set after removing all the elements \"+h_set);   \r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to test a hash set is empty or not.", "exercise_solution_code": "import java.util.*;\r\n\r\n  public class Exercise5 {\r\n  public static void main(String[] args) {\r\n         // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n    System.out.println(\"Original Hash Set: \" + h_set);\r\n    System.out.println(\"Checking the above array list is empty or not! \"+h_set.isEmpty());\r\n    System.out.println(\"Remove all the elements from a Hash Set: \");\r\n    h_set.removeAll(h_set);\r\n    System.out.println(\"Hash Set after removing all the elements \"+h_set);   \r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to clone a hash set to another hash set.", "exercise_solution_code": "import java.util.*;\r\n\r\n  public class Exercise6 {\r\n  public static void main(String[] args) {\r\n         // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet<String>();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n    System.out.println(\"Original Hash Set: \" + h_set);\r\n    HashSet <String> new_h_set = new HashSet <String> ();\r\n          new_h_set = (HashSet)h_set.clone();\r\n          System.out.println(\"Cloned Hash Set: \" + new_h_set);         \r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to convert a hash set to an array.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise7 {\r\n  public static void main(String[] args) {\r\n         // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet<String>();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n      System.out.println(\"Original Hash Set: \" + h_set);\r\n      // Creating an Array\r\n      String[] new_array = new String[h_set.size()];\r\n      h_set.toArray(new_array);\r\n \r\n     // Displaying Array elements\r\n     System.out.println(\"Array elements: \");\r\n      for(String element : new_array){\r\n        System.out.println(element);\r\n     }\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to convert a hash set to a tree set.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise8 {\r\n  public static void main(String[] args) {\r\n         // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet<String>();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n      System.out.println(\"Original Hash Set: \" + h_set);\r\n    \r\n     // Creat a TreeSet of HashSet elements\r\n     Set<String> tree_set = new TreeSet<String>(h_set);\r\n \r\n     // Display TreeSet elements\r\n     System.out.println(\"TreeSet elements: \");\r\n     for(String element : tree_set){\r\n        System.out.println(element);\r\n     }\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to convert a hash set to a List/ArrayList.", "exercise_solution_code": "import java.util.*;\r\n\r\n  public class Exercise9 {\r\n  public static void main(String[] args) {\r\n         // Create a empty hash set\r\n     HashSet<String> h_set = new HashSet<String>();\r\n   // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n          h_set.add(\"Pink\");\r\n          h_set.add(\"Yellow\");\r\n      System.out.println(\"Original Hash Set: \" + h_set);\r\n    \r\n    // Create a List from HashSet elements\r\n     List<String> list = new ArrayList<String>(h_set);\r\n \r\n     // Display ArrayList elements\r\n     System.out.println(\"ArrayList contains: \"+ list);\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to compare two hash set.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise10 {\r\n  public static void main(String[] args) {\r\n     // Create a empty hash set\r\n        HashSet<String> h_set = new HashSet<String>();\r\n     // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n\r\n          HashSet<String>h_set2 = new HashSet<String>();\r\n          h_set2.add(\"Red\");\r\n          h_set2.add(\"Pink\");\r\n          h_set2.add(\"Black\");\r\n          h_set2.add(\"Orange\");\r\n          //comparison output in hash set\r\n          HashSet<String>result_set = new HashSet<String>();\r\n         for (String element : h_set){\r\n             System.out.println(h_set2.contains(element) ? \"Yes\" : \"No\");\r\n          }      \r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to compare two sets and retain elements which are same on both sets.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise11 {\r\n  public static void main(String[] args) {\r\n     // Create a empty hash set\r\n        HashSet<String> h_set1 = new HashSet<String>();\r\n     // use add() method to add values in the hash set\r\n          h_set1.add(\"Red\");\r\n          h_set1.add(\"Green\");\r\n          h_set1.add(\"Black\");\r\n          h_set1.add(\"White\");\r\n          System.out.println(\"Frist HashSet content: \"+h_set1);\r\n          HashSet<String>h_set2 = new HashSet<String>();\r\n          h_set2.add(\"Red\");\r\n          h_set2.add(\"Pink\");\r\n          h_set2.add(\"Black\");\r\n          h_set2.add(\"Orange\");\r\n          System.out.println(\"Second HashSet content: \"+h_set2);\r\n          h_set1.retainAll(h_set2);\r\n          System.out.println(\"HashSet content:\");\r\n          System.out.println(h_set1);\r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to remove all of the elements from a hash set.", "exercise_solution_code": "import java.util.*;\r\n  public class Exercise12 {\r\n  public static void main(String[] args) {\r\n     // Create a empty hash set\r\n        HashSet<String> h_set = new HashSet<String>();\r\n     // use add() method to add values in the hash set\r\n          h_set.add(\"Red\");\r\n          h_set.add(\"Green\");\r\n          h_set.add(\"Black\");\r\n          h_set.add(\"White\");\r\n           System.out.println(\"Original hash set contains: \"+ h_set);\r\n      //  clear() method removes all the elements from a hash set\r\n      // and the set becomes empty.\r\n          h_set.clear();\r\n \r\n     // Display original hash set content again\r\n          System.out.println(\"HashSet content: \"+h_set);\r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-set-exercise-12.php"}], "Java Collection: TreeSet Exercises [16 exercises with solution]\n": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to create a new tree set, add some colors (string) and print out the tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\npublic class Exercise1 {\r\n  public static void main(String[] args) {\r\n  TreeSet<String> tree_set = new TreeSet<String>();\r\n  tree_set.add(\"Red\");\r\n  tree_set.add(\"Green\");\r\n  tree_set.add(\"Orange\");\r\n  tree_set.add(\"White\");\r\n  tree_set.add(\"Black\");\r\n  System.out.println(\"Tree set: \");\r\n  System.out.println(tree_set);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to iterate through all elements in a tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\npublic class Exercise2 {\r\n  public static void main(String[] args) {\r\n  TreeSet<String> tree_set = new TreeSet<String>();\r\n  tree_set.add(\"Red\");\r\n  tree_set.add(\"Green\");\r\n  tree_set.add(\"Orange\");\r\n  tree_set.add(\"White\");\r\n  tree_set.add(\"Black\");\r\n  // Print the tree list\r\n  for (String element : tree_set) {\r\n    System.out.println(element);\r\n    }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to add all the elements of a specified tree set to another tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\npublic class Exercise3 {\r\n  public static void main(String[] args) {\r\n  TreeSet<String> tree_set1 = new TreeSet<String>();\r\n  tree_set1.add(\"Red\");\r\n  tree_set1.add(\"Green\");\r\n  tree_set1.add(\"Orange\");\r\n  System.out.println(\"Tree set1: \"+tree_set1);\r\n  TreeSet<String> tree_set2 = new TreeSet<String>();\r\n  tree_set2.add(\"Pink\");\r\n  tree_set2.add(\"White\");\r\n  tree_set2.add(\"Black\");\r\n  System.out.println(\"Tree set2: \"+tree_set2);\r\n   // adding treetwo to treeone\r\n   tree_set1.addAll(tree_set2);\r\n   System.out.println(\"Tree set1: \"+tree_set1);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to create a reverse order view of the elements contained in a given tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n  public class Exercise4 {\r\n  public static void main(String[] args) {\r\n    // create an empty tree set\r\n     TreeSet<String> t_set = new TreeSet<String>();\r\n   // use add() method to add values in the tree set\r\n          t_set.add(\"Red\");\r\n          t_set.add(\"Green\");\r\n          t_set.add(\"Black\");\r\n          t_set.add(\"Pink\");\r\n          t_set.add(\"orange\");\r\n     // print original list\r\n   System.out.println(\"Original tree set:\" + t_set);  \r\n     Iterator it = t_set.descendingIterator();\r\n     // Print list elements in reverse order\r\n     System.out.println(\"Elements in Reverse Order:\");\r\n     while (it.hasNext()) {\r\n        System.out.println(it.next());\r\n     }\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to get the first and last elements in a tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\n  public class Exercise5 {\r\n  public static void main(String[] args) {\r\n  TreeSet<String> tree_set = new TreeSet<String>();\r\n  tree_set.add(\"Red\");\r\n  tree_set.add(\"Green\");\r\n  tree_set.add(\"Orange\");\r\n  tree_set.add(\"White\");\r\n  tree_set.add(\"Black\");\r\n  System.out.println(\"Tree set: \");\r\n  System.out.println(tree_set);\r\n\r\n   // Find first element of the tree set\r\n    Object first_element = tree_set.first();\r\n    System.out.println(\"First Element is: \"+first_element);\r\n \r\n    // Find last element of the tree set\r\n    Object last_element = tree_set.last();\r\n    System.out.println(\"Last Element is: \"+last_element);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to clone a tree set list to another tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise6 {\r\n  public static void main(String[] args) {\r\n    // create an empty tree set\r\n     TreeSet<String> t_set = new TreeSet<String>();\r\n   // use add() method to add values in the tree set\r\n          t_set.add(\"Red\");\r\n          t_set.add(\"Green\");\r\n          t_set.add(\"Black\");\r\n          t_set.add(\"Pink\");\r\n          t_set.add(\"orange\");\r\n     \r\n   System.out.println(\"Original tree set:\" + t_set);  \r\n    TreeSet<String> new_t_set = (TreeSet<String>)t_set.clone();\r\n          System.out.println(\"Cloned tree list: \" + t_set);      \r\n     }\r\n }\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to get the number of elements in a tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise7 {\r\n  public static void main(String[] args) {\r\n    // create an empty tree set\r\n     TreeSet<String> t_set = new TreeSet<String>();\r\n   // use add() method to add values in the tree set\r\n          t_set.add(\"Red\");\r\n          t_set.add(\"Green\");\r\n          t_set.add(\"Black\");\r\n          t_set.add(\"Pink\");\r\n          t_set.add(\"orange\");\r\n     System.out.println(\"Original tree set: \" + t_set);\r\n    System.out.println(\"Size of the tree set: \" + t_set.size());\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to compare two tree sets.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise8 {\r\n  public static void main(String[] args) {\r\n  // Create a empty tree set\r\n        TreeSet<String> t_set1 = new TreeSet<String>();\r\n     // use add() method to add values in the tree set\r\n          t_set1.add(\"Red\");\r\n          t_set1.add(\"Green\");\r\n          t_set1.add(\"Black\");\r\n          t_set1.add(\"White\");\r\n          System.out.println(\"Free Tree set: \"+t_set1);\r\n\r\n          TreeSet<String> t_set2 = new TreeSet<String>();\r\n          t_set2.add(\"Red\");\r\n          t_set2.add(\"Pink\");\r\n          t_set2.add(\"Black\");\r\n          t_set2.add(\"Orange\");\r\n          System.out.println(\"Second Tree set: \"+t_set2);\r\n          //comparison output in tree set\r\n          TreeSet<String> result_set = new TreeSet<String>();\r\n         for (String element : t_set1){\r\n             System.out.println(t_set2.contains(element) ? \"Yes\" : \"No\");\r\n          }      \r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to find the numbers less than 7 in a tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise9 {\r\n  public static void main(String[] args) {\r\n // creating TreeSet \r\n   TreeSet <Integer>tree_num = new TreeSet<Integer>();\r\n   TreeSet <Integer>treeheadset = new TreeSet<Integer>();\r\n     \r\n   // Add numbers in the tree\r\n   tree_num.add(1);\r\n   tree_num.add(2);\r\n   tree_num.add(3);\r\n   tree_num.add(5);\r\n   tree_num.add(6);\r\n   tree_num.add(7);\r\n   tree_num.add(8);\r\n   tree_num.add(9);\r\n   tree_num.add(10);\r\n     \r\n   // Find numbers less than 7\r\n treeheadset = (TreeSet)tree_num.headSet(7);  \r\n\r\n   // create an iterator\r\n   Iterator iterator;\r\n   iterator = treeheadset.iterator();\r\n     \r\n   //Displaying the tree set data\r\n   System.out.println(\"Tree set data: \");     \r\n   while (iterator.hasNext()){\r\n   System.out.println(iterator.next() + \" \");\r\n   }\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to get the element in a tree set which is greater than or equal to the given element.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise10 {\r\n  public static void main(String[] args) {\r\n // creating TreeSet \r\n   TreeSet <Integer>tree_num = new TreeSet<Integer>();\r\n   TreeSet <Integer>treeheadset = new TreeSet<Integer>();\r\n     \r\n   // Add numbers in the tree\r\n   tree_num.add(10);\r\n   tree_num.add(22);\r\n   tree_num.add(36);\r\n   tree_num.add(25);\r\n   tree_num.add(16);\r\n   tree_num.add(70);\r\n   tree_num.add(82);\r\n   tree_num.add(89);\r\n   tree_num.add(14);\r\n   \r\n   System.out.println(\"Greater than or equal to 86 : \"+tree_num.ceiling(86));\r\n   System.out.println(\"Greater than or equal to 29 : \"+tree_num.ceiling(29));\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to get the element in a tree set which is less than or equal to the given element.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n  public class Exercise11 {\r\n  public static void main(String[] args) {\r\n // creating TreeSet \r\n   TreeSet <Integer>tree_num = new TreeSet<Integer>();\r\n   TreeSet <Integer>treeheadset = new TreeSet<Integer>();\r\n     \r\n   // Add numbers in the tree\r\n   tree_num.add(10);\r\n   tree_num.add(22);\r\n   tree_num.add(36);\r\n   tree_num.add(25);\r\n   tree_num.add(16);\r\n   tree_num.add(70);\r\n   tree_num.add(82);\r\n   tree_num.add(89);\r\n   tree_num.add(14);\r\n   \r\n   System.out.println(\"Less than or equal to 86 : \"+tree_num.floor(86));\r\n   System.out.println(\"Less than or equal to 29 : \"+tree_num.floor(29));\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to get the element in a tree set which is strictly greater than or equal to the given element.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise12 {\r\n  public static void main(String[] args) {\r\n // creating TreeSet \r\n   TreeSet <Integer>tree_num = new TreeSet<Integer>();\r\n   TreeSet <Integer>treeheadset = new TreeSet<Integer>();\r\n     \r\n   // Add numbers in the tree\r\n   tree_num.add(10);\r\n   tree_num.add(22);\r\n   tree_num.add(36);\r\n   tree_num.add(25);\r\n   tree_num.add(16);\r\n   tree_num.add(70);\r\n   tree_num.add(82);\r\n   tree_num.add(89);\r\n   tree_num.add(14);\r\n   \r\n   System.out.println(\"Strictly greater than 76 : \"+tree_num.higher(76));\r\n   System.out.println(\"Strictly greater than 31 : \"+tree_num.higher(31));\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to get an element in a tree set which is strictly less than the given element.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise13 {\r\n  public static void main(String[] args) {\r\n // creating TreeSet \r\n   TreeSet <Integer>tree_num = new TreeSet<Integer>();\r\n   TreeSet <Integer>treeheadset = new TreeSet<Integer>();\r\n     \r\n   // Add numbers in the tree\r\n   tree_num.add(10);\r\n   tree_num.add(22);\r\n   tree_num.add(36);\r\n   tree_num.add(25);\r\n   tree_num.add(16);\r\n   tree_num.add(70);\r\n   tree_num.add(82);\r\n   tree_num.add(89);\r\n   tree_num.add(14);\r\n   \r\n   System.out.println(\"Strictly less than 69 : \"+tree_num.lower(69));\r\n   System.out.println(\"Strictly less than 12 : \"+tree_num.lower(12));\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to retrieve and remove the first element of a tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise14 {\r\n  public static void main(String[] args) {\r\n // creating TreeSet \r\n   TreeSet <Integer>tree_num = new TreeSet<Integer>();\r\n   TreeSet <Integer>treeheadset = new TreeSet<Integer>();\r\n     \r\n   // Add numbers in the tree\r\n   tree_num.add(10);\r\n   tree_num.add(22);\r\n   tree_num.add(36);\r\n   tree_num.add(25);\r\n   tree_num.add(16);\r\n   tree_num.add(70);\r\n   tree_num.add(82);\r\n   tree_num.add(89);\r\n   tree_num.add(14);\r\n   System.out.println(\"Original tree set: \"+tree_num);\r\n   System.out.println(\"Removes the first(lowest) element: \"+tree_num.pollFirst());\r\n   System.out.println(\"Tree set after removing first element: \"+tree_num);\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to retrieve and remove the last element of a tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise15 {\r\n  public static void main(String[] args) {\r\n // creating TreeSet \r\n   TreeSet <Integer>tree_num = new TreeSet<Integer>();\r\n   TreeSet <Integer>treeheadset = new TreeSet<Integer>();\r\n     \r\n   // Add numbers in the tree\r\n   tree_num.add(10);\r\n   tree_num.add(22);\r\n   tree_num.add(36);\r\n   tree_num.add(25);\r\n   tree_num.add(16);\r\n   tree_num.add(70);\r\n   tree_num.add(82);\r\n   tree_num.add(89);\r\n   tree_num.add(14);\r\n   System.out.println(\"Original tree set: \"+tree_num);\r\n   System.out.println(\"Removes the last element: \"+tree_num.pollLast());\r\n   System.out.println(\"Tree set after removing last element: \"+tree_num);\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to remove a given element from a tree set.", "exercise_solution_code": "import java.util.TreeSet;\r\nimport java.util.Iterator;\r\n\r\n  public class Exercise16 {\r\n  public static void main(String[] args) {\r\n // creating TreeSet \r\n   TreeSet <Integer>tree_num = new TreeSet<Integer>();\r\n   TreeSet <Integer>treeheadset = new TreeSet<Integer>();\r\n     \r\n   // Add numbers in the tree\r\n   tree_num.add(10);\r\n   tree_num.add(22);\r\n   tree_num.add(36);\r\n   tree_num.add(25);\r\n   tree_num.add(16);\r\n   tree_num.add(70);\r\n   tree_num.add(82);\r\n   tree_num.add(89);\r\n   tree_num.add(14);\r\n   System.out.println(\"Original tree set: \"+tree_num);\r\n   System.out.println(\"Removes 70 from the list: \"+tree_num.remove(70));\r\n   System.out.println(\"Tree set after removing last element: \"+tree_num);\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-set-exercise-16.php"}], "Java Collection: PriorityQueue Exercises [12 exercises with solution]\n": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to create a new priority queue, add some colors (string) and print out the elements of the priority queue.", "exercise_solution_code": "import java.util.PriorityQueue;\r\npublic class Exercise1 {\r\n  public static void main(String[] args) {\r\n  PriorityQueue<String> queue=new PriorityQueue<String>();  \r\n  queue.add(\"Red\");\r\n  queue.add(\"Green\");\r\n  queue.add(\"Orange\");\r\n  queue.add(\"White\");\r\n  queue.add(\"Black\");\r\n  System.out.println(\"Elements of the Priority Queue: \");\r\n  System.out.println(queue);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to iterate through all elements in priority queue.", "exercise_solution_code": "import java.util.PriorityQueue;\r\npublic class Exercise2 {\r\n  public static void main(String[] args) {\r\n    PriorityQueue<String> pq = new PriorityQueue<String>();  \r\n  pq.add(\"Red\");\r\n  pq.add(\"Green\");\r\n  pq.add(\"Orange\");\r\n  pq.add(\"White\");\r\n  pq.add(\"Black\");\r\n  System.out.println(\"Elements of the Priority Queue: \");\r\n  // iterate the Priority Queue\r\n  for (String element : pq) {\r\n    System.out.println(element);\r\n    }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to add all the elements of a priority queue to another priority queue.", "exercise_solution_code": "import java.util.PriorityQueue;\r\npublic class Exercise3 {\r\npublic static void main(String[] args) {\r\n  PriorityQueue<String> queue1 = new PriorityQueue<String>();  \r\n  queue1.add(\"Red\");\r\n  queue1.add(\"Green\");\r\n  queue1.add(\"Orange\");\r\n  System.out.println(\"Priority Queue1: \"+queue1);\r\n  PriorityQueue<String> queue2 = new PriorityQueue<String>();  \r\n  queue2.add(\"Pink\");\r\n  queue2.add(\"White\");\r\n  queue2.add(\"Black\");\r\n  System.out.println(\"Priority Queue2: \"+queue2);\r\n    // adding queue2 to queue1\r\n   queue1.addAll(queue2);\r\n   System.out.println(\"New Priority Queue1: \"+queue1);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to insert a given element into a priority queue.", "exercise_solution_code": "import java.util.PriorityQueue;\r\n\r\n  public class Example4 {\r\n  public static void main(String[] args) {\r\n\r\n   // Create Priority Queue\r\n           PriorityQueue<String> pq1 = new PriorityQueue<String>();  \r\n   // use add() method to add values in the Priority Queue\r\n          pq1.add(\"Red\");\r\n          pq1.add(\"Green\");\r\n          pq1.add(\"Black\");\r\n          pq1.add(\"White\");\r\n    System.out.println(\"Original Priority Queue: \"+pq1);\r\n   \r\n   // Inserts the specified element into this priority queue.\r\n    pq1.offer(\"Blue\");\r\n \r\n    System.out.println(\"The New Priority Queue: \" + pq1);\r\n  } \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to remove all the elements from a priority queue.", "exercise_solution_code": "import java.util.*;\r\n  public class Example5 {\r\n  public static void main(String[] args) {\r\n   // Create Priority Queue\r\n           PriorityQueue<String> pq1 = new PriorityQueue<String>();  \r\n   // use add() method to add values in the Priority Queue\r\n          pq1.add(\"Red\");\r\n          pq1.add(\"Green\");\r\n          pq1.add(\"Black\");\r\n          pq1.add(\"White\");\r\n    System.out.println(\"Original Priority Queue: \"+pq1);\r\n   \r\n   // Removing all the elements from the Priority Queue\r\n    pq1.clear();\r\n \r\n    System.out.println(\"The New Priority Queue: \" + pq1);\r\n  } \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to count the number of elements in a priority queue.", "exercise_solution_code": "import java.util.PriorityQueue;\r\n  public class Exercise6 {\r\n  public static void main(String[] args) {\r\n    // create an empty Priority Queue\r\n    PriorityQueue<String> pq = new PriorityQueue<String>();  \r\n   // use add() method to add values in the Priority Queue\r\n          pq.add(\"Red\");\r\n          pq.add(\"Green\");\r\n          pq.add(\"Black\");\r\n          pq.add(\"Pink\");\r\n          pq.add(\"orange\");\r\n     System.out.println(\"Priority Queue: \" + pq);\r\n    System.out.println(\"Size of the Priority Queue: \" + pq.size());\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to compare two priority queues.", "exercise_solution_code": "import java.util.PriorityQueue;\r\n  public class Exercise7 {\r\n  public static void main(String[] args) {\r\n  // Create a empty Priority Queue\r\n        PriorityQueue<String> pq1 = new PriorityQueue<String>();  \r\n     // use add() method to add values in the Priority Queue\r\n          pq1.add(\"Red\");\r\n          pq1.add(\"Green\");\r\n          pq1.add(\"Black\");\r\n          pq1.add(\"White\");\r\n          System.out.println(\"First Priority Queue: \"+pq1);\r\n          PriorityQueue<String> pq2 = new PriorityQueue<String>();  \r\n          pq2.add(\"Red\");\r\n          pq2.add(\"Pink\");\r\n          pq2.add(\"Black\");\r\n          pq2.add(\"Orange\");\r\n          System.out.println(\"Second Priority Queue: \"+pq2);\r\n          //comparison output in Priority Queue\r\n         for (String element : pq1){\r\n             System.out.println(pq2.contains(element) ? \"Yes\" : \"No\");\r\n          }      \r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to retrieve the first element of the priority queue.", "exercise_solution_code": "import java.util.PriorityQueue;\r\n  public class Example8 {\r\n  public static void main(String[] args) {\r\n\r\n   // Create Priority Queue\r\n      PriorityQueue<Integer> pq1 = new PriorityQueue<Integer>();  \r\n      PriorityQueue<Integer> pq2 = new PriorityQueue<Integer>();  \r\n        \r\n   // Add numbers in the Queue\r\n   pq1.add(10);\r\n   pq1.add(22);\r\n   pq1.add(36);\r\n   pq1.add(25);\r\n   pq1.add(16);\r\n   pq1.add(70);\r\n   pq1.add(82);\r\n   pq1.add(89);\r\n   pq1.add(14);\r\n   System.out.println(\"Original Priority Queue: \"+pq1);\r\n   System.out.println(\"The first element of the Queue: \"+pq1.peek());\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to retrieve and remove the first element.", "exercise_solution_code": "import java.util.PriorityQueue;\r\n\r\n  public class Exercise9 {\r\n  public static void main(String[] args) {\r\n   // Create Priority Queue\r\n      PriorityQueue<Integer> pq1 = new PriorityQueue<Integer>();  \r\n      PriorityQueue<Integer> pq2 = new PriorityQueue<Integer>();     \r\n   // Add numbers in the Priority Queue\r\n   pq1.add(10);\r\n   pq1.add(22);\r\n   pq1.add(36);\r\n   pq1.add(25);\r\n   pq1.add(16);\r\n   pq1.add(70);\r\n   pq1.add(82);\r\n   pq1.add(89);\r\n   pq1.add(14);\r\n   System.out.println(\"Original Priority Queue: \"+pq1);\r\n   System.out.println(\"Removes the first element: \"+pq1.poll());\r\n   System.out.println(\"Priority Queue after removing first element: \"+pq1);\r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to convert a priority queue to an array containing all of the elements of the queue.", "exercise_solution_code": "import java.util.*;\r\n\r\n  public class Example10 {\r\n  public static void main(String[] args) {\r\n\r\n   // Create Priority Queue\r\n           PriorityQueue<String> pq1 = new PriorityQueue<String>();  \r\n   // use add() method to add values in the Priority Queue\r\n          pq1.add(\"Red\");\r\n          pq1.add(\"Green\");\r\n          pq1.add(\"Black\");\r\n          pq1.add(\"White\");\r\n    System.out.println(\"Original Priority Queue: \"+pq1);\r\n   \r\n   //Convert a linked list to array list    \r\n   List<String> array_list = new ArrayList<String>(pq1);\r\n   System.out.println(\"Array containing all of the elements in the queue: \"+array_list);\r\n    \r\n   }    \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to convert a Priority Queue elements to a string representation.", "exercise_solution_code": "import java.util.*;\r\n  public class Example11 {\r\n  public static void main(String[] args) {\r\n\r\n   // Create Priority Queue\r\n           PriorityQueue<String> pq1 = new PriorityQueue<String>();  \r\n   // use add() method to add values in the Priority Queue\r\n          pq1.add(\"Red\");\r\n          pq1.add(\"Green\");\r\n          pq1.add(\"Black\");\r\n          pq1.add(\"White\");\r\n    System.out.println(\"Original Priority Queue: \"+pq1);\r\n   \r\n   //Convert Priority Queue to a string representation\r\n   String str1;\r\n   str1 = pq1.toString();\r\n   System.out.println(\"String representation of the Priority Queue: \"+str1);    \r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to change priorityQueue to maximum priorityqueue.", "exercise_solution_code": "import java.util.*;\r\n  public class Example12 {\r\n  public static void main(String[] args) {\r\n  PriorityQueue<Integer> pq1 = new PriorityQueue<>(10, Collections.reverseOrder());\r\n      \r\n   // Add numbers in the Queue\r\n   pq1.add(10);\r\n   pq1.add(22);\r\n   pq1.add(36);\r\n   pq1.add(25);\r\n   pq1.add(16);\r\n   pq1.add(70);\r\n   pq1.add(82);\r\n   pq1.add(89);\r\n   pq1.add(14);\r\n   System.out.println(\"\\nOriginal Priority Queue: \"+pq1);\r\n\r\nSystem.out.print(\"\\nMaximum Priority Queue: \");\r\nInteger val = null;\r\nwhile( (val = pq1.poll()) != null) {\r\n    System.out.print(val+\"  \");\r\n      }\r\n\t  System.out.print(\"\\n\");\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-priority-queue-exercise-12.php"}], "Java Collection: HashMap Exercises [12 exercises with solution]\n": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to associate the specified value with the specified key in a HashMap.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example1 {  \r\n  public static void main(String args[]) {  \r\n  HashMap<Integer,String> hash_map= new HashMap<Integer,String>();  \r\n  hash_map.put(1, \"Red\");\r\n  hash_map.put(2, \"Green\");\r\n  hash_map.put(3, \"Black\");\r\n  hash_map.put(4, \"White\");\r\n  hash_map.put(5, \"Blue\");\r\n  for(Map.Entry x:hash_map.entrySet()){  \r\n   System.out.println(x.getKey()+\" \"+x.getValue());  \r\n  }  \r\n }  \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to count the number of key-value (size) mappings in a map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example2 {  \r\n   public static void main(String args[]){  \r\n  HashMap<Integer,String> hash_map= new HashMap<Integer,String>();  \r\n  hash_map.put(1, \"Red\");\r\n  hash_map.put(2, \"Green\");\r\n  hash_map.put(3, \"Black\");\r\n  hash_map.put(4, \"White\");\r\n  hash_map.put(5, \"Blue\");\r\n  System.out.println(\"Size of the hash map: \"+hash_map.size());\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to copy all of the mappings from the specified map to another map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example3 {  \r\n   public static void main(String args[]) {\r\n  // create two hash maps\r\n  HashMap <Integer,String> hash_map1 = new HashMap <Integer,String> ();\r\n  HashMap <Integer,String> hash_map2 = new HashMap <Integer,String> ();\r\n  // populate hash maps\r\n  hash_map1.put(1, \"Red\");\r\n  hash_map1.put(2, \"Green\");\r\n  hash_map1.put(3, \"Black\");\r\n  System.out.println(\"\\nValues in first map: \" + hash_map1);\r\n  hash_map2.put(4, \"White\");\r\n  hash_map2.put(5, \"Blue\");\r\n  hash_map2.put(6, \"Orange\");\r\n  System.out.println(\"\\nValues in second map: \" + hash_map2);\r\n\r\n  // put all values in secondmap\r\n  hash_map2.putAll(hash_map1);\r\n  System.out.println(\"\\nNow values in second map: \" + hash_map2);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to remove all of the mappings from a map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example4 {  \r\n   public static void main(String args[]) {\r\n  HashMap <Integer,String> hash_map = new HashMap <Integer,String> ();\r\n  hash_map.put(1, \"Red\");\r\n  hash_map.put(2, \"Green\");\r\n  hash_map.put(3, \"Black\");\r\n  hash_map.put(4, \"White\");\r\n  hash_map.put(5, \"Blue\");\r\n  // print the map\r\n  System.out.println(\"The Original linked map: \" + hash_map);\r\n  // Removing all the elements from the linked map\r\n  hash_map.clear();\r\n  System.out.println(\"The New map: \" + hash_map);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to check whether a map contains key-value mappings (empty) or not.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example5 {  \r\n   public static void main(String args[]) {\r\n  HashMap <Integer,String> hash_map = new HashMap <Integer,String> ();\r\n  hash_map.put(1, \"Red\");\r\n  hash_map.put(2, \"Green\");\r\n  hash_map.put(3, \"Black\");\r\n  hash_map.put(4, \"White\");\r\n  hash_map.put(5, \"Blue\");\r\n  // check if map is empty\r\n  boolean result = hash_map.isEmpty();\r\n  // check the result\r\n  System.out.println(\"Is hash map empty: \" + result);\r\n  // Removing all the elements from the linked map\r\n  hash_map.clear();\r\n  // check if map is empty\r\n  result = hash_map.isEmpty();\r\n  // check the result\r\n  System.out.println(\"Is hash map empty: \" + result);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to get a shallow copy of a HashMap instance.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example6 {  \r\n   public static void main(String args[]){  \r\n  HashMap<Integer,String> hash_map= new HashMap<Integer,String>();  \r\n  hash_map.put(1, \"Red\");\r\n  hash_map.put(2, \"Green\");\r\n  hash_map.put(3, \"Black\");\r\n  hash_map.put(4, \"White\");\r\n  hash_map.put(5, \"Blue\");\r\n    // print the map\r\n   System.out.println(\"The Original map: \" + hash_map);\r\n   HashMap<Integer,String> new_hash_map= new HashMap<Integer,String>(); \r\n   new_hash_map = (HashMap)hash_map.clone();     \r\n   System.out.println(\"Cloned map: \" + new_hash_map);        \r\n     }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to test if a map contains a mapping for the specified key.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example7 {  \r\n   public static void main(String args[]) {\r\n  HashMap < String, Integer > hash_map = new HashMap < String, Integer > ();\r\n  hash_map.put(\"Red\", 1);\r\n  hash_map.put(\"Green\", 2);\r\n  hash_map.put(\"Black\", 3);\r\n  hash_map.put(\"White\", 4);\r\n  hash_map.put(\"Blue\", 5);\r\n  // print the map\r\n  System.out.println(\"The Original map: \" + hash_map);\r\n  System.out.println(\"1. Is key 'Green' exists?\");\r\n  if (hash_map.containsKey(\"Green\")) {\r\n   //key exists\r\n   System.out.println(\"yes! - \" + hash_map.get(\"Green\"));\r\n  } else {\r\n   //key does not exists\r\n   System.out.println(\"no!\");\r\n  }\r\n\r\n  System.out.println(\"\\n2. Is key 'orange' exists?\");\r\n  if (hash_map.containsKey(\"orange\")) {\r\n   System.out.println(\"yes! - \" + hash_map.get(\"orange\"));\r\n  } else {\r\n   System.out.println(\"no!\");\r\n  }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to test if a map contains a mapping for the specified value.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example8 {  \r\n   public static void main(String args[]) {\r\n  HashMap < Integer, String > hash_map = new HashMap < Integer, String > ();\r\n  hash_map.put(1, \"Red\");\r\n  hash_map.put(2, \"Green\");\r\n  hash_map.put(3, \"Black\");\r\n  hash_map.put(4, \"White\");\r\n  hash_map.put(5, \"Blue\");\r\n  // print the map\r\n  System.out.println(\"The Original map: \" + hash_map);\r\n  System.out.println(\"1. Is value \\'Green\\' exists?\");\r\n  if (hash_map.containsValue(\"Green\")) {\r\n   //value exists\r\n   System.out.println(\"Yes! \");\r\n  } else {\r\n   //value does not exists\r\n   System.out.println(\"no!\");\r\n  }\r\n\r\n  System.out.println(\"\\n2. Is value \\'orange\\' exists?\");\r\n  if (hash_map.containsValue(\"orange\")) {\r\n   System.out.println(\"yes! - \" );\r\n  } else {\r\n   System.out.println(\"No!\");\r\n  }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to create a set view of the mappings contained in a map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example9 {  \r\n    public static void main(String args[]) {\r\n  HashMap < Integer, String > hash_map = new HashMap < Integer, String > ();\r\n  hash_map.put(1, \"Red\");\r\n  hash_map.put(2, \"Green\");\r\n  hash_map.put(3, \"Black\");\r\n  hash_map.put(4, \"White\");\r\n  hash_map.put(5, \"Blue\");\r\n  // create set view for the map\r\n  Set set = hash_map.entrySet();\r\n  // check set values\r\n  System.out.println(\"Set values: \" + set);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to get the value of a specified key in a map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example10 {  \r\n    public static void main(String args[]){  \r\n   HashMap<Integer,String> hash_map= new HashMap<Integer,String>();  \r\n   hash_map.put(1,\"Red\");\r\n  hash_map.put(2,\"Green\");\r\n  hash_map.put(3,\"Black\");\r\n  hash_map.put(4,\"White\");\r\n  hash_map.put(5,\"Blue\");\r\n     // get value of key 3\r\n   String val=(String)hash_map.get(3); \r\n   // check the value\r\n   System.out.println(\"Value for key 3 is: \" + val);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to get a set view of the keys contained in this map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example11 {  \r\n     public static void main(String args[]){  \r\n \r\n  HashMap<Integer,String> hash_map= new HashMap<Integer,String>();  \r\n  \r\n  hash_map.put(1,\"Red\");\r\n  hash_map.put(2,\"Green\");\r\n  hash_map.put(3,\"Black\");\r\n  hash_map.put(4,\"White\");\r\n  hash_map.put(5,\"Blue\");\r\n  \r\n  // get keyset value from map\r\n   Set keyset = hash_map.keySet();\r\n      \r\n  // check key set values\r\n   System.out.println(\"Key set values are: \" + keyset);  \r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to get a collection view of the values contained in this map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example12 {  \r\n     public static void main(String args[]){  \r\n \r\n  HashMap<Integer,String> hash_map= new HashMap<Integer,String>();  \r\n    hash_map.put(1,\"Red\");\r\n  hash_map.put(2,\"Green\");\r\n  hash_map.put(3,\"Black\");\r\n  hash_map.put(4,\"White\");\r\n  hash_map.put(5,\"Blue\");\r\n       \r\n   // checking collection view of the map\r\n   System.out.println(\"Collection view is: \"+ hash_map.values());\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-hash-map-exercise-12.php"}], "Java Collection: TreeMap Exercises [26 exercises with solution]\n": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to associate the specified value with the specified key in a Tree Map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example1 {  \r\n  public static void main(String args[]){  \r\n   // Create a tree map\r\n   TreeMap<Integer,String> tree_map=new TreeMap<Integer,String>();      \r\n  // Put elements to the map \r\n  tree_map.put(1, \"Red\");\r\n  tree_map.put(2, \"Green\");\r\n  tree_map.put(3, \"Black\");\r\n  tree_map.put(4, \"White\");\r\n  tree_map.put(5, \"Blue\");\r\n    \r\n   for (Map.Entry<Integer,String> entry : tree_map.entrySet())\r\n   {\r\n    System.out.println(entry.getKey() + \"=>\" + entry.getValue());\r\n   }\r\n }  \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to copy a Tree Map content to another Tree Map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example2 {  \r\n   public static void main(String args[]){  \r\n  \r\n  // Create a tree map\r\n   TreeMap<String,String> tree_map1=new TreeMap<String,String>();      \r\n  \r\n  // Put elements to the map \r\n  tree_map1.put(\"C1\", \"Red\");\r\n  tree_map1.put(\"C2\", \"Green\");\r\n  tree_map1.put(\"C3\", \"Black\");\r\n  tree_map1.put(\"C4\", \"White\");\r\n  tree_map1.put(\"C5\", \"Blue\");\r\n   System.out.println(\"Tree Map 1: \"+tree_map1);\r\n   TreeMap<String,String> tree_map2 = new TreeMap<String,String>();\r\n   tree_map2.put(\"A1\", \"Orange\");\r\n   tree_map2.put(\"A2\", \"Pink\");\r\n   System.out.println(\"Tree Map 2: \"+tree_map2);\r\n   tree_map1.putAll(tree_map2);\r\n   System.out.println(\"After coping map2 to map1: \"+tree_map1);   \r\n }  \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to search a key in a Tree Map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example3 {  \r\n   public static void main(String args[]){  \r\n  \r\n  // Create a tree map\r\n   TreeMap<String,String> tree_map1=new TreeMap<String,String>();      \r\n  \r\n  // Put elements to the map \r\n  tree_map1.put(\"C1\", \"Red\");\r\n  tree_map1.put(\"C2\", \"Green\");\r\n  tree_map1.put(\"C3\", \"Black\");\r\n  tree_map1.put(\"C4\", \"White\"); \r\n    \r\n  System.out.println(tree_map1);\r\n        if(tree_map1.containsKey(\"C1\")){\r\n            System.out.println(\"The Tree Map contains key C1\");\r\n        } else {\r\n            System.out.println(\"The Tree Map does not contain key C1\");\r\n        }\r\n        if(tree_map1.containsKey(\"C5\")){\r\n            System.out.println(\"The Tree Map contains key C5\");\r\n        } else {\r\n            System.out.println(\"The TreeMap does not contain key C5\");\r\n        }\r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to search a value in a Tree Map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example4 {  \r\n   public static void main(String args[]){  \r\n  \r\n  // Create a tree map\r\n   TreeMap<String,String> tree_map1=new TreeMap<String,String>();      \r\n  \r\n  // Put elements to the map \r\n  tree_map1.put(\"C1\", \"Red\");\r\n  tree_map1.put(\"C2\", \"Green\");\r\n  tree_map1.put(\"C3\", \"Black\");\r\n  tree_map1.put(\"C4\", \"White\"); \r\n    \r\n if(tree_map1.containsValue(\"Green\")){\r\n            System.out.println(\"The TreeMap contains value Green\");\r\n        } else {\r\n            System.out.println(\"The TreeMap does not contain value Green\");\r\n        }\r\n        if(tree_map1.containsValue(\"Pink\")){\r\n            System.out.println(\"The TreeMap contains value Pink\");\r\n        } else {\r\n            System.out.println(\"The TreeMap does not contain value Pink\");\r\n        }\r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to get all keys from the given a Tree Map.", "exercise_solution_code": "import java.util.*;  \r\npublic class Example5 {  \r\n   public static void main(String args[]){  \r\n   // Create a tree map\r\n   TreeMap<String,String> tree_map1=new TreeMap<String,String>();      \r\n   // Put elements to the map \r\n  tree_map1.put(\"C1\", \"Red\");\r\n  tree_map1.put(\"C2\", \"Green\");\r\n  tree_map1.put(\"C3\", \"Black\");\r\n  tree_map1.put(\"C4\", \"White\"); \r\n    \r\n Set<String> keys = tree_map1.keySet();\r\n        for(String key: keys){\r\n            System.out.println(key);\r\n        }\r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to delete all elements from a given Tree Map.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example6 {  \r\n    public static void main(String args[]){  \r\n    // Create a tree map\r\n   TreeMap<String,String> tree_map1 = new TreeMap<String,String>();      \r\n    // Put elements to the map \r\n  tree_map1.put(\"C1\", \"Red\");\r\n  tree_map1.put(\"C2\", \"Green\");\r\n  tree_map1.put(\"C3\", \"Black\");\r\n  tree_map1.put(\"C4\", \"White\"); \r\n    \r\n  System.out.println(\"Orginal TreeMap content: \"+tree_map1);\r\n  tree_map1.clear();\r\n  System.out.println(\"The New map: \"+tree_map1);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to sort keys in Tree Map by using comparator.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example7 {  \r\n    public static void main(String args[]){  \r\n  TreeMap<String,String> tree_map1 = new TreeMap<String,String>(new sort_key());\r\n   // Put elements to the map \r\n  tree_map1.put(\"C2\", \"Red\");\r\n  tree_map1.put(\"C4\", \"Green\");\r\n  tree_map1.put(\"C3\", \"Black\");\r\n  tree_map1.put(\"C1\", \"White\"); \r\n  System.out.println(tree_map1); \r\n    }\r\n}\r\n class sort_key implements Comparator<String>{\r\n     @Override\r\n    public int compare(String str1, String str2) {\r\n        return str1.compareTo(str2);\r\n    }\r\n     \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to get a key-value mapping associated with the greatest key and the least key in a map.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example8 {  \r\n     public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap <String,String> tree_map1 = new TreeMap <String,String> ();\r\n\r\n  // Put elements to the map \r\n  tree_map1.put(\"C1\", \"Red\");\r\n  tree_map1.put(\"C2\", \"Green\");\r\n  tree_map1.put(\"C3\", \"Black\");\r\n  tree_map1.put(\"C4\", \"White\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Greatest key: \" + tree_map1.firstEntry());\r\n  System.out.println(\"Least key: \" + tree_map1.lastEntry());\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to get the first (lowest) key and the last (highest) key currently in a map.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example9 {  \r\n     public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap <String,String> tree_map1 = new TreeMap <String,String> ();\r\n\r\n  // Put elements to the map \r\n  tree_map1.put(\"C2\", \"Red\");\r\n  tree_map1.put(\"C1\", \"Green\");\r\n  tree_map1.put(\"C4\", \"Black\");\r\n  tree_map1.put(\"C3\", \"White\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Greatest key: \" + tree_map1.firstKey());\r\n  System.out.println(\"Least key: \" + tree_map1.lastKey());\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to get a reverse order view of the keys contained in a given map.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example10 {  \r\n     public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap <String,String> tree_map1 = new TreeMap <String,String> ();\r\n\r\n  // Put elements to the map \r\n  tree_map1.put(\"C2\", \"Red\");\r\n  tree_map1.put(\"C1\", \"Green\");\r\n  tree_map1.put(\"C4\", \"Black\");\r\n  tree_map1.put(\"C3\", \"White\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Reverse order view of the keys: \" + tree_map1.descendingKeySet());\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to get a key-value mapping associated with the greatest key less than or equal to the given key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example11 {  \r\n     public static void main(String args[]) {\r\n  // Create a tree map\r\n  TreeMap < Integer, String > tree_map1 = new TreeMap < Integer, String > ();\r\n  // Put elements to the map \r\n  tree_map1.put(10, \"Red\");\r\n  tree_map1.put(20, \"Green\");\r\n  tree_map1.put(40, \"Black\");\r\n  tree_map1.put(50, \"White\");\r\n  tree_map1.put(60, \"Pink\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Checking the entry for 10: \");\r\n  System.out.println(\"Value is: \" + tree_map1.floorEntry(10));\r\n  System.out.println(\"Checking the entry for 30: \");\r\n  System.out.println(\"Value is: \" + tree_map1.floorEntry(30));\r\n  System.out.println(\"Checking the entry for 70: \");\r\n  System.out.println(\"Value is: \" + tree_map1.floorEntry(70));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to get the greatest key less than or equal to the given key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example12 {  \r\n      public static void main(String args[]) {\r\n  // Create a tree map\r\n  TreeMap < Integer, String > tree_map1 = new TreeMap < Integer, String > ();\r\n  // Put elements to the map \r\n  tree_map1.put(10, \"Red\");\r\n  tree_map1.put(20, \"Green\");\r\n  tree_map1.put(40, \"Black\");\r\n  tree_map1.put(50, \"White\");\r\n  tree_map1.put(60, \"Pink\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Checking the entry for 10: \");\r\n  System.out.println(\"Key is: \" + tree_map1.floorKey(10));\r\n  System.out.println(\"Checking the entry for 30: \");\r\n  System.out.println(\"Key is: \" + tree_map1.floorKey(30));\r\n  System.out.println(\"Checking the entry for 70: \");\r\n  System.out.println(\"Key is: \" + tree_map1.floorKey(70));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to get the portion of a map whose keys are strictly less than a given key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example13 {  \r\n       public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap < Integer, String > tree_map1 = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map1.put(10, \"Red\");\r\n  tree_map1.put(20, \"Green\");\r\n  tree_map1.put(40, \"Black\");\r\n  tree_map1.put(50, \"White\");\r\n  tree_map1.put(60, \"Pink\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Checking the entry for 10: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.headMap(10));\r\n  System.out.println(\"Checking the entry for 30: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.headMap(30));\r\n  System.out.println(\"Checking the entry for 70: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.headMap(70));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to get the portion of this map whose keys are less than (or equal to, if inclusive is true) a given key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example14 {  \r\n       public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap < Integer, String > tree_map1 = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map1.put(10, \"Red\");\r\n  tree_map1.put(20, \"Green\");\r\n  tree_map1.put(40, \"Black\");\r\n  tree_map1.put(50, \"White\");\r\n  tree_map1.put(60, \"Pink\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Checking the entry for 10: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.headMap(10, true));\r\n  System.out.println(\"Checking the entry for 20: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.headMap(20, true));\r\n  System.out.println(\"Checking the entry for 70: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.headMap(70, true));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to get the least key strictly greater than the given key. Return null if there is no such key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example15 {  \r\n       public static void main(String args[]){  \r\n  \r\n    // Create a tree map\r\n   TreeMap< Integer, String > tree_map1 = new TreeMap< Integer, String >();      \r\n  \r\n  // Put elements to the map \r\n  tree_map1.put(10, \"Red\");\r\n  tree_map1.put(20, \"Green\");\r\n  tree_map1.put(40, \"Black\");\r\n  tree_map1.put(50, \"White\"); \r\n  tree_map1.put(60, \"Pink\"); \r\n    \r\n      System.out.println(\"Orginal TreeMap content: \"+tree_map1);\r\n\t  System.out.println(\"Checking the entry for 10: \");\r\n      System.out.println(\"Key(s): \"+tree_map1.higherEntry(10));  \r\n\t  System.out.println(\"Checking the entry for 20: \");\r\n      System.out.println(\"Key(s): \"+tree_map1.higherEntry(20));  \r\n\t  System.out.println(\"Checking the entry for 70: \");\r\n      System.out.println(\"Key(s): \"+tree_map1.higherEntry(70));  \r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to get a key-value mapping associated with the greatest key strictly less than the given key. Return null if there is no such key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example16 {  \r\n       public static void main(String args[]){  \r\n  \r\n    // Create a tree map\r\n   TreeMap< Integer, String > tree_map1 = new TreeMap< Integer, String >();      \r\n  \r\n  // Put elements to the map \r\n  tree_map1.put(10, \"Red\");\r\n  tree_map1.put(20, \"Green\");\r\n  tree_map1.put(40, \"Black\");\r\n  tree_map1.put(50, \"White\"); \r\n  tree_map1.put(60, \"Pink\"); \r\n    \r\n      System.out.println(\"Orginal TreeMap content: \"+tree_map1);\r\n\t  System.out.println(\"Checking the entry for 10: \");\r\n      System.out.println(\"Key(s): \"+tree_map1.lowerEntry(10));  \r\n\t  System.out.println(\"Checking the entry for 20: \");\r\n      System.out.println(\"Key(s): \"+tree_map1.lowerEntry(20));  \r\n\t  System.out.println(\"Checking the entry for 70: \");\r\n      System.out.println(\"Key(s): \"+tree_map1.lowerEntry(70));  \r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to get the greatest key strictly less than the given key. Return null if there is no such key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example17 {  \r\n         public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap < Integer, String > tree_map1 = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map1.put(10, \"Red\");\r\n  tree_map1.put(20, \"Green\");\r\n  tree_map1.put(40, \"Black\");\r\n  tree_map1.put(50, \"White\");\r\n  tree_map1.put(60, \"Pink\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Checking the entry for 10: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.lowerKey(10));\r\n  System.out.println(\"Checking the entry for 20: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.lowerKey(20));\r\n  System.out.println(\"Checking the entry for 70: \");\r\n  System.out.println(\"Key(s): \" + tree_map1.lowerKey(70));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to get NavigableSet view of the keys contained in a map.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example18 {  \r\n         public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap < Integer, String > tree_map1 = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map1.put(10, \"Red\");\r\n  tree_map1.put(20, \"Green\");\r\n  tree_map1.put(40, \"Black\");\r\n  tree_map1.put(50, \"White\");\r\n  tree_map1.put(60, \"Pink\");\r\n\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1);\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map1.navigableKeySet());\r\n\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to remove and get a key-value mapping associated with the least key in a map.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example19 {  \r\n         public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap < Integer, String > tree_map = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map.put(10, \"Red\");\r\n  tree_map.put(20, \"Green\");\r\n  tree_map.put(40, \"Black\");\r\n  tree_map.put(50, \"White\");\r\n  tree_map.put(60, \"Pink\");\r\n\r\n  // polling first entry\r\n  System.out.println(\"Value before poll: \" + tree_map);\r\n  System.out.println(\"Value returned: \" + tree_map.pollFirstEntry());\r\n  System.out.println(\"Value after poll: \" + tree_map);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program to remove and get a key-value mapping associated with the greatest key in this map.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example20 {  \r\n          public static void main(String args[]) {\r\n\r\n  // Create a tree map\r\n  TreeMap < Integer, String > tree_map = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map.put(10, \"Red\");\r\n  tree_map.put(20, \"Green\");\r\n  tree_map.put(40, \"Black\");\r\n  tree_map.put(50, \"White\");\r\n  tree_map.put(60, \"Pink\");\r\n\r\n  // polling first entry\r\n  System.out.println(\"Value before poll: \" + tree_map);\r\n  System.out.println(\"Value returned: \" + tree_map.pollLastEntry());\r\n  System.out.println(\"Value after poll: \" + tree_map);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to get the portion of a map whose keys range from a given key (inclusive), to another key (exclusive).", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example21 {  \r\n          public static void main(String args[]) {\r\n\r\n  // Declare tree maps\r\n  TreeMap < Integer, String > tree_map = new TreeMap < Integer, String > ();\r\n  SortedMap < Integer, String > sub_tree_map = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map.put(10, \"Red\");\r\n  tree_map.put(20, \"Green\");\r\n  tree_map.put(30, \"Black\");\r\n  tree_map.put(40, \"White\");\r\n  tree_map.put(50, \"Pink\");\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map);\r\n  sub_tree_map = tree_map.subMap(20, 40);\r\n  System.out.println(\"Sub map key-values: \" + sub_tree_map);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to get the portion of a map whose keys range from a given key to another key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example22 {  \r\n           public static void main(String args[]) {\r\n\r\n  // Declare tree maps\r\n  TreeMap < Integer, String > tree_map = new TreeMap < Integer, String > ();\r\n  SortedMap < Integer, String > sub_tree_map = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map.put(10, \"Red\");\r\n  tree_map.put(20, \"Green\");\r\n  tree_map.put(30, \"Black\");\r\n  tree_map.put(40, \"White\");\r\n  tree_map.put(50, \"Pink\");\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map);\r\n  sub_tree_map = tree_map.subMap(20, true, 40, true);\r\n  System.out.println(\"Sub map key-values: \" + sub_tree_map);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java program to get a portion of a map whose keys are greater than or equal to a given key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example23 {  \r\n           public static void main(String args[]) {\r\n\r\n  // Declare tree maps\r\n  TreeMap < Integer, String > tree_map = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map.put(10, \"Red\");\r\n  tree_map.put(20, \"Green\");\r\n  tree_map.put(30, \"Black\");\r\n  tree_map.put(40, \"White\");\r\n  tree_map.put(50, \"Pink\");\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map);\r\n  System.out.println(\"Keys are greater than or equal to 20: \" + tree_map.tailMap(20));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to get a portion of a map whose keys are greater than to a given key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example24 {  \r\n           public static void main(String args[]) {\r\n\r\n  // Declare tree maps\r\n  TreeMap < Integer, String > tree_map = new TreeMap < Integer, String > ();\r\n\r\n  // Put elements to the map \r\n  tree_map.put(10, \"Red\");\r\n  tree_map.put(20, \"Green\");\r\n  tree_map.put(30, \"Black\");\r\n  tree_map.put(40, \"White\");\r\n  tree_map.put(50, \"Pink\");\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map);\r\n  System.out.println(\"Keys are greater than 20: \" + tree_map.tailMap(20, false));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to get a key-value mapping associated with the least key greater than or equal to the given key. Return null if there is no such key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example25 {  \r\n           public static void main(String args[]) {\r\n  // Declare tree maps\r\n  TreeMap < Integer, String > tree_map = new TreeMap < Integer, String > ();\r\n  // Put elements to the map \r\n  tree_map.put(10, \"Red\");\r\n  tree_map.put(20, \"Green\");\r\n  tree_map.put(30, \"Black\");\r\n  tree_map.put(40, \"White\");\r\n  tree_map.put(50, \"Pink\");\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map);\r\n  System.out.println(\"Keys greater than or equal to 20: \" + tree_map.ceilingEntry(20));\r\n  System.out.println(\"Keys greater than or equal to 40: \" + tree_map.ceilingEntry(40));\r\n  System.out.println(\"Keys greater than or equal to 50: \" + tree_map.ceilingEntry(50));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to get the least key greater than or equal to the given key. Returns null if there is no such key.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Map.Entry;  \r\npublic class Example26 {  \r\n          public static void main(String args[]) {\r\n  // Declare tree maps\r\n  TreeMap < Integer, String > tree_map = new TreeMap < Integer, String > ();\r\n  // Put elements to the map \r\n  tree_map.put(10, \"Red\");\r\n  tree_map.put(20, \"Green\");\r\n  tree_map.put(40, \"Black\");\r\n  tree_map.put(50, \"White\");\r\n  tree_map.put(60, \"Pink\");\r\n  System.out.println(\"Orginal TreeMap content: \" + tree_map);\r\n  System.out.println(\"Keys greater than or equal to 20: \" + tree_map.ceilingKey(20));\r\n  System.out.println(\"Keys greater than or equal to 30: \" + tree_map.ceilingKey(30));\r\n  System.out.println(\"Keys greater than or equal to 50: \" + tree_map.ceilingKey(50));\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/collection/java-collection-tree-map-exercise-26.php"}]}, "Basic Part-I": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to print 'Hello' on screen and then print your name on a separate line. \nExpected Output :\nHello\n\nAlexandra Abramov", "exercise_solution_code": "public class Exercise1 {\r\n \r\n public static void main(String[] args) {\r\n  System.out.println(\"Hello\\nAlexandra Abramov!\");\r\n }\r\n \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to print the sum of two numbers. \nTest Data: \n74 + 36 \nExpected Output :\n110", "exercise_solution_code": "public class Exercise2 {\r\n \r\n public static void main(String[] args) {\r\n  System.out.println(24+26);\r\n }\r\n \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to divide two numbers and print on the screen. \nTest Data : \n50/3\nExpected Output :\n16", "exercise_solution_code": "public class Exercise3 {\r\n \r\n public static void main(String[] args) {\r\n  System.out.println(50/3);\r\n }\r\n \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to print the result of the following operations. \nTest Data:\na. -5 + 8 * 6\nb. (55+9) % 9 \nc. 20 + -3*5 / 8 \nd. 5 + 15 / 3 * 2 - 8 % 3 \nExpected Output :\n43 \n1 \n19 \n13", "exercise_solution_code": "public class Exercise4 {\r\n \r\n public static void main(String[] args) {\r\n  System.out.println(-5 + 8 * 6);\r\n  System.out.println((55+9) % 9);\r\n  System.out.println(20 + -3*5 / 8);\r\n  System.out.println(5 + 15 / 3 * 2 - 8 % 3);\r\n }\r\n \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program that takes two numbers as input and display the product of two numbers. \nTest Data:\nInput first number: 25\nInput second number: 5\nExpected Output :\n25 x 5 = 125", "exercise_solution_code": "import java.util.Scanner;\r\n \r\npublic class Exercise5 {\r\n \r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n   \r\n  System.out.print(\"Input first number: \");\r\n  int num1 = in.nextInt();\r\n   \r\n  System.out.print(\"Input second number: \");\r\n  int num2 = in.nextInt();\r\n   \r\n  System.out.println(num1 + \" x \" + num2 + \" = \" + num1 * num2);\r\n }\r\n \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to print the sum (addition), multiply, subtract, divide and remainder of two numbers. \nTest Data:\nInput first number: 125\nInput second number: 24\nExpected Output :\n125 + 24 = 149\n125 - 24 = 101\n125 x 24 = 3000\n125 / 24 = 5\n125 mod 24 = 5", "exercise_solution_code": "import java.util.Scanner;\r\n \r\npublic class Exercise6 {\r\n \r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n   \r\n  System.out.print(\"Input first number: \");\r\n  int num1 = in.nextInt();\r\n   \r\n  System.out.print(\"Input second number: \");\r\n  int num2 = in.nextInt();\r\n   \r\n \r\n  System.out.println(num1 + \" + \" + num2 + \" = \" + \r\n  (num1 + num2));\r\n   \r\n  System.out.println(num1 + \" - \" + num2 + \" = \" + \r\n  (num1 - num2));\r\n   \r\n  System.out.println(num1 + \" x \" + num2 + \" = \" + \r\n  (num1 * num2));\r\n   \r\n  System.out.println(num1 + \" / \" + num2 + \" = \" + \r\n  (num1 / num2));\r\n \r\n  System.out.println(num1 + \" mod \" + num2 + \" = \" + \r\n  (num1 % num2));\r\n }\r\n \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program that takes a number as input and prints its multiplication table upto 10. \nTest Data:\nInput a number: 8\nExpected Output :\n8 x 1 = 8\n8 x 2 = 16\n8 x 3 = 24\n...\n8 x 10 = 80", "exercise_solution_code": "import java.util.Scanner;\r\n \r\npublic class Exercise7 {\r\n \r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n   \r\n  System.out.print(\"Input a number: \");\r\n  int num1 = in.nextInt();\r\n   \r\n  for (int i=0; i< 10; i++){\r\n   System.out.println(num1 + \" x \" + (i+1) + \" = \" + \r\n     (num1 * (i+1)));\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to display the following pattern. \nSample Pattern :J    a   v     v  a                                                  \r\n   J   a a   v   v  a a                                                 \r\nJ  J  aaaaa   V V  aaaaa                                                \r\n JJ  a     a   V  a     a", "exercise_solution_code": "public class Exercise8 {\r\n \r\n    public static void main(String[] args) {\r\n\r\n        System.out.println(\"   J    a   v     v  a \");\r\n        System.out.println(\"   J   a a   v   v  a a\");\r\n        System.out.println(\"J  J  aaaaa   V V  aaaaa\");\r\n        System.out.println(\" JJ  a     a   V  a     a\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to compute the specified expressions and print the output. \nTest Data:\n((25.5 * 3.5 - 3.5 * 3.5) / (40.5 - 4.5))\n\nExpected Output\n2.138888888888889", "exercise_solution_code": "public class Exercise9 {\r\n \r\n    public static void main(String[] arg) {\r\n\r\n        System.out.println((25.5 * 3.5 - 3.5 * 3.5) / (40.5 - 4.5));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to compute a specified formula. \nSpecified Formula :\n\n4.0 * (1 - (1.0/3) + (1.0/5) - (1.0/7) + (1.0/9) - (1.0/11))\nExpected Output\n2.9760461760461765", "exercise_solution_code": "public class Exercise10 {\r\n    public static void main(String[] args) {\r\n        double result = 4.0 * (1 - (1.0/3) + (1.0/5) - (1.0/7) + (1.0/9) - (1.0/11));\r\n        System.out.println(result); //\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to print the area and perimeter of a circle. \nTest Data:\nRadius = 7.5 \nExpected Output\nPerimeter is = 47.12388980384689 \nArea is = 176.71458676442586", "exercise_solution_code": "\r\npublic class Exercise11 {\r\n \r\n   private static final double radius = 7.5;\r\n\r\n    public static void main(String[] args) {\r\n\r\n        double perimeter = 2 * Math.PI * radius;\r\n        double area = Math.PI * radius * radius;\r\n\r\n        System.out.println(\"Perimeter is = \" + perimeter);\r\n        System.out.println(\"Area is = \" + area);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program that takes three numbers as input to calculate and print the average of the numbers.", "exercise_solution_code": "import java.util.Scanner;\r\n \r\npublic class Exercise12 {\r\n \r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n   \r\n  System.out.print(\"Input first number: \");\r\n  int num1 = in.nextInt();\r\n   \r\n  System.out.print(\"Input second number: \");\r\n  int num2 = in.nextInt();\r\n   \r\n  System.out.print(\"Input third number: \");\r\n  int num3 = in.nextInt();\r\n   \r\n  System.out.print(\"Input fourth number: \");\r\n  int num4 = in.nextInt();\r\n  \r\n  System.out.print(\"Enter fifth number: \");\r\n  int num5 = in.nextInt();\r\n   \r\n   \r\n  System.out.println(\"Average of five numbers is: \" + \r\n   (num1 + num2 + num3 + num4 + num5) / 5);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to print the area and perimeter of a rectangle. \nTest Data:\nWidth = 5.5\nHeight = 8.5Expected Output\nArea is 5.6 * 8.5 = 47.60\nPerimeter is 2 * (5.6 + 8.5) = 28.20", "exercise_solution_code": "public class Exercise13 {\r\n \r\n   public static void main(String[] strings) {\r\n\r\n        final double width = 5.6;\r\n        final double height = 8.5;\r\n\r\n        double perimeter = 2*(height + width);\r\n\t\t\r\n        double area = width * height;\t\t\t\r\n\t\t\r\n\t\tSystem.out.printf(\"Perimeter is 2*(%.1f + %.1f) = %.2f \\n\", height, width, perimeter);\r\n\r\n        System.out.printf(\"Area is %.1f * %.1f = %.2f \\n\", width, height, area);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to print an American flag on the screen. \nExpected Output* * * * * * ==================================                          \r\n * * * * *  ==================================                          \r\n* * * * * * ==================================                          \r\n * * * * *  ==================================                          \r\n* * * * * * ==================================                          \r\n * * * * *  ==================================                          \r\n* * * * * * ==================================                          \r\n * * * * *  ==================================                          \r\n* * * * * * ==================================                          \r\n==============================================                          \r\n==============================================                          \r\n==============================================                          \r\n==============================================                          \r\n==============================================                          \r\n==============================================", "exercise_solution_code": "public class Exercise14 {\r\n \r\n   public static void main(String[] args)\r\n    {\r\n        System.out.println(\"* * * * * * ==================================\");\r\n        System.out.println(\" * * * * *  ==================================\");\r\n        System.out.println(\"* * * * * * ==================================\");\r\n        System.out.println(\" * * * * *  ==================================\");\r\n        System.out.println(\"* * * * * * ==================================\");\r\n        System.out.println(\" * * * * *  ==================================\");\r\n        System.out.println(\"* * * * * * ==================================\");\r\n        System.out.println(\" * * * * *  ==================================\");\r\n        System.out.println(\"* * * * * * ==================================\");\r\n        System.out.println(\"==============================================\");\r\n        System.out.println(\"==============================================\");\r\n        System.out.println(\"==============================================\");\r\n        System.out.println(\"==============================================\");\r\n        System.out.println(\"==============================================\");\r\n        System.out.println(\"==============================================\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to swap two variables.", "exercise_solution_code": "public class Exercise15 {\r\n \r\n public static void main(String[] args) {\r\n     \r\n   int a, b, temp;\r\n   a = 15;\r\n   b = 27;\r\n   System.out.println(\"Before swapping : a, b = \"+a+\", \"+ + b);\r\n   temp = a;\r\n   a = b;\r\n   b = temp;   \r\n  System.out.println(\"After swapping : a, b = \"+a+\", \"+ + b);\r\n }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to print a face. \nExpected Output+\"\"\"\"\"+                                                 \r\n[| o o |]                                                \r\n |  ^  |                                                 \r\n | '-' |                                                 \r\n +-----+", "exercise_solution_code": "\r\npublic class Exercise16 {\r\n    public static void main(String[] args)\r\n    {\r\n        System.out.println(\" +\\\"\\\"\\\"\\\"\\\"+ \");\r\n        System.out.println(\"[| o o |]\");\r\n        System.out.println(\" |  ^  | \");\r\n        System.out.println(\" | '-' | \");\r\n        System.out.println(\" +-----+ \");\r\n    }\r\n\t}\r\n\t\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to add two binary numbers. \nInput Data:\nInput first binary number: 10 \nInput second binary number: 11\nExpected OutputSum of two binary numbers: 101", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise17 {\r\n public static void main(String[] args)\r\n {\r\n  long binary1, binary2;\r\n  int i = 0, remainder = 0;\r\n  int[] sum = new int[20];\r\n  Scanner in = new Scanner(System.in);\r\n\r\n  System.out.print(\"Input first binary number: \");\r\n  binary1 = in.nextLong();\r\n  System.out.print(\"Input second binary number: \");\r\n  binary2 = in.nextLong();\r\n\r\n  while (binary1 != 0 || binary2 != 0) \r\n  {\r\n   sum[i++] = (int)((binary1 % 10 + binary2 % 10 + remainder) % 2);\r\n   remainder = (int)((binary1 % 10 + binary2 % 10 + remainder) / 2);\r\n   binary1 = binary1 / 10;\r\n   binary2 = binary2 / 10;\r\n  }\r\n  if (remainder != 0) {\r\n   sum[i++] = remainder;\r\n  }\r\n  --i;\r\n  System.out.print(\"Sum of two binary numbers: \");\r\n  while (i >= 0) {\r\n   System.out.print(sum[i--]);\r\n  }\r\n   System.out.print(\"\\n\");  \r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to multiply two binary numbers. \nInput Data:\nInput the first binary number: 10 \nInput the second binary number: 11 \nExpected OutputProduct of two binary numbers: 110", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise18 {\r\n public static void main(String[] args)\r\n {\r\n  long binary1, binary2, multiply = 0;\r\n  int digit, factor = 1;\r\n  Scanner in = new Scanner(System.in);\r\n  System.out.print(\"Input the first binary number: \");\r\n  binary1 = in.nextLong();\r\n  System.out.print(\"Input the second binary number: \");\r\n  binary2 = in.nextLong();\r\n  while (binary2 != 0)\r\n  {\r\n   digit = (int)(binary2 % 10);\r\n   if (digit == 1) \r\n   {\r\n    binary1 = binary1 * factor;\r\n    multiply = binaryproduct((int) binary1, (int) multiply);\r\n   } \r\n   else\r\n   {\r\n    binary1 = binary1 * factor;\r\n   }\r\n   binary2 = binary2 / 10;\r\n   factor = 10;\r\n  }\r\n  System.out.print(\"Product of two binary numbers: \" + multiply+\"\\n\");\r\n }\r\n static int binaryproduct(int binary1, int binary2) \r\n {\r\n  int i = 0, remainder = 0;\r\n  int[] sum = new int[20];\r\n  int binary_prod_result = 0;\r\n\r\n  while (binary1 != 0 || binary2 != 0) \r\n  {\r\n   sum[i++] = (binary1 % 10 + binary2 % 10 + remainder) % 2;\r\n   remainder = (binary1 % 10 + binary2 % 10 + remainder) / 2;\r\n   binary1 = binary1 / 10;\r\n   binary2 = binary2 / 10;\r\n  }\r\n  if (remainder != 0)\r\n  {\r\n   sum[i++] = remainder;\r\n  }\r\n  --i;\r\n  while (i >= 0) \r\n  {\r\n   binary_prod_result = binary_prod_result * 10 + sum[i--];\r\n  }\r\n  return binary_prod_result;\r\n }\r\n }\r\n \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to convert a decimal number to binary number. \nInput Data:\nInput a Decimal Number : 5\nExpected OutputBinary number is: 101", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise19 {\r\n      public static void main(String args[])\r\n    {\r\n        int dec_num, quot, i=1, j;\r\n        int bin_num[] = new int[100];\r\n        Scanner scan = new Scanner(System.in);\r\n\t\t\r\n        System.out.print(\"Input a Decimal Number : \");\r\n        dec_num = scan.nextInt();\r\n\t\t\r\n        quot = dec_num;\r\n\t\t\r\n        while(quot != 0)\r\n        {\r\n            bin_num[i++] = quot%2;\r\n            quot = quot/2;\r\n        }\r\n\t\t\r\n        System.out.print(\"Binary number is: \");\r\n        for(j=i-1; j>0; j--)\r\n        {\r\n            System.out.print(bin_num[j]);\r\n        }\r\n        System.out.print(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program to convert a decimal number to hexadecimal number. \nInput Data:\nInput a decimal number: 15\nExpected OutputHexadecimal number is : F", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise20 {\r\n      public static void main(String args[])\r\n    {\r\n        int dec_num, rem;\r\n        String hexdec_num=\"\";\r\n        \r\n        /* hexadecimal number digits */\r\n        \r\n        char hex[]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};\r\n        \r\n        Scanner in = new Scanner(System.in);\r\n\t\t\r\n        System.out.print(\"Input a decimal number: \");\r\n        dec_num = in.nextInt();\r\n\t\t\r\n        while(dec_num>0)\r\n        {\r\n            rem = dec_num%16;\r\n            hexdec_num = hex[rem] + hexdec_num;\r\n            dec_num = dec_num/16;\r\n        }\r\n        System.out.print(\"Hexadecimal number is : \"+hexdec_num+\"\\n\");         \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to convert a decimal number to octal number. \nInput Data:\nInput a Decimal Number: 15 \nExpected OutputOctal number is: 17", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise21 {\r\n      public static void main(String args[])\r\n    {\r\n            int dec_num, rem, quot, i=1, j;\r\n        int oct_num[] = new int[100];\r\n        Scanner scan = new Scanner(System.in);\r\n\t\t\r\n        System.out.print(\"Input a Decimal Number: \");\r\n        dec_num = scan.nextInt();\r\n\t\t\r\n        quot = dec_num;\r\n\t\t\r\n        while(quot != 0)\r\n        {\r\n            oct_num[i++] = quot%8;\r\n            quot = quot/8;\r\n        }\r\n\t\t\r\n        System.out.print(\"Octal number is: \");\r\n        for(j=i-1; j>0; j--)\r\n        {\r\n            System.out.print(oct_num[j]);\r\n        }\r\n\t\tSystem.out.print(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to convert a binary number to decimal number. \nInput Data:\nInput a binary number: 100\nExpected OutputDecimal Number: 4", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise22 {\r\n public static void main(String[] args) \r\n {\r\n  Scanner sc = new Scanner(System.in);\r\n  long binaryNumber, decimalNumber = 0, j = 1, remainder;\r\n  System.out.print(\"Input a binary number: \");\r\n  binaryNumber = sc.nextLong();\r\n\r\n  while (binaryNumber != 0) \r\n  {\r\n   remainder = binaryNumber % 10;\r\n   decimalNumber = decimalNumber + remainder * j;\r\n   j = j * 2;\r\n   binaryNumber = binaryNumber / 10;\r\n  }\r\n  System.out.println(\"Decimal Number: \" + decimalNumber);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java program to convert a binary number to hexadecimal number. \nInput Data:\nInput a Binary Number: 1101 \nExpected OutputHexaDecimal value: D", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise23 {\r\n public static void main(String[] args) \r\n {\r\n  int[] hex = new int[1000];\r\n  int i = 1, j = 0, rem, dec = 0, bin;\r\n  Scanner in = new Scanner(System.in);\r\n  System.out.print(\"Input a Binary Number: \");\r\n  bin = in.nextInt();\r\n  while (bin > 0) {\r\n   rem = bin % 2;\r\n   dec = dec + rem * i;\r\n   i = i * 2;\r\n   bin = bin / 10;\r\n  }\r\n   i = 0;\r\n  while (dec != 0) {\r\n   hex[i] = dec % 16;\r\n   dec = dec / 16;\r\n   i++;\r\n  }\r\n  System.out.print(\"HexaDecimal value: \");\r\n  for (j = i - 1; j >= 0; j--)\r\n  {\r\n   if (hex[j] > 9) \r\n   {\r\n    System.out.print((char)(hex[j] + 55)+\"\\n\");\r\n   } else\r\n   {\r\n    System.out.print(hex[j]+\"\\n\");\r\n   }\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to convert a binary number to a Octal number. \nInput Data:\nInput a Binary Number: 111 \nExpected OutputOctal number: 7", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise24 {\r\npublic static void main(String[] args) \r\n    {\r\n        int binnum, binnum1,rem, decnum=0, quot, i=1, j;\r\n        int octnum[] = new int[100];\r\n        Scanner scan = new Scanner(System.in);\r\n\t\tSystem.out.print(\"Input a Binary Number : \");\r\n        binnum = scan.nextInt();\r\n        binnum1=binnum;\r\n     \r\n      while(binnum > 0)\r\n        {\r\n            rem = binnum % 10;\r\n            decnum = decnum + rem*i;\r\n            //System.out.println(rem);\r\n            i = i*2;\r\n            binnum = binnum/10;\r\n        }   \r\n\r\n\t\ti=1;\r\n        quot = decnum;\r\n\t\t\r\n        while(quot > 0)\r\n        {\r\n            octnum[i++] = quot % 8;\r\n            quot = quot / 8;\r\n        }\r\n\t\t\r\n        System.out.print(\"Equivalent Octal Value of \" +binnum1+ \" is :\");\r\n        for(j=i-1; j>0; j--)\r\n        {\r\n            System.out.print(octnum[j]);\r\n        }\r\n System.out.print(\"\\n\");\r\n \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to convert a octal number to a decimal number. \nInput Data:\nInput any octal number: 10 \nExpected OutputEquivalent decimal number: 8", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise25 {\r\n \r\npublic static void main(String[] args) \r\n   {\r\n     Scanner in = new Scanner(System.in);\r\n     long octal_num, decimal_num = 0;\r\n     int i = 0;\r\n     System.out.print(\"Input any octal number: \");\r\n    octal_num = in.nextLong();\r\n    while (octal_num != 0) \r\n     {\r\n      decimal_num = (long)(decimal_num + (octal_num % 10) * Math.pow(8, i++));\r\n      octal_num = octal_num / 10;\r\n     }\r\n    System.out.print(\"Equivalent decimal number: \" + decimal_num+\"\\n\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to convert a octal number to a binary number. \nInput Data:\nInput any octal number: 7 \nExpected OutputEquivalent binary number: 111", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise26 {\r\npublic static void main(String[] args) \r\n {\r\n  Scanner in = new Scanner(System.in);\r\n  int[] octal_numvalues = {0, 1, 10, 11, 100, 101, 110, 111};\r\n  long octal_num, tempoctal_num, binary_num, place;\r\n  int rem;\r\n  System.out.print(\"Input any octal number: \");\r\n  octal_num = in.nextLong();\r\n  tempoctal_num = octal_num;\r\n  binary_num = 0;\r\n  place = 1;\r\n  while (tempoctal_num != 0)\r\n  {\r\n   rem = (int)(tempoctal_num % 10);\r\n   binary_num = octal_numvalues[rem] * place + binary_num;\r\n   tempoctal_num /= 10;\r\n   place *= 1000;\r\n  }\r\n  System.out.print(\"Equivalent binary number: \" + binary_num+\"\\n\");\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-26.php"}, {"exercise_number": 27, "exercise_content": "27. Write a Java program to convert a octal number to a hexadecimal number. \nInput Data:\nInput a octal number : 100 \nExpected OutputEquivalent hexadecimal number: 40", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise27 {\r\npublic static void main(String args[])\r\n    {\r\n        String octal_num, hex_num;\r\n        int decnum;\r\n        Scanner in = new Scanner(System.in);\r\n\t\t\r\n        System.out.print(\"Input a octal number : \");\r\n        octal_num = in.nextLine();\r\n\t\t\r\n        decnum = Integer.parseInt(octal_num, 8);\r\n        hex_num = Integer.toHexString(decnum);\r\n\t\t\r\n        System.out.print(\"Equivalent hexadecimal number: \"+ hex_num+\"\\n\");\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-27.php"}, {"exercise_number": 28, "exercise_content": "28. Write a Java program to convert a hexadecimal to a decimal number. \nInput Data:\nInput a hexadecimal number: 25\nExpected OutputEquivalent decimal number is: 37", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise28 {\r\n   public static int hex_to_decimal(String s)\r\n    {\r\n             String digits = \"0123456789ABCDEF\";\r\n             s = s.toUpperCase();\r\n             int val = 0;\r\n             for (int i = 0; i < s.length(); i++)\r\n             {\r\n                 char c = s.charAt(i);\r\n                 int d = digits.indexOf(c);\r\n                 val = 16*val + d;\r\n             }\r\n             return val;\r\n    }\r\n    public static void main(String args[])\r\n    {\r\n        String hexdec_num;\r\n        int dec_num;\r\n        Scanner scan = new Scanner(System.in);\r\n\t\t\r\n        System.out.print(\"Input a hexadecimal number: \");\r\n        hexdec_num = scan.nextLine();\r\n\t\t\r\n        dec_num = hex_to_decimal(hexdec_num);\r\n\t\t\r\n        System.out.print(\"Equivalent decimal number is: \" + dec_num+\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-28.php"}, {"exercise_number": 29, "exercise_content": "29. Write a Java program to convert a hexadecimal to a binary number. \nInput Data:\nEnter Hexadecimal Number : 37\nExpected OutputEquivalent Binary Number is: 110111", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise29 {\r\n     public static int hex_to_decimal(String s)\r\n    {\r\n             String digits = \"0123456789ABCDEF\";\r\n             s = s.toUpperCase();\r\n             int val = 0;\r\n             for (int i = 0; i < s.length(); i++)\r\n             {\r\n                 char c = s.charAt(i);\r\n                 int d = digits.indexOf(c);\r\n                 val = 16*val + d;\r\n             }\r\n             return val;\r\n    }\r\n    public static void main(String args[])\r\n    {\r\n        String hexdec_num;\r\n        int dec_num, i=1, j;\r\n        int bin_num[] = new int[100];\r\n        Scanner scan = new Scanner(System.in);\r\n\t\t\r\n        System.out.print(\"Enter Hexadecimal Number : \");\r\n        hexdec_num = scan.nextLine();\r\n        \r\n        /* convert hexadecimal to decimal */        \r\n        dec_num = hex_to_decimal(hexdec_num);\r\n        \r\n        /* convert decimal to binary */        \r\n        while(dec_num != 0)\r\n        {\r\n            bin_num[i++] = dec_num%2;\r\n            dec_num = dec_num/2;\r\n        }\r\n\t\t\r\n        System.out.print(\"Equivalent Binary Number is: \");\r\n        for(j=i-1; j>0; j--)\r\n        {\r\n            System.out.print(bin_num[j]);\r\n        }\r\n        System.out.print(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-29.php"}, {"exercise_number": 30, "exercise_content": "30. Write a Java program to convert a hexadecimal to a octal number. \nInput Data:\nInput a hexadecimal number: 40\nExpected OutputEquivalent of octal number is: 100", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise30 {\r\n public static int hex_to_decimal(String s)\r\n    {\r\n             String digits = \"0123456789ABCDEF\";\r\n             s = s.toUpperCase();\r\n             int val = 0;\r\n             for (int i = 0; i < s.length(); i++)\r\n             {\r\n                 char c = s.charAt(i);\r\n                 int d = digits.indexOf(c);\r\n                 val = 16*val + d;\r\n             }\r\n             return val;\r\n    }\r\n    public static void main(String args[])\r\n    {\r\n        String hexdec_num;\r\n        int dec_num, i=1, j;\r\n        int octal_num[] = new int[100];\r\n        Scanner in = new Scanner(System.in);\r\n\t\t\r\n        System.out.print(\"Input a hexadecimal number: \");\r\n        hexdec_num = in.nextLine();\r\n        \r\n        // Convert hexadecimal to decimal\r\n        \r\n        dec_num = hex_to_decimal(hexdec_num);\r\n        \r\n        //Convert decimal to octal\r\n        \r\n        while(dec_num != 0)\r\n        {\r\n            octal_num[i++] = dec_num%8;\r\n            dec_num = dec_num/8;\r\n        }\r\n\t\t\r\n        System.out.print(\"Equivalent of octal number is: \");\r\n        for(j=i-1; j>0; j--)\r\n        {\r\n            System.out.print(octal_num[j]);\r\n        }\r\n\t\tSystem.out.print(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-30.php"}, {"exercise_number": 31, "exercise_content": "31. Write a Java program to check whether Java is installed on your computer. \nExpected OutputJava Version: 1.8.0_71                                                            \r\nJava Runtime Version: 1.8.0_71-b15                                                \r\nJava Home: /opt/jdk/jdk1.8.0_71/jre                                               \r\nJava Vendor: Oracle Corporation                                                   \r\nJava Vendor URL: http://Java.oracle.com/                                          \r\nJava Class Path: .", "exercise_solution_code": "public class Exercise31 {\r\npublic static void main(String[] args) {\r\n    System.out.println(\"\\nJava Version: \"+System.getProperty(\"java.version\"));\r\n    System.out.println(\"Java Runtime Version: \"+System.getProperty(\"java.runtime.version\"));\r\n    System.out.println(\"Java Home: \"+System.getProperty(\"java.home\"));\r\n    System.out.println(\"Java Vendor: \"+System.getProperty(\"java.vendor\"));\r\n    System.out.println(\"Java Vendor URL: \"+System.getProperty(\"java.vendor.url\"));\r\n    System.out.println(\"Java Class Path: \"+System.getProperty(\"java.class.path\")+\"\\n\");\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-31.php"}, {"exercise_number": 32, "exercise_content": "32. Write a Java program to compare two numbers. \nInput Data:\nInput first integer: 25\nInput second integer: 39\nExpected Output25 != 39                                                                          \r\n25 < 39                                                                           \r\n25 <= 39", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise32 {\r\n public static void main( String args[] )    \r\n    {\r\n        // create Scanner to obtain input from command window       \r\n        Scanner input = new Scanner(System.in);\r\n        int number1; // first number to compare       \r\n        int number2; // second number to compare  \r\n      \r\n        System.out.print( \"Input first integer: \" ); // prompt        \r\n        number1 = input.nextInt(); // read first number from user   \r\n \r\n        System.out.print( \"Input second integer: \" ); // prompt        \r\n        number2 = input.nextInt(); // read second number from user               \r\n        \r\n        if ( number1 == number2 )           \r\n            System.out.printf( \"%d == %d\\n\", number1, number2 );  \r\n        if ( number1 != number2 )          \r\n            System.out.printf( \"%d != %d\\n\", number1, number2 );  \r\n        if ( number1 < number2 )          \r\n            System.out.printf( \"%d < %d\\n\", number1, number2 );  \r\n        if ( number1 > number2 )          \r\n            System.out.printf( \"%d > %d\\n\", number1, number2 );  \r\n        if ( number1 <= number2 )          \r\n            System.out.printf( \"%d <= %d\\n\", number1, number2 );  \r\n        if ( number1 >= number2 )          \r\n            System.out.printf( \"%d >= %d\\n\", number1, number2 );  \r\n    }\r\n  }\r\n  \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-32.php"}, {"exercise_number": 33, "exercise_content": "33. Write a Java program and compute the sum of the digits of an integer. \nInput Data:\nInput an integer: 25\nExpected OutputThe sum of the digits is: 7", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise33 { \r\n public static void main(String[] args) {\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.print(\"Input an integer: \");\r\n        long n = input.nextLong();\r\n        System.out.println(\"The sum of the digits is: \" + sumDigits(n));\r\n\r\n    }\r\n\r\n    public static int sumDigits(long n) {\r\n        int sum = 0;\r\n        while (n != 0) {\r\n            sum += n % 10;\r\n            n /= 10;\r\n        }\r\n        return sum;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-33.php"}, {"exercise_number": 34, "exercise_content": "34. Write a Java program to compute the area of a hexagon. \nArea of a hexagon = (6 * s^2)/(4*tan(\u03c0/6))\nwhere s is the length of a side\nInput Data:\nInput the length of a side of the hexagon: 6\nExpected OutputThe area of the hexagon is: 93.53074360871938", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise34 {\r\n      public static void main(String[] args) {\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.print(\"Input the length of a side of the hexagon: \");\r\n        double s = input.nextDouble();\r\n        System.out.print(\"The area of the hexagon is: \" + hexagonArea(s)+\"\\n\");\r\n    }\r\n    public static double hexagonArea(double s) {\r\n        return (6*(s*s))/(4*Math.tan(Math.PI/6));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-34.php"}, {"exercise_number": 35, "exercise_content": "35. Write a Java program to compute the area of a polygon. \nArea of a polygon = (n*s^2)/(4*tan(\u03c0/n))\nwhere n is n-sided polygon and s is the length of a side\nInput Data:\nInput the number of sides on the polygon: 7\nInput the length of one of the sides: 6\nExpected OutputThe area is: 130.82084798405722", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise35 {\r\n    \r\n  public static void main(String[] args) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.print(\"Input the number of sides on the polygon: \");\r\n        int ns = input.nextInt();\r\n        System.out.print(\"Input the length of one of the sides: \");\r\n        double side = input.nextDouble();\r\n        System.out.print(\"The area is: \" + polygonArea(ns, side)+\"\\n\");\r\n    }\r\n    public static double polygonArea(int ns, double side) {\r\n        return (ns * (side * side)) / (4.0 * Math.tan((Math.PI / ns)));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-35.php"}, {"exercise_number": 36, "exercise_content": "36. Write a Java program to compute the distance between two points on the surface of earth. \nDistance between the two points [ (x1,y1) & (x2,y2)]\nd = radius * arccos(sin(x1) * sin(x2) + cos(x1) * cos(x2) * cos(y1 - y2))\nRadius of the earth r = 6371.01 Kilometers\nInput Data:\nInput the latitude of coordinate 1: 25 \nInput the longitude of coordinate 1: 35\nInput the latitude of coordinate 2: 35.5\nInput the longitude of coordinate 2: 25.5\nExpected OutputThe distance between those points is: 1480.0848451069087 km", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise36 {\r\n    \r\n   public static void main(String[] args) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.print(\"Input the latitude of coordinate 1: \");\r\n        double lat1 = input.nextDouble();\r\n        System.out.print(\"Input the longitude of coordinate 1: \");\r\n        double lon1 = input.nextDouble();\r\n        System.out.print(\"Input the latitude of coordinate 2: \");\r\n        double lat2 = input.nextDouble();\r\n        System.out.print(\"Input the longitude of coordinate 2: \");\r\n        double lon2 = input.nextDouble();\r\n\r\n        System.out.print(\"The distance between those points is: \" + distance_Between_LatLong(lat1, lon1, lat2, lon2) + \" km\\n\");\r\n    }\r\n\r\n    // Points will be converted to radians before calculation\r\n    public static double distance_Between_LatLong(double lat1, double lon1, double lat2, double lon2) {\r\n        lat1 = Math.toRadians(lat1);\r\n        lon1 = Math.toRadians(lon1);\r\n        lat2 = Math.toRadians(lat2);\r\n        lon2 = Math.toRadians(lon2);\r\n\r\n        double earthRadius = 6371.01; //Kilometers\r\n        return earthRadius * Math.acos(Math.sin(lat1)*Math.sin(lat2) + Math.cos(lat1)*Math.cos(lat2)*Math.cos(lon1 - lon2));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-36.php"}, {"exercise_number": 37, "exercise_content": "37. Write a Java program to reverse a string. \nInput Data:\nInput a string: The quick brown fox \nExpected OutputReverse string: xof nworb kciuq ehT", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise37 {\r\n     public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Input a string: \");\r\n        char[] letters = scanner.nextLine().toCharArray();\r\n        System.out.print(\"Reverse string: \");\r\n        for (int i = letters.length - 1; i >= 0; i--) {\r\n            System.out.print(letters[i]);\r\n        }\r\n        System.out.print(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-37.php"}, {"exercise_number": 38, "exercise_content": "38. Write a Java program to count the letters, spaces, numbers and other characters of an input string. \nExpected OutputThe string is :  Aa kiu, I swd skieo 236587. GH kiu: sieo?? 25.33\r\nletter: 23                                               \r\nspace: 9                                                 \r\nnumber: 10                                               \r\nother: 6", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise38 {\r\n    \r\n public static void main(String[] args) {\r\n\t\tString test = \"Aa kiu, I swd skieo 236587. GH kiu: sieo?? 25.33\";\r\n\t\tcount(test);\r\n\r\n\t}\r\n\tpublic static void count(String x){\r\n\t\tchar[] ch = x.toCharArray();\r\n\t\tint letter = 0;\r\n\t\tint space = 0;\r\n\t\tint num = 0;\r\n\t\tint other = 0;\r\n\t\tfor(int i = 0; i < x.length(); i++){\r\n\t\t\tif(Character.isLetter(ch[i])){\r\n\t\t\t\tletter ++ ;\r\n\t\t\t}\r\n\t\t\telse if(Character.isDigit(ch[i])){\r\n\t\t\t\tnum ++ ;\r\n\t\t\t}\r\n\t\t\telse if(Character.isSpaceChar(ch[i])){\r\n\t\t\t\tspace ++ ;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tother ++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"The string is : Aa kiu, I swd skieo 236587. GH kiu: sieo?? 25.33\");\r\n\t\tSystem.out.println(\"letter: \" + letter);\r\n\t\tSystem.out.println(\"space: \" + space);\r\n\t\tSystem.out.println(\"number: \" + num);\r\n\t\tSystem.out.println(\"other: \" + other);\r\n\t\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-38.php"}, {"exercise_number": 39, "exercise_content": "39. Write a Java program to create and display unique three-digit number using 1, 2, 3, 4. Also count how many three-digit numbers are there. \nExpected Output123                                                      \r\n124                                                      \r\n...                                            \r\n                                                   \r\n431                                                      \r\n432                                                      \r\nTotal number of the three-digit-number is 24", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise39 {\r\n    \r\n public static void main(String[] args) {\r\n\t\tint amount = 0;\r\n\t\tfor(int i = 1; i <= 4; i++){\r\n\t\t\tfor(int j = 1; j <= 4; j++){\r\n\t\t\t\tfor(int k = 1; k <= 4; k++){\r\n\t\t\t\t\tif(k != i && k != j && i != j){\r\n\t\t\t\t\t\tamount++;\r\n\t\t\t\t\t\tSystem.out.println(i + \"\" + j + \"\" + k);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"Total number of the three-digit-number is \" + amount);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-39.php"}, {"exercise_number": 40, "exercise_content": "40. Write a Java program to list the available character sets in charset objects. \nExpected OutputList of available character sets:                                       \r\nBig5                                                                    \r\nBig5-HKSCS                                                              \r\nCESU-8                                                                  \r\nEUC-JP                                                                  \r\nEUC-KR                                                                  \r\nGB18030                                                                 \r\nGB2312                                                                  \r\nGBK                                                                     \r\n                                                     \r\n...                                            \r\n                                                   \r\nx-SJIS_0213                                                             \r\nx-UTF-16LE-BOM                                                          \r\nX-UTF-32BE-BOM                                                          \r\nX-UTF-32LE-BOM                                                          \r\nx-windows-50220                                                         \r\nx-windows-50221                                                         \r\nx-windows-874                                                           \r\nx-windows-949                                                           \r\nx-windows-950                                                           \r\nx-windows-iso2022jp", "exercise_solution_code": "import java.nio.charset.Charset;\r\npublic class Exercise40 {\r\n  public static void main(String[] args) {\r\n\tSystem.out.println(\"List of available character sets: \");  \r\n    for (String str : Charset.availableCharsets().keySet()) {\r\n      System.out.println(str);\r\n    }\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-40.php"}, {"exercise_number": 41, "exercise_content": "41. Write a Java program to print the ascii value of a given character. \nExpected OutputThe ASCII value of Z is :90", "exercise_solution_code": "public class Exercise41 {\r\n\r\n\tpublic static void main(String[] String) {\r\n\t\tint chr = 'Z';\r\n\t\tSystem.out.println(\"The ASCII value of Z is :\"+chr);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-41.php"}, {"exercise_number": 42, "exercise_content": "42. Write a Java program to input and display your password. \nExpected OutputInput your Password:                                                    \r\nYour password was: [email\u00a0protected]", "exercise_solution_code": "import java.io.Console;\r\npublic class Example42 {\r\n\tpublic static void main(String[] args) {\r\n\t\tConsole cons;\r\n\t\tif ((cons = System.console()) != null) {\r\n\t\t\tchar[] pass_ward = null;\r\n\t\t\ttry {\r\n\t\t\t\tpass_ward = cons.readPassword(\"Input your Password:\");\r\n\t\t\t\tSystem.out.println(\"Your password was: \" + new String(pass_ward));\r\n\t\t\t} finally {\r\n\t\t\t\tif (pass_ward != null) {\r\n\t\t\t\t\tjava.util.Arrays.fill(pass_ward, ' ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new RuntimeException(\"Can't get password...No console\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-42.php"}, {"exercise_number": 43, "exercise_content": "43. Write a Java program to print the following string in a specific format (see the output). \nSample OutputTwinkle, twinkle, little star,\r\n\tHow I wonder what you are! \r\n\t\tUp above the world so high,   \t\t\r\n\t\tLike a diamond in the sky. \r\nTwinkle, twinkle, little star, \r\n\tHow I wonder what you are", "exercise_solution_code": "public class Example43 {\r\n\tpublic static void main(String[] args) {\r\n\t\r\n   System.out.println(\"\\nTwinkle, twinkle, little star, \\n\\tHow I wonder what you are! \\n\\t\\tUp above the world so high, \\n\\t\\tLike a diamond in the sky. \\nTwinkle, twinkle, little star, \\n\\tHow I wonder what you are!\\n\\n\");\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-43.php"}, {"exercise_number": 44, "exercise_content": "44. Write a Java program that accepts an integer (n) and computes the value of n+nn+nnn. \nSample Output:Input number: 5                                                        \r\n5 + 55  + 555", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise44 {\r\n public static void main(String[] args) {\r\n\r\n  int n;\r\n  char s1, s2, s3;\r\n  Scanner in = new Scanner(System.in);\r\n  System.out.print(\"Input number: \");\r\n  n = in .nextInt();\r\n  System.out.printf(\"%d + %d%d  + %d%d%d\\n\", n, n, n, n, n, n);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-44.php"}, {"exercise_number": 45, "exercise_content": "45. Write a Java program to find the size of a specified file. \nSample Output:/home/students/abc.txt  : 0 bytes                                      \r\n/home/students/test.txt : 0 bytes", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.io.File;\r\npublic class Exercise45 {\r\n\r\n public static void main(String[] args) {\r\n  System.out.println(\"/home/students/abc.txt  : \" + new File(\"abc.txt\").length() + \" bytes\");\r\n  System.out.println(\"/home/students/test.txt : \" + new File(\"test.txt\").length() + \" bytes\");\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-45.php"}, {"exercise_number": 46, "exercise_content": "46. Write a Java program to display the system time. \nSample Output:Current Date time: Fri Jun 16 14:17:40 IST 2017", "exercise_solution_code": "public class Exercise46 {\r\n  \r\n  public static void main(String[] args){\r\n         System.out.format(\"\\nCurrent Date time: %tc%n\\n\", System.currentTimeMillis());\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-46.php"}, {"exercise_number": 47, "exercise_content": "47. Write a Java program to display the current date time in specific format. \nSample Output:Now: 2017/06/16 08:52:03.066", "exercise_solution_code": " import java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.TimeZone;\r\n\r\npublic class Exercise47 {\r\n\r\n\tpublic static void main(String args[]) {\r\n\t\tSimpleDateFormat cdt = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss.SSS\");\r\n\t\tcdt.setCalendar(Calendar.getInstance(TimeZone.getTimeZone(\"GMT\")));\r\n\t\t\r\n\t\tSystem.out.println(\"\\nNow: \"+cdt.format(System.currentTimeMillis()));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-47.php"}, {"exercise_number": 48, "exercise_content": "48. Write a Java program to print the odd numbers from 1 to 99. Prints one number per line. \nSample Output:1                                                                      \r\n3                                                                      \r\n5                                                                      \r\n7                                                                      \r\n9                                                                      \r\n11                                                                     \r\n....                                                                     \r\n                                                                    \r\n91                                                                     \r\n93                                                                     \r\n95                                                                     \r\n97                                                                     \r\n99", "exercise_solution_code": "import java.util.*;\r\n public class Exercise48 {\r\n     public static void main(String[] args){\r\n\tfor (int i = 1; i < 100; i++) {\r\n\t\t\tif (i % 2 != 0) {\r\n\t\t\t\tSystem.out.println(i);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-48.php"}, {"exercise_number": 49, "exercise_content": "49. Write a Java program to accept a number and check the number is even or not. Prints 1 if the number is even or 0 if the number is odd. \nSample Output:Input a number: 20                                                     \r\n1", "exercise_solution_code": "import java.util.*;\r\n public class Exercise49 {\r\n     public static void main(String[] args){\r\n\t Scanner in = new Scanner(System.in);\r\n\t System.out.print(\"Input a number: \");\r\n     int n = in.nextInt(); \r\n            if (n % 2 == 0) {\r\n                System.out.println(1); \r\n               }\r\n\t\t\telse {\r\n                System.out.println(0); \r\n              }\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-49.php"}, {"exercise_number": 50, "exercise_content": "50. Write a Java program to print numbers between 1 to 100 which are divisible by 3, 5 and by both. \nSample Output:Divided by 3:                                                          \r\n3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57\r\n, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99,              \r\n                                                                       \r\nDivided by 5:                                                          \r\n5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, \r\n95,                                                                    \r\n                                                                       \r\nDivided by 3 & 5:                                                      \r\n15, 30, 45, 60, 75, 90,", "exercise_solution_code": "public class Exercise50 {\r\n    \tpublic static void main(String args[]) {\r\n\t\tSystem.out.println(\"\\nDivided by 3: \");\t\t\r\n\t\tfor (int i=1; i<100; i++) {\r\n\t\t\tif (i%3==0) \r\n\t\t\tSystem.out.print(i +\", \");\t\t\t\r\n\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\tSystem.out.println(\"\\n\\nDivided by 5: \");\r\n\t\tfor (int i=1; i<100; i++) {\r\n\t\t\tif (i%5==0) System.out.print(i +\", \");\t\t\t\r\n\t\t}\r\n\t\t\t\t\r\n\t\tSystem.out.println(\"\\n\\nDivided by 3 & 5: \");\t\t\t\r\n\t\tfor (int i=1; i<100; i++) {\r\n\t\t\tif (i%3==0 && i%5==0) System.out.print(i +\", \");\t\t\t\r\n\t\t}\r\n\t\tSystem.out.println(\"\\n\");\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-50.php"}, {"exercise_number": 51, "exercise_content": "51. Write a Java program to convert a string to an integer in Java. \nSample Output:Input a number(string): 25                                             \r\nThe integer value is: 25", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise51 {\r\n\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a number(string): \");\r\n        String str1 = in.nextLine();\r\n\t\tint result = Integer.parseInt(str1);\r\n        System.out.printf(\"The integer value is: %d\",result);\r\n\t\tSystem.out.printf(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-51.php"}, {"exercise_number": 52, "exercise_content": "52. Write a Java program to calculate the sum of two integers and return true if the sum is equal to a third integer. \nSample Output:Input the first number : 5                                             \r\nInput the second number: 10                                            \r\nInput the third number : 15                                            \r\nThe result is: true", "exercise_solution_code": "import java.util.*;\r\n public class Exercise52 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number : \");\r\n        int x = in.nextInt();  \r\n\t\tSystem.out.print(\"Input the second number: \");\r\n\t\tint y = in.nextInt(); \r\n\t\tSystem.out.print(\"Input the third number : \");\r\n        int z = in.nextInt(); \r\n        System.out.print(\"The result is: \"+sumoftwo(x, y, z));\r\n\t\tSystem.out.print(\"\\n\");\r\n    }\r\n    \r\n    public static boolean sumoftwo(int p, int q, int r)\r\n      {\t\r\n         return ((p + q) == r || (q + r) == p || (r + p) == q);\t\r\n\t   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-52.php"}, {"exercise_number": 53, "exercise_content": "53. Write a Java program that accepts three integers from the user and return true if the second number is greater than first number and third number is greater than second number. If \"abc\" is true second number does not need to be greater than first number. \nSample Output:Input the first number : 5                                             \r\nInput the second number: 10                                            \r\nInput the third number : 15                                            \r\nThe result is: true", "exercise_solution_code": "import java.util.*;\r\n public class Exercise53 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number : \");\r\n        int x = in.nextInt();  \r\n\t\tSystem.out.print(\"Input the second number: \");\r\n\t\tint y = in.nextInt(); \r\n\t\tSystem.out.print(\"Input the third number : \");\r\n        int z = in.nextInt(); \r\n        System.out.print(\"The result is: \"+test(x, y, z,true));\r\n\t\tSystem.out.print(\"\\n\");\r\n    }\r\n    \r\n    public static boolean test(int p, int q, int r, boolean xyz)\r\n     {\r\n\t   if(xyz)\r\n\t\t  return (r > q);\r\n\t   return (q > p && r > q);\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-53.php"}, {"exercise_number": 54, "exercise_content": "54. Write a Java program that accepts three integers from the user and return true if two or more of them (integers ) have the same rightmost digit. The integers are non-negative. \nSample Output:Input the first number : 5                                             \r\nInput the second number: 10                                            \r\nInput the third number : 15                                            \r\nThe result is: true", "exercise_solution_code": "import java.util.*;\r\n public class Exercise54 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number : \");\r\n        int x = in.nextInt();  \r\n\t\tSystem.out.print(\"Input the second number: \");\r\n\t\tint y = in.nextInt(); \r\n\t\tSystem.out.print(\"Input the third number : \");\r\n        int z = in.nextInt(); \r\n        System.out.print(\"The result is: \"+test_last_digit(x, y, z,true));\r\n\t\tSystem.out.print(\"\\n\");\r\n    }\r\n   \r\n    public static boolean test_last_digit(int p, int q, int r, boolean xyz)\r\n     {\r\n\t     return (p % 10 == q % 10) || (p % 10 == r % 10) || (q % 10 == r % 10);\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-54.php"}, {"exercise_number": 55, "exercise_content": "55. Write a Java program to convert seconds to hour, minute and seconds. \nSample Output:Input seconds: 86399                                                   \r\n23:59:59", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\npublic static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input seconds: \");\r\n\t    \tint seconds = in.nextInt();\r\n        int S = seconds % 60;\r\n        int H = seconds / 60;\r\n        int M = H % 60;\r\n        H = H / 60;\r\n        System.out.print( H + \":\" + M + \":\" + S);\r\n\t\tSystem.out.print(\"\\n\");\r\n    }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-55.php"}, {"exercise_number": 56, "exercise_content": "56. Write a Java program to find the number of values in a given range divisible by a given value. \nFor example x = 5, y=20 and p =3, find the number of integers within the range x..y and that are divisible by p i.e. { i :x \u2264 i \u2264 y, i mod p = 0 }\nSample Output:5", "exercise_solution_code": "import java.util.*;\r\n public class Exercise56 {\r\n     public static void main(String[] args){\r\n\t\tint x = 5;\r\n\t\tint y = 20;\r\n\t\tint p = 3;\r\n\t\tSystem.out.println(result(x,y,p));\r\n\t } \t\t\r\n\tpublic static int result(int x, int y, int p) {\t\r\n\t\tif (x%p == 0)\r\n\t\t\treturn( y/p - x/p + 1);\r\n\t\treturn(y/p - x/p);\r\n\t}\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-56.php"}, {"exercise_number": 57, "exercise_content": "57. Write a Java program to accepts an integer and count the factors of the number. \nSample Output:Input an integer: 25                                                   \r\n3", "exercise_solution_code": "import java.util.*;\r\n public class Exercise57 {\r\n     public static void main(String[] args){\r\n      Scanner in = new Scanner(System.in);\r\n      System.out.print(\"Input an integer: \");\r\n      int x = in.nextInt(); \r\n\r\n\t\tSystem.out.println(result(x));\r\n\t } \t\t\r\n\tpublic static int result(int num) {\t\r\n\t\tint ctr = 0;\r\n        for(int i=1; i<=(int)Math.sqrt(num); i++) {\r\n            if(num%i==0 && i*i!=num) {\r\n                ctr+=2;\r\n            } else if (i*i==num) {\r\n                ctr++;\r\n            }\r\n        }\r\n        return ctr;\r\n\t}\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-57.php"}, {"exercise_number": 58, "exercise_content": "58. Write a Java program to capitalize the first letter of each word in a sentence. \nSample Output:Input a Sentence: the quick brown fox jumps over the lazy dog.         \r\nThe Quick Brown Fox Jumps Over The Lazy Dog.", "exercise_solution_code": "import java.util.*;\r\n public class Exercise58 {\r\n     public static void main(String[] args){\r\n\t Scanner in = new Scanner(System.in);\r\n     System.out.print(\"Input a Sentence: \");\r\n\t String line = in.nextLine();\r\n\t String upper_case_line = \"\"; \r\n       Scanner lineScan = new Scanner(line); \r\n         while(lineScan.hasNext()) {\r\n             String word = lineScan.next(); \r\n             upper_case_line += Character.toUpperCase(word.charAt(0)) + word.substring(1) + \" \"; \r\n         }\r\n      System.out.println(upper_case_line.trim()); \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-58.php"}, {"exercise_number": 59, "exercise_content": "59. Write a Java program to convert a given string into lowercase. \nSample Output:Input a String: THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.           \r\nthe quick brown fox jumps over the lazy dog.", "exercise_solution_code": "import java.util.*;\r\n public class Exercise59 {\r\n     public static void main(String[] args){\t\r\n     Scanner in = new Scanner(System.in);\r\n     System.out.print(\"Input a String: \");\r\n\t String line = in.nextLine();\r\n\t line = line.toLowerCase();\r\n\t System.out.println(line); \r\n\t }\t\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-59.php"}, {"exercise_number": 60, "exercise_content": "60. Write a Java program to find the penultimate (next to last) word of a sentence. \nSample Output:Input a String: The quick brown fox jumps over the lazy dog.\r\nPenultimate word: lazy", "exercise_solution_code": "import java.util.*;\r\n public class Exercise60 {\r\n     public static void main(String[] args){\t\r\n     Scanner in = new Scanner(System.in);\r\n     System.out.print(\"Input a Sentence: \");\r\n\t String line = in.nextLine();\r\n\t String[] words = line.split(\"[ ]+\");\r\n\t System.out.println(\"Penultimate word: \"+words[words.length - 2]);\r\n\t }\t\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-60.php"}, {"exercise_number": 61, "exercise_content": "61. Write a Java program to reverse a word. \nSample Output:Input a word: dsaf\r\nReverse word: fasd", "exercise_solution_code": "import java.util.*;\r\n public class Exercise61 {\r\n     public static void main(String[] args){\t\r\n     Scanner in = new Scanner(System.in);\r\n     System.out.print(\"\\nInput a word: \");\r\n\t String word = in.nextLine();\r\n\t word = word.trim();\r\n\t String result = \"\"; \r\n     char[] ch=word.toCharArray();  \r\n\t for (int i = ch.length - 1; i >= 0; i--) {\r\n\t\t\t result += ch[i];\r\n\t\t }\r\n\t System.out.println(\"Reverse word: \"+result.trim()); \r\n\t }\t\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-61.php"}, {"exercise_number": 62, "exercise_content": "62. Write a Java program that accepts three integer values and return true if one of them is 20 or more and less than the substractions of others. \nSample Output:Input the first number : 15                                            \r\nInput the second number: 20                                            \r\nInput the third number : 25                                            \r\nfalse", "exercise_solution_code": "import java.util.*;\r\n public class Exercise62 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number : \");\r\n        int x = in.nextInt();  \r\n\t\tSystem.out.print(\"Input the second number: \");\r\n\t\tint y = in.nextInt(); \r\n\t\tSystem.out.print(\"Input the third number : \");\r\n        int z = in.nextInt(); \r\n        System.out.println((Math.abs(x - y) >= 20 || Math.abs(y - z) >= 20 || Math.abs(z - x) >= 20));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-62.php"}, {"exercise_number": 63, "exercise_content": "63. Write a Java program that accepts two integer values from the user and return the larger values. However if the two values are the same, return 0 and return the smaller value if the two values have the same remainder when divided by 6. \nSample Output:Input the first number : 12                                            \r\nInput the second number: 13                                            \r\nResult: 13", "exercise_solution_code": "import java.util.*;\r\n public class Exercise63 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number : \");\r\n        int a = in.nextInt();  \r\n\t\tSystem.out.print(\"Input the second number: \");\r\n\t\tint b = in.nextInt(); \r\n\t\tSystem.out.println(\"Result: \"+result(a, b));\r\n    }\r\n\tpublic static int result(int x, int y)\r\n     {  \r\n\tif(x == y)\r\n\t\treturn 0;\r\n\t    if(x % 6 == y % 6)\r\n\t\t    return (x < y) ? x : y;\r\n\t    return (x > y) ? x : y;\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-63.php"}, {"exercise_number": 64, "exercise_content": "64. Write a Java program that accepts two integer values between 25 to 75 and return true if there is a common digit in both numbers. \nSample Output:Input the first number : 35                                            \r\nInput the second number: 45                                            \r\nResult: true", "exercise_solution_code": "import java.util.*;\r\n public class Exercise64 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number : \");\r\n        int a = in.nextInt();  \r\n\t\tSystem.out.print(\"Input the second number: \");\r\n\t\tint b = in.nextInt(); \r\n\t\tSystem.out.println(\"Result: \"+common_digit(a, b));\r\n    }\r\n\t\r\n\tpublic static boolean common_digit(int p, int q)\r\n     {  \r\n\t   if (p<25 || q>75)\r\n\t\t   return false;\r\n\t   int x = p % 10;\r\n\t   int y = q % 10;\r\n\t   p /= 10;\r\n\t   q /= 10;\r\n\t   return (p == q || p == y || x == q || x == y);\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-64.php"}, {"exercise_number": 65, "exercise_content": "65. Write a Java program to calculate the modules of two numbers without using any inbuilt modulus operator. \nSample Output:Input the first number : 19                                            \r\nInput the second number: 7                                             \r\n5", "exercise_solution_code": "import java.util.*;\r\n public class Exercise65 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number : \");\r\n        int a = in.nextInt();  \r\n\t\tSystem.out.print(\"Input the second number: \");\r\n\t\tint b = in.nextInt(); \r\n\t\tint divided = a / b;\r\n\t\tint result = a - (divided * b);\r\n\t\tSystem.out.println(result); \r\n\t}\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-65.php"}, {"exercise_number": 66, "exercise_content": "66. Write a Java program to compute the sum of the first 100 prime numbers. \nSample Output:Sum of the first 100 prime numbers: 24133", "exercise_solution_code": "import java.util.*;\r\n public class Exercise66 {\r\n public static void main(String[] args)\r\n {\r\n    int sum = 1;\r\n\t int ctr = 0; \r\n\t int n = 0; \r\n    \t\r\n\t\twhile (ctr < 100) {\r\n\t\t\tn++; \r\n\t\t\tif (n % 2 != 0) { \r\n\t\t\t// check if the number is even\r\n\t\t\t\tif (is_Prime(n)) {\r\n\t\t\t\t\tsum += n; \t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n                    ctr++; \t\r\n\t\t}\r\n\t\tSystem.out.println(\"\\nSum of the prime numbers till 100: \"+sum); \t\r\n\t }\r\n\t\r\n   \tpublic static boolean is_Prime(int n) {\r\n\t\tfor (int i = 3; i * i <= n; i+= 2) {\r\n\t\t\tif (n % i == 0) {\r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-66.php"}, {"exercise_number": 67, "exercise_content": "67. Write a Java program to insert a word in the middle of the another string. Insert \"Tutorial\" in the middle of \"Python 3.0\", so result will be Python Tutorial 3.0\nSample Output:Python Tutorial 3.0", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise67 {\r\n public static void main(String[] args)\r\n {\r\n   String main_string = \"Python 3.0\";\r\n   String word = \"Tutorial\";\r\n   System.out.println(main_string.substring(0, 7) + word + main_string.substring(6));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-67.php"}, {"exercise_number": 68, "exercise_content": "68. Write a Java program to create a new string of 4 copies of the last 3 characters of the original string. The length of the original string must be 3 and above. \nSample Output:3.03.03.03.0", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise68 {\r\n public static void main(String[] args)\r\n {\r\n   String main_string = \"Python 3.0\";\r\n      \r\n   String last_three_chars = main_string.substring(main_string.length() - 3);\r\n   System.out.println(last_three_chars + last_three_chars + last_three_chars + last_three_chars);\r\n  }\r\n    }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-68.php"}, {"exercise_number": 69, "exercise_content": "69. Write a Java program to extract the first half of a string of even length. \nTest Data: Python\nSample Output:Pyt", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise69 {\r\n public static void main(String[] args)\r\n {\r\n    String main_string = \"Python\";    \r\n    System.out.println(main_string.substring(0, main_string.length()/2));\t\r\n  } \r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-69.php"}, {"exercise_number": 70, "exercise_content": "70. Write a Java program to create a string in the form short_string + long_string + short_string from two strings. The strings must not have the same length. \nTest Data: Str1 = Python\nStr2 = Tutorial\nSample Output:PythonTutorialPython", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise70 {\r\n public static void main(String[] args)\r\n {\r\n    String str1 = \"Python\";    \r\n\tString str2 = \"Tutorial\"; \r\n\t\r\n\tif(str1.length() >= str2.length())\r\n\t\tSystem.out.println( str2+str1+str2);\r\n\telse\r\n\tSystem.out.println(str1+str2+str1);\t\r\n  } \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-70.php"}, {"exercise_number": 71, "exercise_content": "71. Write a Java program to create the concatenation of the two strings except removing the first character of each string. The length of the strings must be 1 and above. \nTest Data: Str1 = Python\nStr2 = Tutorial\nSample Output:ythonutorial", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise71 {\r\n public static void main(String[] args)\r\n {\r\n    String str1 = \"Python\";    \r\n\tString str2 = \"Tutorial\"; \r\n\t\r\n\tSystem.out.println(str1.substring(1) + str2.substring(1));\r\n\t} \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-71.php"}, {"exercise_number": 72, "exercise_content": "72. Write a Java program to create a new string taking first three characters from a given string. If the length of the given string is less than 3 use \"#\" as substitute characters. \nTest Data: Str1 = \" \"\nSample Output:###", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise72 {\r\n public static void main(String[] args)\r\n {\r\n    String str1 = \"\";    \r\n\tint len = str1.length();\r\n\tif(len >= 3)\r\n\t\tSystem.out.println( str1.substring(0, 3));\r\n\telse if(len == 1)\r\n\t\tSystem.out.println( (str1.charAt(0)+\"##\"));\r\n\telse\r\n\t\tSystem.out.println(\"###\");\r\n\t}\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-72.php"}, {"exercise_number": 73, "exercise_content": "73. Write a Java program to create a new string taking first and last characters from two given strings. If the length of either string is 0 use \"#\" for missing character. \nTest Data: str1 = \"Python\"\nstr2 = \" \"\nSample Output:P#", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise73 {\r\n public static void main(String[] args)\r\n {\r\n    String str1 = \"Python\"; \r\n\tString str2 = \"\"; \r\n\t\r\n\tint length2 = str2.length();\r\n\tString result = \"\";\r\n\tresult += (str1.length() >= 1) ? str1.charAt(0) : '#';\r\n\tresult += (length2 >= 1) ? str2.charAt(length2-1) : '#';\r\n\tSystem.out.println(result);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-73.php"}, {"exercise_number": 74, "exercise_content": "74. Write a Java program to test if 10 appears as either the first or last element of an array of integers. The length of the array must be greater than or equal to 2. \nSample Output: \nTest Data: array = 10, -20, 0, 30, 40, 60, 10true", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise74 {\r\n public static void main(String[] args)\r\n {\r\n    int[] num_array = {10, -20, 0, 30, 40, 60, 10};\r\n    System.out.println((num_array[0] == 10 || num_array[num_array.length-1] == 10));\t\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-74.php"}, {"exercise_number": 75, "exercise_content": "75. Write a Java program to test if the first and the last element of an array of integers are same. The length of the array must be greater than or equal to 2. \nTest Data: array = 50, -20, 0, 30, 40, 60, 10\nSample Output:false", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise75 {\r\n public static void main(String[] args)\r\n {\r\n    int[] num_array = {50, -20, 0, 30, 40, 60, 10};\r\n    \r\n\tSystem.out.println (num_array.length >= 2 && num_array[0] ==  num_array[num_array.length-1]);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-75.php"}, {"exercise_number": 76, "exercise_content": "76. Write a Java program to test if the first or the last element of two array of integers are same. The length of the array must be greater than or equal to 2. Test Data: array1 = 50, -20, 0, 30, 40, 60, 12\narray2 = 45, 20, 10, 20, 30, 50, 11\nSample Output:false", "exercise_solution_code": "public class Main {\r\n public static void main(String[] args)\r\n {\r\n  //false\r\n  int[] num_array1 = {50, -20, 0, 30, 40, 60, 12};\r\n\tint[] num_array2 = {45, 20, 10, 20, 30, 50, 11};\r\n\t\r\n\t//true\r\n\t//int[] num_array1 = {50, -20, 0, 30, 40, 60, 12};\r\n\t//int[] num_array2 = {45, 20, 10, 20, 30, 50, 12};\r\n\t\r\n\t//Array lengths less than 2.\r\n\t//int[] num_array1 = {50};\r\n\t//int[] num_array2 = {45};\r\n\t\r\n  if(num_array1.length>=2 && num_array2.length>=2)\r\n  {\r\n\t  System.out.println(num_array1[0] == num_array2[0] || num_array1[num_array1.length-1] == num_array2[num_array2.length-1]);\r\n  }\r\n  else\r\n  {\r\n   System.out.println(\"Array lengths less than 2.\");\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-76.php"}, {"exercise_number": 77, "exercise_content": "77. Write a Java program to create a new array of length 2 from two arrays of integers with three elements and the new array will contain the first and last elements from the two arrays. \nTest Data: array1 = 50, -20, 0\narray2 = 5, -50, 10\nSample Output:Array1: [50, -20, 0]                                                   \r\nArray2: [5, -50, 10]                                                   \r\nNew Array: [50, 10]", "exercise_solution_code": "import java.util.Arrays; \r\n public class Exercise77 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array1 = {50, -20, 0};\r\n\tint[] array2 = {5, -50, 10};\r\n\tSystem.out.println(\"Array1: \"+Arrays.toString(array1)); \r\n\tSystem.out.println(\"Array2: \"+Arrays.toString(array2)); \r\n    int[] array_new = {array1[0], array2[2]};\t\r\n\tSystem.out.println(\"New Array: \"+Arrays.toString(array_new)); \t \r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-77.php"}, {"exercise_number": 78, "exercise_content": "78. Write a Java program to test that a given array of integers of length 2 contains a 4 or a 7. \nSample Output:Original Array: [5, 7]                                                 \r\ntrue", "exercise_solution_code": "import java.util.Arrays; \r\n public class Exercise78 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {5, 7};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tif(array_nums[0] == 4 || array_nums[0] == 7)\r\n\t\tSystem.out.println(\"True\");\r\n\telse\r\n    System.out.println(array_nums[1] == 4 || array_nums[1] == 7);\r\n\t \r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-78.php"}, {"exercise_number": 79, "exercise_content": "79. Write a Java program to rotate an array (length 3) of integers in left direction. \nSample Output:Original Array: [20, 30, 40]                                           \r\nRotated Array: [30, 40, 20]", "exercise_solution_code": "import java.util.Arrays; \r\n public class Exercise79 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {20, 30, 40};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint[] new_array_nums = {array_nums[1], array_nums[2], array_nums[0]};\r\n\tSystem.out.println(\"Rotated Array: \"+Arrays.toString(new_array_nums)); \t \r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-79.php"}, {"exercise_number": 80, "exercise_content": "80. Write a Java program to get the larger value between first and last element of an array (length 3) of integers . \nSample Output:Original Array: [20, 30, 40]                                           \r\nLarger value between first and last element: 40", "exercise_solution_code": "import java.util.Arrays; \r\n public class Exercise80 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {20, 30, 40};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint max_val = array_nums[0];\r\n\tif(array_nums[2] >= max_val)\r\n\t\tmax_val = array_nums[2];\r\n\tSystem.out.println(\"Larger value between first and last element: \"+max_val); \t \r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-80.php"}, {"exercise_number": 81, "exercise_content": "81. Write a Java program to swap the first and last elements of an array (length must be at least 1) and create a new array. \nSample Output:Original Array: [20, 30, 40]                                           \r\nNew array after swaping the first and last elements: [40, 30, 20]", "exercise_solution_code": "import java.util.Arrays; \r\n public class Exercise81 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {20, 30, 40};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint x = array_nums[0];\r\n\tarray_nums[0] = array_nums[array_nums.length-1];\r\n\tarray_nums[array_nums.length-1] = x;\r\n\tSystem.out.println(\"New array after swaping the first and last elements: \"+Arrays.toString(array_nums));  \r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-81.php"}, {"exercise_number": 82, "exercise_content": "82. Write a Java program to find the largest element between first, last, and middle values from an array of integers (even length). \nSample Output:Original Array: [20, 30, 40, 50, 67]                                   \r\nLargest element between first, last, and middle values: 67", "exercise_solution_code": "import java.util.Arrays; \r\n public class Exercise82 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {20, 30, 40, 50, 67};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint max_val = array_nums[0];\r\n\tif(max_val <= array_nums[array_nums.length-1])\r\n\t\tmax_val = array_nums[array_nums.length-1];\r\n\tif(max_val <= array_nums[array_nums.length/2])\r\n\t\tmax_val = array_nums[array_nums.length/2];\r\n\tSystem.out.println(\"Largest element between first, last, and middle values: \"+max_val);  \r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-82.php"}, {"exercise_number": 83, "exercise_content": "83. Write a Java program to multiply corresponding elements of two arrays of integers. \nSample Output:Array1: [1, 3, -5, 4]                                                  \r\n                                                                       \r\nArray2: [1, 4, -5, -2]                                                 \r\n                                                                       \r\nResult: 1 12 25 -8", "exercise_solution_code": "import java.util.*;\r\n public class Exercise83 {\r\n     public static void main(String[] args){\t\r\n\t   String result = \"\";\r\n\t   int[] left_array = {1, 3, -5, 4};\r\n\t   int[] right_array = {1, 4, -5, -2};\r\n\t   System.out.println(\"\\nArray1: \"+Arrays.toString(left_array));  \r\n\t   System.out.println(\"\\nArray2: \"+Arrays.toString(right_array)); \r\n       for (int i = 0; i < left_array.length; i++) {\r\n\t\t\t\tint num1 = left_array[i];\r\n\t\t\t\tint num2 = right_array[i];\r\n\t\t\t\tresult += Integer.toString(num1 * num2) + \" \"; \r\n\t\t\t}\r\n\t\tSystem.out.println(\"\\nResult: \"+result);     \r\n\t }\t\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-83.php"}, {"exercise_number": 84, "exercise_content": "84. Write a Java program to take the last three characters from a given string and add the three characters at both the front and back of the string. String length must be greater than three and more. \nTest data: \"Python\" will be \"honPythonhon\"\nSample Output:honPythonhon", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise84 {\r\n public static void main(String[] args)\r\n {\r\n   String string1 = \"Python\";\r\n    int slength = 3;\r\n    if (slength > string1.length()) {\r\n      slength = string1.length();\r\n    }\r\n\r\n    String subpart = string1.substring(string1.length()-3);\r\n    System.out.println(subpart + string1 + subpart);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-84.php"}, {"exercise_number": 85, "exercise_content": "85. Write a Java program to check if a string starts with a specified word. Sample Data: string1 = \"Hello how are you?\"\nSample Output:true", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise85 {\r\n public static void main(String[] args)\r\n {\r\n   String string1 = \"Hello how are you?\";\r\n    System.out.println(string1.startsWith(\"Hello\"));\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-85.php"}, {"exercise_number": 86, "exercise_content": "86. Write a Java program start with an integer n, divide n by 2 if n is even or multiply by 3 and add 1 if n is odd, repeat the process until n = 1.", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"Input the value of n: \");\r\n\t\tScanner in = new Scanner(System.in);\r\n\t\tint n = in.nextInt();\r\n\t\twhile (n != 1) {\r\n\t\t\tif (n % 2 == 0) {\r\n\t\t\t\tn = n / 2;\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tn = (3 * n + 1) / 2;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"\\nValue of n = \"+n);\r\n\t\tin.close();\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-86.php"}, {"exercise_number": 87, "exercise_content": "87. Write a Java program than read an integer and calculate the sum of its digits and write the number of each digit of the sum in English.", "exercise_solution_code": "import java.io.*;\r\n\r\npublic class Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t\r\n\t\ttry {\r\n\t\t\tint sum = 0;\r\n\t\t\tString str = br.readLine();\r\n\t\t\tchar[] numStr = str.toCharArray();\r\n\t\t\tfor (int i = 0; i < numStr.length; i ++) {\r\n\t\t\t\tsum += numStr[i] - '0';\r\n\t\t\t}\r\n\t\t\tSystem.out.println(\"Original Number: \"+str);\r\n\t\t\tprint_number(sum);\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static void print_number(int n) {\r\n\t\tint x; int y; int z;\r\n\t\tString[] number = {\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\"};\r\n\t\tSystem.out.println(\"Sum of the digits of the said number: \"+n);\r\n\t\tif (n < 10) {\r\n\t\t\tSystem.out.println(number[n]);\r\n\t\t}\r\n\t\telse if (n < 100) {\r\n\t\t\tx = n / 10;\r\n\t\t\ty = n - x *10;\r\n\t\t\tSystem.out.println(\"In English: \"+number[x] + \" \" + number[y]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tx = n / 100;\r\n\t\t\ty = (n - x * 100) / 10;\r\n\t\t\tz = n - x * 100 - y * 10;\r\n\t\t\tSystem.out.println(\"In English: \"+number[x] + \" \" + number[y] + \" \" + number[z]);\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-87.php"}, {"exercise_number": 88, "exercise_content": "88. Write a Java program to get the current system environment and system properties.", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise88 {\r\n public static void main(String[] args)\r\n {\r\n        System.out.println(\"\\nCurrent system environment:\");\r\n         System.out.println(System.getenv());\t \r\n\tSystem.out.println(\"\\n\\nCurrent system properties:\");\r\n    System.out.println(System.getProperties());\t\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-88.php"}, {"exercise_number": 89, "exercise_content": "89. Write a Java program to check whether a security manager has already been established for the current application or not.", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise89 {\r\n public static void main(String[] args)\r\n {\r\n\tSystem.out.println(\"System security interface:\");\r\n    System.out.println(System.getSecurityManager());\t \r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-89.php"}, {"exercise_number": 90, "exercise_content": "90. Write a Java program to get the value of the environment variable PATH, TEMP, USERNAME.", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise90 {\r\n public static void main(String[] args)\r\n {\r\n\t  // gets the value of the specified environment variable \"PATH\"\r\n      System.out.println(\"\\nEnvironment variable PATH: \");\r\n      System.out.println(System.getenv(\"PATH\"));\r\n\r\n      // gets the value of the specified environment variable \"TEMP\"\r\n      System.out.println(\"\\nEnvironment variable TEMP: \");\r\n      System.out.println(System.getenv(\"TEMP\"));\r\n\r\n      // gets the value of the specified environment variable \"USERNAME\"\r\n      System.out.println(\"\\nEnvironment variable USERNAME: \");\r\n      System.out.println(System.getenv(\"USERNAME\"));\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-90.php"}, {"exercise_number": 91, "exercise_content": "91. Write a Java program to measure how long some code takes to execute in nanoseconds.", "exercise_solution_code": "import java.lang.*;\r\n public class Exercise91 {\r\n public static void main(String[] args)\r\n {    \r\n    long startTime = System.nanoTime(); \r\n\t// Sample program\r\n\t// Display the first 10 natural numbers.\r\n\tint i;\r\n\tSystem.out.println (\"The first 10 natural numbers are:\\n\");\r\n\tfor (i=1;i<=10;i++)\r\n\t{      \r\n\t\tSystem.out.println (i);\r\n\t}\r\n\t\tlong estimatedTime = System.nanoTime() - startTime;\r\n\tSystem.out.println(\"Estimated time (in nanoseconds) to get the first 10 natural numbers: \"+estimatedTime);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-91.php"}, {"exercise_number": 92, "exercise_content": "92. Write a Java program to count the number of even and odd elements in a given array of integers.", "exercise_solution_code": "import java.util.*; \r\npublic class Exercise92 {\r\n public static void main(String[] args)\r\n {\r\n    int[] nums = {5, 7, 2, 4, 9};\r\n\tint ctr_even = 0, ctr_odd = 0;\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(nums)); \r\n\t    \r\n    for(int i = 0; i < nums.length; i++) {\r\n        if(nums[i] % 2 == 0)\r\n\t\t{         \r\n          ctr_even++;\r\n\t\t}\r\n\t\telse\r\n\t\t   ctr_odd++;\t\r\n    }                 \r\n    System.out.printf(\"\\nNumber of even elements in the array: %d\",ctr_even);\r\n\tSystem.out.printf(\"\\nNumber of odd elements in the array: %d\",ctr_odd);\r\n\tSystem.out.printf(\"\\n\");\t\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-92.php"}, {"exercise_number": 93, "exercise_content": "93. Write a Java program to test if an array of integers contains an element 10 next to 10 or an element 20 next to 20, but not both.", "exercise_solution_code": "import java.util.*; \r\npublic class Exercise93 {\r\n public static void main(String[] args)\r\n {\r\n    //int[] nums = {10, 10, 2, 4, 9};\r\n\tint[] nums = {10, 10, 2, 4, 20, 20};  \r\n\tint ctr_even = 0, ctr_odd = 0;\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(nums)); \r\n\t    \r\n    boolean found1010 = false;\r\n    boolean found2020 = false;\r\n      \r\n    for(int i = 0; i < nums.length - 1; i++) {\r\n        if(nums[i] == 10 && nums[i+1] == 10)\r\n            found1010 = true;\r\n                        \r\n        if(nums[i] == 20 && nums[i+1] == 20)\r\n            found2020 = true;\r\n    }\r\n   \r\n\tSystem.out.printf( String.valueOf(found1010 != found2020));\t\r\n\tSystem.out.printf(\"\\n\");\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-93.php"}, {"exercise_number": 94, "exercise_content": "94. Write a Java program to rearrange all the elements of a given array of integers so that all the odd numbers come before all the even numbers.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise94 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {1, 7, 8, 5, 7, 13, 0, 2, 4, 9};\r\n\t  \r\n\tint i = 0;\r\n    System.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n    while(i < array_nums.length && array_nums[i] % 2 == 0)\r\n        i++;\r\n              \r\n    for(int j = i + 1; j < array_nums.length; j++) {\r\n        if(array_nums[j] % 2 != 0) {\r\n            int temp = array_nums[i];\r\n            array_nums[i] = array_nums[j];\r\n            array_nums[j] = temp;\r\n            i++;\r\n        }\r\n    }                                                    \r\n  \r\n\t System.out.println(\"New Array: \"+Arrays.toString(array_nums)); \r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-94.php"}, {"exercise_number": 95, "exercise_content": "95. Write a Java program to create an array (length # 0) of string values. The elements will contain \"0\", \"1\", \"2\" \u2026 through ... n-1.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise95 {\r\n public static void main(String[] args)\r\n {\r\n    int n= 5;\r\n\tString[] arr_string = new String[n];\r\n\t\r\n    for(int i = 0; i < n; i++)\r\n        arr_string[i] = String.valueOf(i);                                  \r\n\t System.out.println(\"New Array: \"+Arrays.toString(arr_string)); \r\n\t }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-95.php"}, {"exercise_number": 96, "exercise_content": "96. Write a Java program to check if there is a 10 in a given array of integers with a 20 somewhere later in the array.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise96 {\r\n public static void main(String[] args)\r\n {\r\n\t  int[] array_nums = {10, 70, 80, 50, 20, 13, 50};\r\n      boolean testd = false;\r\n\t  int result=0;\r\n\t  int x = 10;\r\n\t  int y = 20;\r\n    \r\n    for(int i = 0; i < array_nums.length; i++) {\r\n        if(array_nums[i] == x)\r\n            testd = true;\r\n                    \r\n        if(testd && array_nums[i] == y)\r\n\t\t{\r\n         System.out.printf( String.valueOf(true));\t\r\n         result = 1\t\t ;\r\n\t\t}\r\n    }\r\n     if (result==0)                             \r\n\t   {\t \r\n         System.out.printf( String.valueOf(false));\r\n\t    }\r\n\t\tSystem.out.printf(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-96.php"}, {"exercise_number": 97, "exercise_content": "97. Write a Java program to check if an array of integers contains a specified number next to each other or there are two same specified numbers separated by one element.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise97 {\r\n public static void main(String[] args)\r\n {\r\n\t  int[] array_nums = {10, 20, 10, 50, 20, 13, 50};\r\n\t//int[] array_nums = {10, 10, 50, 50, 20, 13, 50};\r\n      boolean testd = false;\r\n\t  int result=0;\r\n\t  int x = 10;\r\n\t      \r\n\tfor(int i = 0; i < array_nums.length - 1; i++) {\r\n        if(array_nums[i] == x && array_nums[i+1] == x)\r\n            {\r\n         System.out.printf( String.valueOf(true));\t\r\n         result = 1 ;\r\n\t\t}\r\n                  \r\n        if(i <= array_nums.length - 3 && array_nums[i] == x && array_nums[i+2] == x)\r\n           {\r\n         System.out.printf( String.valueOf(true));\t\r\n         result = 1 ;\r\n\t\t}\r\n    }\r\n\t\r\n\t if (result==0)                             \r\n\t   {\t \r\n         System.out.printf( String.valueOf(false));\r\n\t    }\r\n\t\tSystem.out.printf(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-97.php"}, {"exercise_number": 98, "exercise_content": "98. Write a Java program to check if the value 20 appears three times and no 20's are next to each other in a given array of integers.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise98 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {10, 20, 10, 20, 40, 13, 20};\r\n\t\t\r\n\tint count = 0, result =0;\r\n    \r\n    if(array_nums.length >= 1 && array_nums[0] == 20)\r\n        count++;\r\n\r\n    for(int i = 1; i < array_nums.length; i++) {\r\n        if(array_nums[i - 1] == 20 && array_nums[i] == 20)\r\n\t\t{\r\n         System.out.printf( String.valueOf(false));\t\r\n         result = 1;\r\n\t\t}                   \r\n        if(array_nums[i] == 20)\r\n            count++;\r\n    }\r\n                                          \r\n    if (result==0)\r\n \t  {\r\n     \t System.out.printf( String.valueOf(count == 3));\t         \r\n\t  }\t\r\n\t  System.out.printf(\"\\n\");\t\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-98.php"}, {"exercise_number": 99, "exercise_content": "99. Write a Java program to check if a specified number appears in every pair of adjacent element of a given array of integers.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise99 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {10, 20, 10, 20, 40, 20, 50};\r\n\tint result = 0;\t\r\n\tint x = 20;\r\n\tfor(int i = 0; i < array_nums.length - 1; i++) {\r\n        if(array_nums[i] != x && array_nums[i + 1] != x)\r\n\t\t{\r\n                                result = 1;\t\r\n\t\t}        \r\n    }                                   \r\n    if (result==0)\r\n \t  {\r\n     \t System.out.printf( String.valueOf(true));\t         \r\n\t  }\r\n else\r\n\t   \t  {\r\n     \t System.out.printf( String.valueOf(false));\t         \r\n\t  }\t\t\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-99.php"}, {"exercise_number": 100, "exercise_content": "100. Write a Java program to count the two elements of two given arrays of integers with same length, differ by 1 or less.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise100 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums1 = {10, 11, 10, 20, 43, 20, 50};\r\n\tint[] array_nums2 = {10, 13, 11, 20, 44, 30, 50};\r\n\tSystem.out.println(\"Array1: \"+Arrays.toString(array_nums1)); \r\n\tSystem.out.println(\"Array2: \"+Arrays.toString(array_nums2)); \r\n\tint ctr = 0;\r\n    \r\n    for(int i = 0; i < array_nums1.length; i++) {\r\n        if(Math.abs(array_nums1[i] - array_nums2[i]) <= 1 && array_nums1[i] != array_nums2[i])\r\n            ctr++;\r\n    }\r\n                    \r\n    System.out.printf(\"Number of elements: \"+ctr);\r\n\tSystem.out.printf(\"\\n\");\t \r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-100.php"}, {"exercise_number": 101, "exercise_content": "101. Write a Java program to check if the number of 10 is greater than number to 20 in a given array of integers.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise101 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {10, 11, 10, 30, 45, 20, 33, 53};\r\n    int result = 0; \r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n    \r\n\tint ctr1 = 0;\r\n    int ctr2 = 0;\r\n      \r\n    for(int i = 0; i < array_nums.length; i++) {\r\n        if(array_nums[i] == 10)\r\n            ctr1++;\r\n                        \r\n        if(array_nums[i] == 20)\r\n            ctr2++;\r\n    }                                      \r\n    System.out.printf(String.valueOf(ctr1 > ctr2));\r\n\tSystem.out.printf(\"\\n\");\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-101.php"}, {"exercise_number": 102, "exercise_content": "102. Write a Java program to check if a specified array of integers contains 10 or 30.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise102 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {11, 11, 13, 31, 45, 20, 33, 53};\r\n    int result = 1; \r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\t\r\n\tfor(int i = 0; i < array_nums.length; i++)\r\n     {\r\n      \tif(array_nums[i] == 10 || array_nums[i] == 30)\r\n\t\t{\t\r\n  \t\t\r\n\t\t   result =0;\r\n\t\t}\r\n      }\r\n\t if (result==1)\r\n \t   System.out.printf( String.valueOf(false));\t         \r\n     else\r\n\t   System.out.printf(String.valueOf(true));\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-102.php"}, {"exercise_number": 103, "exercise_content": "103. Write a Java program to create a new array from a given array of integers, new array will contain the elements from the given array after the last element value 10.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise103 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {11, 10, 13, 10, 45, 20, 33, 53};\r\n    int result = 0; \r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\t\r\n\tint l = array_nums.length - 1;\r\n\tint[] new_array;\r\n\twhile(array_nums[l] != 10)\r\n\t\tl--;\r\n\tnew_array = new int[array_nums.length - 1 - l];\r\n\tfor(int i = l + 1; i < array_nums.length; i++)\r\n\t\tnew_array[i - l - 1] = array_nums[i];\r\n\tSystem.out.println(\"New Array: \"+Arrays.toString(new_array)); \r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-103.php"}, {"exercise_number": 104, "exercise_content": "104. Write a Java program to create a new array from a given array of integers, new array will contain the elements from the given array before the last element value 10.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise104 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {11, 15, 13, 10, 45, 20, 33, 53};\r\n    int result = 0; \r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\t\r\n\tint l = 0;\r\n\tint[] new_array;\r\n\twhile(array_nums[l] != 10)\r\n\t  l++;\r\n\tnew_array = new int[l];\r\n\tfor(int i = 0; i < l; i++)\r\n\t\tnew_array[i] = array_nums[i];\r\n\tSystem.out.println(\"New Array: \"+Arrays.toString(new_array)); \r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-104.php"}, {"exercise_number": 105, "exercise_content": "105. Write a Java program to check if a group of numbers (l) at the start and end of a given array are same.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise105 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {11, 15, 13, 10, 45, 20, 11, 15};\r\n    System.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\t\r\n\tint result = 0;\r\n\tint l = 2;\r\n    int start = 0;\r\n\tint end = array_nums.length-l;\r\n\tfor(; l > 0; l--)\r\n\t{\r\n\t\tif(array_nums[start] != array_nums[end])\r\n\t\t\tresult = 1;\r\n\t\telse\r\n\t\t{\r\n\t\t\tstart++;\r\n\t\t\tend++;\r\n\t\t}\r\n\t}\r\n\t                \r\n    if (result==1)\r\n\t {\r\n\t  System.out.printf(String.valueOf(false));\r\n\t }\r\n\telse\r\n\t {\r\n\t   System.out.printf(String.valueOf(true));\r\n\t }\r\n\t System.out.printf(\"\\n\");\t\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-105.php"}, {"exercise_number": 106, "exercise_content": "106. Write a Java program to create a new array that is left shifted from a given array of integers.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise106 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {11, 15, 13, 10, 45, 20};\r\n    System.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\t\r\n\tif(array_nums.length >1)\r\n    {          \r\n    int first = array_nums[0];\r\n              \r\n    for(int i = 1; i < array_nums.length; i++)\r\n        array_nums[i - 1] = array_nums[i];\r\n                        \r\n    array_nums[array_nums.length - 1] = first;\r\n\tSystem.out.println(\"New Array: \"+Arrays.toString(array_nums)); \r\n\t}\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-106.php"}, {"exercise_number": 107, "exercise_content": "107. Write a Java program to check if an array of integers contains three increasing adjacent numbers.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise107 {\r\n public static void main(String[] args)\r\n {\r\n\tint[] array_nums = {11, 12, 13, 14, 45, 20};\r\n    System.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint result =1;\r\n\t\r\n      for(int i = 0; i <= array_nums.length - 3; i++) {\r\n        if(array_nums[i] + 1 == array_nums[i+1] && array_nums[i+1] + 1 == array_nums[i+2])\r\n            result =0;\r\n    }\r\n                \r\n\tif (result==1)\r\n\t {\r\n\t  System.out.printf(String.valueOf(false));\r\n\t }\r\n\telse\r\n\t {\r\n\t   System.out.printf(String.valueOf(true));\r\n\t }\r\n\t System.out.printf(\"\\n\");\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-107.php"}, {"exercise_number": 108, "exercise_content": "108. Write a Java program to add all the digits of a given positive integer until the result has a single digit.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example108 {\r\n     public static void main(String[] arg) {\t\r\n        Scanner in = new Scanner(System.in);\t\r\n       System.out.print(\"Input a positive integer: \");\r\n        int n = in.nextInt(); \r\n\t\tif (n>0)\r\n\t\t{\r\n           System.out.print(\"The single digit number is: \"+(n == 0 ? 0 : (n % 9 == 0 ? 9 : n % 9)));\r\n\t\t}\r\n\t\tSystem.out.println(\"\\n\");  \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-108.php"}, {"exercise_number": 109, "exercise_content": "109. Write a Java program to form a staircase shape of n coins where every k-th row must have exactly k coins.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example109 {\r\n     public static void main(String[] arg) {\r\n\t  Scanner in = new Scanner(System.in);\t\r\n       System.out.print(\"Input a positive integer: \");\r\n        int n = in.nextInt(); \r\n\t\tif (n>0)\r\n\t\t{\r\n           System.out.println(\"Number of rows: \"+((int)((Math.sqrt(8 * (long)n + 1) - 1) / 2)));\t\r\n\t\t}       \t\r\n\t}\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-109.php"}, {"exercise_number": 110, "exercise_content": "110. Write a Java program to check whether a given integer is a power of 4 or not. \nGiven num = 64, return true. Given num = 6, return false.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example110 {\r\n     public static void main(String[] arg) \r\n\t {\r\n\t   int test = 0;\r\n\t   Scanner in = new Scanner(System.in);\t\r\n\t   System.out.print(\"Input a positive integer: \");\r\n\t   int n = in.nextInt(); \r\n       if (n < 1) {\r\n\t\t\t System.out.print(Boolean.toString(false));\r\n\t\t\t test = 1;\r\n\t\t}\r\n\t\tif ((n & (n - 1)) != 0) {\r\n\t\t\tSystem.out.print(Boolean.toString(false));\r\n\t\t\ttest = 1;\r\n\t\t}\r\n\t\tif (test==0)\r\n\t\t{\r\n\t\t\tSystem.out.print(Boolean.toString((n & 0x55555555) != 0));      \t\r\n\t\t}\r\n\t\tSystem.out.print(\"\\n\");\r\n\t}\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-110.php"}, {"exercise_number": 111, "exercise_content": "111. Write a Java program to add two numbers without using any arithmetic operators. Given x = 10 and y = 12; result = 22", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example111 {\r\n     public static void main(String[] arg) \r\n\t {\r\n\t   int x, y ;\r\n\t   Scanner in = new Scanner(System.in);\t\r\n\t   System.out.print(\"Input first number: \");\r\n\t   x = in.nextInt(); \r\n\t   System.out.print(\"Input second number: \");\r\n\t   y = in.nextInt(); \r\n      while(y != 0){\r\n            int carry = x & y;\r\n            x = x ^ y;\r\n            y = carry << 1;\r\n        }\r\n        System.out.print(\"Sum: \"+x); \r\n\t\tSystem.out.print(\"\\n\");     \t\r\n\t}\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-111.php"}, {"exercise_number": 112, "exercise_content": "112. Write a Java program to compute the number of trailing zeros in a factorial. 7! = 5040, therefore the output should be 1", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example112 {\r\n     public static void main(String[] arg) \r\n\t {\r\n\r\n\t\tScanner in = new Scanner(System.in);\t\r\n\t\tSystem.out.print(\"Input a number: \");\r\n\t    int n = in.nextInt(); \r\n        int n1 = n;\r\n\t\tlong ctr = 0;\r\n\t\twhile (n != 0) \r\n\t\t{\r\n\t\t\tctr += n / 5;\r\n\t\t\tn /= 5;\r\n\t\t}\r\n\t\tSystem.out.printf(\"Number of trailing zeros of the factorial %d is %d \",n1,ctr);\r\n\t\tSystem.out.printf(\"\\n\");      \t   \r\n\t}\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-112.php"}, {"exercise_number": 113, "exercise_content": "113. Write a Java program to merge two given sorted array of integers and create a new sorted array. array1 = [1,2,3,4]\narray2 = [2,5,7, 8]\nresult = [1,2,2,3,4,5,7,8]", "exercise_solution_code": "import java.util.*;\r\npublic class Example113 {\r\n     public static void main(String[] arg) \r\n\t {\r\n\t \r\n      // Sorted integer array array1 which has m elements, \r\n      // but size of array1 is m+n, sorted integer array array2 which has n elements\r\n\t    \r\n  //declaration and instantiation.\r\n        int array1[]=new int[8];\r\n//initialization.\r\n       array1[0]=1;\r\n        array1[1]=2;\r\n        array1[2]=3;\r\n        array1[3]=4;\r\n       int[] array2 = {2,5,7,8};\r\n        System.out.println(\"\\nArray1: \"+Arrays.toString(array1));  \r\n\t    System.out.println(\"\\nArray2: \"+Arrays.toString(array2));\r\n\t\tint m =4, n=4;\r\n\t\tint i = m-1, j = n-1, index = m + n - 1;\r\n        while (i >= 0 && j >= 0) {\r\n            if (array1[i] > array2[j]) {\r\n                array1[index--] = array1[i--];\r\n            } else {\r\n                array1[index--] = array2[j--];\r\n            }\r\n        }\r\n        while (i >= 0) {\r\n            array1[index--] = array1[i--];\r\n        }\r\n        while (j >= 0) {\r\n            array1[index--] = array2[j--];\r\n        }\r\n \r\n    \tSystem.out.println(\"\\nMerged array: \"+Arrays.toString(array1));  \r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-113.php"}, {"exercise_number": 114, "exercise_content": "114. Write a Java program to given a string and an offset, rotate string by offset (rotate from left to right).", "exercise_solution_code": "import java.util.*;\r\nimport java.util.*;\r\npublic class Example114 {\r\n     public static void main(String[] arg) \r\n   {\r\n\t String str = \"abcdef\"; \r\n     char[] A = str.toCharArray();\r\n\t int offset=3;\r\n     int len = A.length;\r\n     offset %= len;\r\n     reverse(A, 0, len - offset - 1);\r\n     reverse(A, len - offset, len - 1);\r\n     reverse(A, 0, len - 1);\r\n     System.out.println(\"\\n\"+Arrays.toString(A));\r\n    }\r\n\r\n    private static void reverse(char[] str, int start, int end) {\r\n        while (start < end) {\r\n            char temp = str[start];\r\n            str[start] = str[end];\r\n            str[end] = temp;\r\n            start++;\r\n            end--;\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-114.php"}, {"exercise_number": 115, "exercise_content": "115. Write a Java program to check if a positive number is a palindrome or not. \nInput a positive integer: 151 \nIs 151 is a palindrome number? \ntrue", "exercise_solution_code": "import java.util.*;\r\npublic class test {\r\n public static void main(String[] args)\r\n {\r\n        int num;\r\n        Scanner in = new Scanner(System.in);\t\r\n        System.out.print(\"Input a positive integer: \");\r\n        int n = in.nextInt();\r\n        System.out.printf(\"Is %d is a palindrome number?\\n\",n);\r\n\t\tSystem.out.println(is_Palindrome(n));\r\n    }\r\npublic static int reverse_nums(int n) {\r\n        int reverse = 0;\r\n        while (n != 0) {\r\n            reverse *= 10;\r\n            reverse += n % 10;\r\n            n /= 10;\r\n        }\r\n        return reverse;\r\n    }\r\npublic static boolean is_Palindrome(int n) {\r\n        return (n == reverse_nums(n));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-115.php"}, {"exercise_number": 116, "exercise_content": "116. Write a Java program which iterates the integers from 1 to 100. For multiples of three print \"Fizz\" instead of the number and print \"Buzz\" for the multiples of five. When number is divided by both three and five, print \"fizz buzz\".", "exercise_solution_code": "import java.util.*; \r\npublic class Exercise116 {\r\n public static void main(String[] args)\r\n {\r\n        for (int i = 1; i <= 100; i++) {\r\n            if (i % 3 == 0 && i % 5 == 0) {\r\n                System.out.printf(\"\\n%d: fizz buzz\",i);\r\n            } else if (i % 5 == 0) {\r\n                System.out.printf(\"\\n%d: buzz\",i);\r\n            } else if (i % 3 == 0) {\r\n                System.out.printf(\"\\n%d: fizz\",i);\r\n            } \r\n        }\r\n        System.out.printf(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-116.php"}, {"exercise_number": 117, "exercise_content": "117. Write a Java program to compute the square root of a given integer. \nInput a positive integer: 25\nSquare root of 25 is: 5", "exercise_solution_code": "import java.util.*; \r\npublic class Exercise117 {\r\n public static void main(String[] args)\r\n {\r\n        int num;\r\n        Scanner in = new Scanner(System.in);\t\r\n        System.out.print(\"Input a positive integer: \");\r\n        int n = in.nextInt(); \r\n        System.out.printf(\"Square root of %d is: \",n);\r\n\t\tSystem.out.println(sqrt(n)); \r\n    }\r\n    \r\nprivate static int sqrt(int num) {\r\n        if (num == 0 || num == 1) {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\tint a = 0;\r\n\t\tint b = num;\r\n\t\twhile (a <= b) {\r\n\t\t\tint mid = (a + b) >> 1;\r\n\t\t\tif (num / mid < mid) {\r\n\t\t\t\tb = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\tif (num / (mid + 1) <= mid) {\r\n\t\t\t\t\treturn mid;\r\n\t\t\t\t}\r\n\t\t\t\ta = mid + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-117.php"}, {"exercise_number": 118, "exercise_content": "118. Write a Java program to get the first occurrence (Position starts from 0.) of a string within a given string.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main {\r\npublic static void main(String[] args) {\r\n   \t\tString s = \"Python\";\r\n   \t\t//String t = \"Py\";\r\n   \t\t  String t = \"yt\";\r\n   \t\t// String t = \"ab\";   \t\t\r\n   System.out.printf(String.valueOf(strStr(s, t)));\r\n\t\t  }     \r\npublic static int strStr(String source, String target) {\r\n        if (source == null || target == null) {\r\n            return -1;\r\n        }\r\n        if (\"\".equals(target) || source.equals(target)) {\r\n            return 0;\r\n        }\r\n        int i = 0;\r\n        int last = source.length() - target.length() + 1;\r\n        while (i < last) {\r\n            if (source.charAt(i) == target.charAt(0)) {\r\n                boolean equal = true;\r\n                for (int j = 0; j < target.length() && equal; ++j) {\r\n                    if (source.charAt(i + j) != target.charAt(j)) {\r\n                        equal = false;\r\n                    }\r\n                }\r\n                if (equal) {\r\n                    return i;\r\n                }\r\n            }\r\n            ++i;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-118.php"}, {"exercise_number": 119, "exercise_content": "119. Write a Java program to get the first occurrence (Position starts from 0.) of an element of a given array.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main {\r\npublic static void main(String[] args) {\r\n    int nums[] = {2, 4, 6, 7, 8};\r\n    int target = 7;\r\n        int lower = 0;\r\n        int upper = nums.length - 1;\r\n        int index = -1;\r\n        while (lower <= upper) {\r\n            int mid = (lower + upper) >> 1;\r\n            if (nums[mid] == target) {\r\n                index = mid;\r\n            }\r\n            if (nums[mid] >= target) {\r\n                upper = mid - 1;\r\n            } else {\r\n                lower = mid + 1;\r\n            }\r\n        }\r\n        System.out.print(\"Position of \"+target +\" is \"+index);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-119.php"}, {"exercise_number": 120, "exercise_content": "120. Write a Java program that searches a value in an m x n matrix.", "exercise_solution_code": "public class Main {\r\npublic static void main(String[] args) {\r\n // int target = 5;\r\n  int target = 0;\r\n  int[][] matrix = new int[3][3];\r\n        for (int row = 0; row < 3; row ++)\r\n            for (int col = 0; col < 3; col++)\r\n                matrix[row][col] = (1 + row * 3 + col);\r\n\r\n        for (int row = 0; row < 3; row ++)\r\n        {\r\n            for (int col = 0; col < 3; col++)\r\n              {\r\n                System.out.print(matrix[row][col]+\" \");\r\n                if (col == 2)\r\n                System.out.println();\r\n              }\r\n        }\r\n      System.out.print(Boolean.toString(searchMatrix(matrix, target))); \r\n    }\r\n  public static boolean searchMatrix(int[][] matrix, int target) {\r\n        if (matrix.length == 0 || matrix[0].length == 0) {\r\n            return false;\r\n        }\r\n        int m = matrix.length;\r\n        int n = matrix[0].length;\r\n        int lower = 0;\r\n        int higher = m * n - 1;\r\n        while (lower <= higher) {\r\n            int mid = (lower + higher) >> 1;\r\n            int val = matrix[mid / n][mid % n];\r\n            if (val == target) {\r\n                return true;\r\n            }\r\n            if (val < target) {\r\n                lower = mid + 1;\r\n            } else {\r\n                higher = mid - 1;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-120.php"}, {"exercise_number": 121, "exercise_content": "121. Write a Java program to reverse a given linked list. \nExample: For linked list 20->40->60->80, the reversed linked list is 80->60->40->20", "exercise_solution_code": "class LinkedList {\r\n\r\n\tstatic Node head;\r\n\r\n\tstatic class Node {\r\n\r\n\t\tint data;\r\n\t\tNode next_node;\r\n\r\n\t\tNode(int d) {\r\n\t\t\tdata = d;\r\n\t\t\tnext_node = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/* Reverse the linked list */\r\n\tNode reverse(Node node) {\r\n\t\tNode prev_node = null;\r\n\t\tNode current_node = node;\r\n\t\tNode next_node = null;\r\n\t\twhile (current_node != null) {\r\n\t\t\tnext_node = current_node.next_node;\r\n\t\t\tcurrent_node.next_node = prev_node;\r\n\t\t\tprev_node = current_node;\r\n\t\t\tcurrent_node = next_node;\r\n\t\t}\r\n\t\tnode = prev_node;\r\n\t\treturn node;\r\n\t}\r\n\r\n\t// Prints the elements of the double linked list\r\n\tvoid printList(Node node) {\r\n\t\twhile (node != null) {\r\n\t\t\tSystem.out.print(node.data + \" \");\r\n\t\t\tnode = node.next_node;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tLinkedList list = new LinkedList();\r\n\t\tlist.head = new Node(20);\r\n\t\tlist.head.next_node = new Node(40);\r\n\t\tlist.head.next_node.next_node = new Node(60);\r\n\t\tlist.head.next_node.next_node.next_node = new Node(80);\r\n\t\t\r\n\t\tSystem.out.println(\"Original Linked list:\");\r\n\t\tlist.printList(head);\r\n\t\thead = list.reverse(head);\r\n\t\tSystem.out.println(\"\");\r\n\t\tSystem.out.println(\"Reversed Linked list:\");\r\n\t\tlist.printList(head);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-121.php"}, {"exercise_number": 122, "exercise_content": "122. Write a Java program to find a contiguous subarray with largest sum from a given array of integers. \nNote: In computer science, the maximum subarray problem is the task of finding the contiguous subarray within a one-dimensional array of numbers which has the largest sum. For example, for the sequence of values \u22122, 1, \u22123, 4, \u22121, 2, 1, \u22125, 4; the contiguous subarray with the largest sum is 4, \u22121, 2, 1, with sum 6.\nThe subarray should contain one integer at least.", "exercise_solution_code": "public class Main {\r\npublic static void main(String[] args) {\r\n      int[] nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};\r\n      System.out.print(max_SubArray(nums)); \r\n}\r\n public static int max_SubArray(int[] nums) {\r\n        if (nums.length < 1) {\r\n            return 0;\r\n        }\r\n        int max = nums[0];\r\n        int max_Begin = 0;\r\n        int max_End = 0;\r\n        int begin = 0;\r\n        int end = 0;\r\n        int sum = 0;\r\n        while (end < nums.length) {\r\n            sum += nums[end];\r\n            if (sum < 0) {\r\n                sum = 0;\r\n                begin = end + 1;\r\n            } else {\r\n                if (sum > max) {\r\n                    max = sum;\r\n                    max_Begin = begin;\r\n                    max_End = end;\r\n                }\r\n            }\r\n            end++;\r\n        }\r\n        return max;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-122.php"}, {"exercise_number": 123, "exercise_content": "123. Write a Java program to find the subarray with smallest sum from a given array of integers.", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\npublic static void main(String[] args) {\r\n     ArrayList<Integer> nums = new ArrayList<Integer>();\r\n      nums.add(-2);\r\n      nums.add(1);\r\n      nums.add(-3);\r\n      nums.add(4);\r\n      System.out.print(min_SubArray(nums)); \r\n}\r\n public static int min_SubArray(ArrayList<Integer> nums) { \r\n   int[] nums1 = new int[nums.size()];\r\n        nums1[0] = nums.get(0);\r\n        int min = nums1[0];\r\n        for (int i = 1; i < nums.size(); ++i) {\r\n            nums1[i] = Math.min(nums.get(i), nums.get(i) + nums1[i - 1]);\r\n            min = Math.min(min, nums1[i]);\r\n        }\r\n        return min;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-123.php"}, {"exercise_number": 124, "exercise_content": "124. Write a Java program to find the index of a value in a sorted array. If the value does not find return the index where it would be if it were inserted in order. \nExample: \n[1, 2, 4, 5, 6] 5(target) -> 3(index)\n[1, 2, 4, 5, 6] 0(target) -> 0(index)\n[1, 2, 4, 5, 6] 7(target) -> 5(index)", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\npublic static void main(String[] args) {\r\n      int[] nums = {1,2,4,5,6};\r\n      int target;\r\n       target = 5;\r\n     // target = 0;\r\n     // target = 7;\r\n      System.out.print(searchInsert(nums, target)); \r\n}\r\n  public static int searchInsert(int[] nums1, int target) {\r\n        if (nums1 == null || nums1.length == 0) {\r\n            return 0;\r\n        }\r\n        int start = 0;\r\n        int end = nums1.length - 1;\r\n        int mid = start + (end - start)/2;\r\n\r\n        while (start + 1 < end) {\r\n            mid = start + (end - start)/2;\r\n            if (nums1[mid] == target) {\r\n                return mid;\r\n            } else if (nums1[mid] > target) {\r\n                end = mid;\r\n            } else {\r\n                start = mid;\r\n            }\r\n        }\r\n        \r\n        if (nums1[start] >= target) {\r\n            return start;\r\n        } else if (nums1[start] < target && target <= nums1[end]) {\r\n            return end;\r\n        } else {\r\n            return end + 1;\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-124.php"}, {"exercise_number": 125, "exercise_content": "125. Write a Java program to get the preorder traversal of its nodes' values of a given a binary tree. \nExample:10\r\n   / \\\r\n  20   30\r\n / \\\r\n40   50\r\n\nExpected output: 10 20 40 50 30", "exercise_solution_code": "class Node\r\n{\r\n    int key;\r\n    Node left, right;\r\n\r\n    public Node(int item)\r\n    {\r\n        key = item;\r\n        left = right = null;\r\n    }\r\n}\r\n\r\nclass BinaryTree\r\n{\r\n    // Root of Binary Tree\r\n    Node root;\r\n    BinaryTree()\r\n    {\r\n        root = null;\r\n    }\r\n\r\n// Print the nodes of binary tree\r\n  \r\n    void print_Preorder(Node node)\r\n    {\r\n        if (node == null)\r\n            return;\r\n\r\n        /* Print data of node */\r\n        System.out.print(node.key + \" \");\r\n\r\n        print_Preorder(node.left);\r\n\r\n        print_Preorder(node.right);\r\n    }\r\n     \r\n    void print_Preorder()  \r\n\t{   \r\n\t  print_Preorder(root); \r\n\t}\r\n\r\n    // Driver method\r\n    public static void main(String[] args)\r\n    {\r\n        BinaryTree tree = new BinaryTree();\r\n        tree.root = new Node(55);\r\n        tree.root.left = new Node(21);\r\n        tree.root.right = new Node(80);\r\n        tree.root.left.left = new Node(9);\r\n        tree.root.left.right = new Node(29);\r\n        tree.root.right.left = new Node(76);\r\n        tree.root.right.right = new Node(91);\r\n\r\n        System.out.println(\"Preorder traversal of binary tree is: \");\r\n        tree.print_Preorder();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-125.php"}, {"exercise_number": 126, "exercise_content": "126. Write a Java program to get the inorder traversal of its nodes' values of a given a binary tree.10\r\n   / \\\r\n  20   30\r\n / \\\r\n40   50\r\n\nExample:{10, 20, 30, 40, 50}Output: 40 20 50 10 30", "exercise_solution_code": "class Node\r\n{\r\n    int key;\r\n    Node left, right;\r\n \r\n    public Node(int item)\r\n    {\r\n        key = item;\r\n        left = right = null;\r\n    }\r\n}\r\n \r\nclass BinaryTree\r\n{\r\n    // Root of Binary Tree\r\n    Node root;\r\n \r\n    BinaryTree()\r\n    {\r\n        root = null;\r\n    } \r\n  \r\n    // Print the nodes of binary tree in inorder\r\n    void print_Inorder(Node node)\r\n    {\r\n        if (node == null)\r\n            return;\r\n \r\n        print_Inorder(node.left);\r\n \r\n     // Print the data of node\r\n        System.out.print(node.key + \" \");\r\n \r\n        print_Inorder(node.right);\r\n    }\r\n \r\n\tvoid print_Inorder()\r\n\t   {     \r\n\t     print_Inorder(root);   \r\n\t     \r\n\t   }\r\n    \r\n    public static void main(String[] args)\r\n    {\r\n        BinaryTree tree = new BinaryTree();\r\n        tree.root = new Node(55);\r\n        tree.root.left = new Node(21);\r\n        tree.root.right = new Node(80);\r\n        tree.root.left.left = new Node(9);\r\n        tree.root.left.right = new Node(29);\r\n        tree.root.right.left = new Node(76);\r\n        tree.root.right.right = new Node(91);\r\n \r\n        System.out.println(\"\\nInorder traversal of binary tree is: \");\r\n        tree.print_Inorder(); \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-126.php"}, {"exercise_number": 127, "exercise_content": "127. Write a Java program to get the Postorder traversal of its nodes' values of a given a binary tree.10\r\n   / \\\r\n  20   30\r\n / \\\r\n40   50", "exercise_solution_code": "class Node\r\n{\r\n    int key;\r\n    Node left, right;\r\n\r\n    public Node(int item)\r\n    {\r\n        key = item;\r\n        left = right = null;\r\n    }\r\n}\r\n\r\nclass BinaryTree\r\n{\r\n  // Root of Binary Tree\r\n    Node root;\r\n\r\n    BinaryTree()\r\n    {\r\n        root = null;\r\n    }\r\n\r\n  // Print the nodes of binary tree\r\n\r\n    void print_Postorder(Node node)\r\n    {\r\n        if (node == null)\r\n            return;\r\n\r\n        print_Postorder(node.left);\r\n\r\n        print_Postorder(node.right);\r\n\r\n        System.out.print(node.key + \" \");\r\n    }\r\n\r\n   // Wrappers over above recursive functions\r\n    void print_Postorder()  \r\n\t{   \r\n\t   print_Postorder(root);  \r\n\t}\r\n        public static void main(String[] args)\r\n    {\r\n       BinaryTree tree = new BinaryTree();\r\n        tree.root = new Node(55);\r\n        tree.root.left = new Node(21);\r\n        tree.root.right = new Node(80);\r\n        tree.root.left.left = new Node(9);\r\n        tree.root.left.right = new Node(29);\r\n        tree.root.right.left = new Node(76);\r\n        tree.root.right.right = new Node(91);\r\n\r\n        System.out.println(\"\\nPostorder traversal of binary tree is: \");\r\n        tree.print_Postorder();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-127.php"}, {"exercise_number": 128, "exercise_content": "128.Write a Java program to calculate the median of a given unsorted array of integers. \nOriginal array: [10, 2, 38, 22, 38, 23]\nMedian of the said array of integers: 30\nOriginal array: [10, 2, 38, 23, 38, 23, 21]\nMedian of the said array of integers: 23", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n public static void main(String[] args)\r\n {\r\n    int[] nums = {10,2,38,22,38,23};\r\n    System.out.println(\"Original array: \"+Arrays.toString(nums));\r\n    System.out.println(\"Median of the said array of integers: \"+getMedian(nums));\r\n    int[] nums1 = {10,2,38,23,38,23,21};\r\n    System.out.println(\"\\nOriginal array: \"+Arrays.toString(nums1));\r\n    System.out.println(\"Median of the said array of integers: \"+getMedian(nums1));\r\n}\r\n public static int getMedian(int[] array) {\r\n        if(array.length % 2 == 0) {\r\n            int mid = array.length / 2;\r\n            return (array[mid] + array[mid - 1]) / 2;\r\n        }\r\n        return array[array.length / 2];\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-127.php"}, {"exercise_number": 129, "exercise_content": "129. Write a Java program to find a number that appears only once in a given array of integers, all numbers occur twice. \nSource Array : [10, 20, 10, 20, 30, 40, 40, 30, 50]\n50 appears only once", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n  public static  void main(String[] arg) \r\n   {\r\n\t int nums[] = {10, 20, 10, 20, 30, 40, 40, 30, 50};\r\n\t int result;\r\n\t System.out.println(\"Source Array : \"+Arrays.toString(nums));   \r\n     result = getSingleNumber(nums);\r\n     System.out.println(\"\\n\"+result+\" appears only once.\");\r\n    }\r\n\r\n     public static int getSingleNumber(int[] nums) {\r\n       if(nums == null || nums.length == 0) {\r\n         return -1;\r\n        }\r\n        int result = 0;\r\n        for (int i = 0; i < nums.length; i++) {\r\n            result ^= nums[i];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-129.php"}, {"exercise_number": 130, "exercise_content": "130. Write a Java program to find the maximum depth of a given a binary tree. \nSample Output:\nThe Maximum depth of the binary tree is: 3", "exercise_solution_code": "class Node\r\n{\r\n    int data;\r\n    Node left, right;\r\n    public Node(int item)\r\n    {\r\n        data = item;\r\n        left = right = null;\r\n    }\r\n}\r\npublic class BinaryTree\r\n{\r\n    //Root of the Binary Tree\r\n    Node root;\r\n \r\n   public int maxDepth(Node root) {\r\n    if(root==null)\r\n        return 0;\r\n    int left_Depth = maxDepth(root.left);\r\n    int right_Depth = maxDepth(root.right);\r\n    int bigger = Math.max(left_Depth, right_Depth);\r\n    return bigger+1;\r\n}\r\n     /* Driver program to test above functions */\r\n    public static void main(String args[])\r\n    {\r\n        BinaryTree tree = new BinaryTree();\r\n        tree.root = new Node(55);\r\n        tree.root.left = new Node(21);\r\n        tree.root.right = new Node(80);\r\n        tree.root.left.left = new Node(9);\r\n        tree.root.left.right = new Node(29);\r\n        tree.root.right.left = new Node(76);\r\n        tree.root.right.right = new Node(91);\r\n        System.out.println(\"The Maximum depth of the binary tree is: \" + tree.maxDepth(tree.root));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-130.php"}, {"exercise_number": 131, "exercise_content": "131. Write a Java program to find the new length of a given sorted array where each element appear only once (remove the duplicates ). \nOriginal array: [1, 1, 2, 3, 3, 3, 4, 5, 6, 7, 7]\nThe length of the original array is: 11\nAfter removing duplicates, the new length of the array is: 7", "exercise_solution_code": "import java.util.Arrays;\r\nclass Solution {\r\n    static  int removeDuplicates(int[] nums) {\r\n        if (nums == null) {\r\n            return 0;\r\n        }\r\n        if (nums.length <= 1) {\r\n            return nums.length;\r\n        }\r\n        int current_pos = 0;\r\n        int moving_pos;\r\n        for (moving_pos = 1; moving_pos < nums.length; moving_pos++) {\r\n            if (nums[current_pos] != nums[moving_pos]) {\r\n                nums[current_pos + 1] = nums[moving_pos];\r\n                current_pos++;\r\n            }\r\n        }\r\n        return current_pos + 1;\r\n    }\r\n\r\n    /* Driver program to test above functions */\r\n     public static void main(String[] args)\r\n    {\r\n        int[] nums = {1,1,2,3,3,3,4,5,6,7,7};\r\n        System.out.println(\"Original array: \"+Arrays.toString(nums));\r\n        System.out.println(\"The length of the original array is: \" + nums.length);\r\n        System.out.println(\"After removing duplicates, the new length of the array is: \" + removeDuplicates(nums));\r\n    }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-131.php"}, {"exercise_number": 132, "exercise_content": "132. Write a Java program to find the new length of a given sorted array where duplicate elements appeared at most twice. \nOriginal array: [1, 1, 2, 3, 3, 3, 4, 5, 6, 7, 7, 7, 7]\nThe length of the original array is: 13\nAfter removing duplicates, the new length of the array is: 10", "exercise_solution_code": "import java.util.Arrays;\r\n\r\nclass Solution {\r\n    static int remove_Duplicates_twice(int[] nums) {\r\n        if (nums == null || nums.length == 0) {\r\n            return 0;\r\n        }\r\n        \r\n        int index = 1;\r\n        for (int i = 2; i < nums.length; i++) {\r\n            if (nums[i] != nums[index] || (nums[i] == nums[index] && nums[i] != nums[index - 1])) {\r\n                index++;\r\n                nums[index] = nums[i];\r\n            }\r\n        }\r\n        return index + 1;\r\n    }\r\n\r\n  /* Driver program to test above functions */\r\n     public static void main(String[] args)\r\n    {\r\n        int[] nums = {1,1,2,3,3,3,4,5,6,7,7,7,7};\r\n        System.out.println(\"Original array: \"+Arrays.toString(nums));\r\n        System.out.println(\"The length of the original array is: \" + nums.length);\r\n        System.out.println(\"After removing duplicates, the new length of the array is: \" + remove_Duplicates_twice(nums));\r\n    }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-132.php"}, {"exercise_number": 133, "exercise_content": "133. Write a Java program to find a path from top left to bottom in right direction which minimizes the sum of all numbers along its path. \nNote: Move either down or right at any point in time.\nSample Output: Sum of all numbers along its path: 13", "exercise_solution_code": "public class Solution {\r\n    public static int minPathSum(int[][] grid) {\r\n        if (grid == null || grid.length == 0 || grid[0] == null || grid[0].length == 0) {\r\n            return 0;\r\n        }\r\n        int m = grid.length;\r\n        int n = grid[0].length;\r\n        int[][] temp = new int[m][n];\r\n\r\n        for (int i = 0; i < m; i++) {\r\n            for (int j = 0; j < n; j++) {\r\n                   if (i == 0 && j == 0) {\r\n                    temp[i][j] = grid[i][j];\r\n                    continue;\r\n                } \r\n                // Compute temp\r\n                int from_up = i == 0 ? Integer.MAX_VALUE : temp[i - 1][j];\r\n                int from_left = j == 0 ? Integer.MAX_VALUE : temp[i][j - 1];\r\n                temp[i][j] = Math.min(from_up, from_left) + grid[i][j];               \r\n            }\r\n        }\r\n       return temp[m - 1][n - 1];\r\n    }\r\n    /* Driver program to test above functions */\r\n    public static void main(String[] args) {\r\n     \r\n\t\tint[][] grid = new int[][] {{7,4,2},\r\n\t\t                            {0,5,6},\r\n    \t\t                        {3,1,2}};\r\n\t\t                          \r\n\t\tSystem.out.println(\"Sum of all numbers along its path: \"+minPathSum(grid));\r\n\t}\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-133.php"}, {"exercise_number": 134, "exercise_content": "134. Write a Java program to find the distinct ways you can climb to the top (n steps to reach to the top) of stairs. Each time you can either climb 1 or 2 steps. \nExample: n = 5 \na) 1+1+1+1+1 = 5 b) 1+1+1+2 = 5 c) 1+2+2 = 5 d) 2+2+1 = 5 e) 2+1+1+1 = 5 f) 2+1+2 = 5 g) 1+2+1+1 = 5 h) 1+1+2+1 = 5\nSample Output: Distinct ways can you climb to the top: 8", "exercise_solution_code": "class Solution {\r\n    public static int climbStairs(int n) {\r\n        if (n <= 1) {\r\n            return 1;\r\n        }\r\n        int[] s_case = new int[n + 1];\r\n        s_case[0] = 1;\r\n        s_case[1] = 1;\r\n        for (int i = 2; i <= n; i++) {\r\n            s_case[i] = s_case[i - 1] + s_case[i - 2];\r\n        }      \r\n        return s_case[n];\r\n    }\r\n    /* Driver program to test above functions */\r\n    public static void main(String[] args) {\r\n\t\tint steps = 5;\t\t                        \r\n\t\tSystem.out.println(\"Distinct ways can you climb to the top: \"+climbStairs(steps));\r\n\t}\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-134.php"}, {"exercise_number": 135, "exercise_content": "135. Write a Java program to remove duplicates from a sorted linked list. \nOriginal List with duplicate elements:\n12->12->13->14->15->15->16->17->17\nAfter removing duplicates from the said list:\n12->13->14->15->16->17", "exercise_solution_code": "class LinkedList\r\n{\r\n\tNode head; // head of list\r\n\r\n\t/* Linked list Node*/\r\n\tclass Node\r\n\t{\r\n\t\tint data;\r\n\t\tNode next;\r\n\t\tNode(int d) {data = d; next = null; }\r\n\t}\r\n\r\n\tvoid remove_Duplicates()\r\n\t{\r\n\t\tNode current = head;\r\n     \tNode next_next;\r\n\t\tif (head == null) \r\n\t\t\treturn;\r\n\t\twhile (current.next != null) {\r\n     \t\tif (current.data == current.next.data) {\r\n\t\t\t\tnext_next = current.next.next;\r\n\t\t\t\tcurrent.next = null;\r\n\t\t\t\tcurrent.next = next_next;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\tcurrent = current.next;\r\n\t\t}\r\n\t}\t\t\t\t\t\r\n\r\n\t// In front of the list insert a new Node\r\n\tpublic void push(int new_data)\r\n\t{\r\n\t\tNode new_node = new Node(new_data);\r\n\t\tnew_node.next = head;\r\n\t\thead = new_node;\r\n\t}\r\n\r\n\t/* Function to print linked list */\r\n\tvoid printList()\r\n\t{\r\n\t\tNode temp = head;\r\n\t\twhile (temp != null)\r\n\t\t{\r\n\t\t\tSystem.out.print(temp.data);\r\n\t\t\tif (temp.next != null)\r\n\t\t\t{\r\n\t\t\tSystem.out.print(\"->\");\r\n\t\t\t}\r\n\t\t\ttemp = temp.next;\r\n\t\t} \r\n\t  System.out.println();\r\n\t}\r\n\r\n   /* Driver program to test above functions */\r\n\tpublic static void main(String args[])\r\n\t{\r\n\t\tLinkedList l_list = new LinkedList();\r\n\t\t// Insert data into LinkedList\r\n\t\tl_list.push(17);\r\n\t\tl_list.push(17);\r\n\t\tl_list.push(16);\r\n\t\tl_list.push(15);\r\n\t\tl_list.push(15);\r\n\t\tl_list.push(14);\r\n\t\tl_list.push(13);\r\n\t\tl_list.push(12);\r\n\t\tl_list.push(12);\r\n\t\t\r\n\t\tSystem.out.println(\"Original List with duplicate elements:\");\r\n\t\tl_list.printList();\r\n\t\tl_list.remove_Duplicates();\r\n\t\t\r\n\t\tSystem.out.println(\"After removing duplicates from the said list:\");\r\n\t\tl_list.printList();\r\n\t}\r\n} \r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-135.php"}, {"exercise_number": 136, "exercise_content": "136. Write a Java program to find possible unique paths from top-left corner to bottom-right corner of a given grid (m x n). \nNote: You can move either down or right at any point in time.\nSample Output: Unique paths from top-left corner to bottom-right corner of the said grid: 3", "exercise_solution_code": "public class Solution {\r\n    /**\r\n     * @param n, m: positive integer (1 <= n ,m <= 100)\r\n     * @return an integer\r\n     */\r\n    public static int unique_Paths(int m, int n) {\r\n        if (m <= 0 || n <= 0) {\r\n            return 0;\r\n        }\r\n        int[][] grid = new int[m][n];\r\n        for (int i = m - 1; i >= 0; --i) {\r\n            for (int j = n - 1; j >= 0; --j) {\r\n                grid[i][j] = get_Paths(grid, i, j);\r\n            }\r\n        }\r\n        return grid[0][0];\r\n    }\r\n    \r\n    private static int get_Paths(int[][] grid, int i, int j) {\r\n        if (i >= grid.length - 1 || j >= grid[0].length - 1) {\r\n            return 1;\r\n        }\r\n        return grid[i][j + 1] + grid[i + 1][j];\r\n    }\r\n    \r\n  public static void main(String[] args) {\r\n\t\tint m = 3;\r\n\t\tint n = 2;\r\n\t\tSystem.out.println(\"Unique paths from top-left corner to bottom-right corner of the said grid: \"+unique_Paths(m, n));\r\n\t}\t\t\r\n} \r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-136.php"}, {"exercise_number": 137, "exercise_content": "137. Write a Java program to find possible unique paths considering some obstacles, from top-left corner to bottom-right corner of a given grid (m x n). \nNote: You can move either down or right at any point in time and an obstacle and empty space is marked as 1 and 0 respectively in the grid.\nSample grid: \nint[][] obstacle_Grid ={\n{0, 0, 0},\n{0, 1, 0},\n{0, 0, 0},\n};\nSample Output: Unique paths from top-left corner to bottom-right corner of the said grid (considering some obstacles): 2", "exercise_solution_code": "public class Solution {\r\n    public static int uniquePaths_With_obstacle_Grid(int[][] obstacle_Grid) {\r\n\t\tint m = obstacle_Grid.length;\r\n\t\tif (m <= 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tint n = obstacle_Grid[0].length;\r\n\t\tif (n <= 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tint[][] dp = new int[m + 1][n + 1];\r\n\t\tdp[m][n - 1] = 1;\r\n\t\tfor (int i = m - 1; i >= 0; --i) {\r\n\t\t\tfor (int j = n - 1; j >= 0; --j) {\r\n\t\t\t\tdp[i][j] = (obstacle_Grid[i][j] == 0) ? dp[i + 1][j] + dp[i][j + 1] : 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dp[0][0];\r\n\t}\r\n    \r\n  public static void main(String[] args) {\r\n\t\tint[][] obstacle_Grid ={\r\n                              {0, 0, 0}, \r\n                              {0, 1, 0}, \r\n                              {0, 0, 0}, \r\n                              };\r\n\t\tSystem.out.println(\"Unique paths from top-left corner to bottom-right corner of the said grid (considering some obstacles): \"+uniquePaths_With_obstacle_Grid(obstacle_Grid));\r\n\t}\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-137.php"}, {"exercise_number": 138, "exercise_content": "138. Write a Java program to find all of the longest word in a given dictionary. \nExample-1:\n{\n\"cat\",\n\"flag\",\n\"green\",\n\"country\",\n\"w3resource\"\n}\nResult: \"w3resource\"\nExample-2:\n{\n\"cat\",\n\"dog\",\n\"red\",\n\"is\",\n\"am\"\n}\nResult: \"cat\", \"dog\", \"red\"", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n    static ArrayList<String> longestWords(String[] dictionary) {\r\n        ArrayList<String> list = new ArrayList<String>();\r\n        int longest_length = 0;\r\n        for (String str : dictionary) {\r\n            int length = str.length();\r\n            if (length > longest_length) {\r\n                longest_length = length;\r\n                list.clear();\r\n            }\r\n            if (length == longest_length) {\r\n                list.add(str);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    \r\npublic static void main(String[] args) {\r\n\t\t//String [] dict = {\"cat\", \"flag\", \"green\", \"country\", \"w3resource\"};\r\n\t\tString [] dict = {\"cat\", \"dog\", \"red\", \"is\", \"am\"};\r\n\t\tSystem.out.println(\"Original dictionary : \"+Arrays.toString(dict));\r\n\t\tSystem.out.println(\"Longest word(s) of the above dictionary: \"+longestWords(dict));\r\n\t}\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-138.php"}, {"exercise_number": 139, "exercise_content": "139. Write a Java program to get the index of the first number and the last number of a subarray where the sum of numbers is zero from a given array of integers. \nOriginal Array : [1, 2, 3, -6, 5, 4]\nIndex of the subarray of the said array where the sum of numbers is zero: [0, 3]", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n    public static List<Integer> subarraySum(int[] nums) {\r\n        List<Integer> temp = new ArrayList<>();\r\n        if (nums == null || nums.length == 0) {\r\n            return temp;\r\n        }\r\n        int pre_Sum = 0;\r\n        Map<Integer, Integer> map = new HashMap<>();\r\n        map.put(pre_Sum, -1);\r\n        for (int i = 0; i < nums.length; i++) {\r\n            pre_Sum += nums[i];\r\n            if (map.containsKey(pre_Sum)) {\r\n                temp.add(map.get(pre_Sum) + 1);\r\n                temp.add(i);\r\n                return temp;\r\n            }\r\n            map.put(pre_Sum, i);\r\n        }\r\n        return temp;\r\n    }\r\n    \r\npublic static void main(String[] args) {\r\n\t\tint [] nums = {1, 2, 3, -6, 5, 4};\r\n\t\tSystem.out.println(\"Original Array : \"+Arrays.toString(nums));\r\n\t\tSystem.out.println(\"Index of the subarray of the said array where the sum of numbers is zero: \"+subarraySum(nums));\r\n\t}\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-139.php"}, {"exercise_number": 140, "exercise_content": "140. Write a Java program to merge all overlapping Intervals from a given a collection of intervals. \nSample Output: 1 6\n8 10\n15 20", "exercise_solution_code": "#// Source: https://bit.ly/2PjMfds\r\nimport java.util.*;\r\n\r\npublic class Solution\r\n{   \r\n    public static void main (String[] args) throws java.lang.Exception\r\n    {\r\n        ArrayList<Interval> x = new ArrayList<>();\r\n\r\n        x.add(new Interval(1, 3));\r\n        x.add(new Interval(2, 6));\r\n        x.add(new Interval(8, 10));\r\n        x.add(new Interval(15, 18));\r\n        x.add(new Interval(17, 20));\r\n\r\n        x = merge(x);\r\n\r\n        for(Interval i : x)\r\n        {\r\n            System.out.println(i.getStart() + \" \" + i.getEnd());\r\n        }\r\n    }\r\n\r\n    public static ArrayList<Interval> merge(ArrayList<Interval> intervals) {\r\n\r\n        if(intervals.size() == 0 || intervals.size() == 1)\r\n            return intervals;\r\n\r\n        Collections.sort(intervals, new IntervalComparator());\r\n\r\n        Interval first = intervals.get(0);\r\n        int start = first.getStart();\r\n        int end = first.getEnd();\r\n\r\n        ArrayList<Interval> result = new ArrayList<Interval>();\r\n\r\n        for (int i = 1; i < intervals.size(); i++) {\r\n            Interval current = intervals.get(i);\r\n            if (current.getStart() <= end) {\r\n                end = Math.max(current.getEnd(), end);\r\n            } else {\r\n                result.add(new Interval(start, end));\r\n                start = current.getStart();\r\n                end = current.getEnd();\r\n            }\r\n        }\r\n\r\n        result.add(new Interval(start, end));\r\n        return result;\r\n    }\r\n}\r\n\r\nclass Interval \r\n{\r\n    private int start;\r\n    private int end;\r\n\r\n    Interval() {\r\n        start = 0;\r\n        end = 0;\r\n    }\r\n\r\n    Interval(int s, int e) \r\n    {\r\n        start = s;\r\n        end = e;\r\n    }\r\n\r\n    public int getStart() {\r\n        return start;\r\n    }\r\n\r\n    public int getEnd() {\r\n        return end;\r\n    }\r\n}\r\n\r\nclass IntervalComparator implements Comparator<Interval>\r\n{\r\n    public int compare(Interval i1, Interval i2)\r\n    {\r\n        return i1.getStart() - i2.getStart();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-140.php"}, {"exercise_number": 141, "exercise_content": "141. Write a Java program to check if a given string has all unique characters. \nSample Output: Original String : xyyz\nString has all unique characters: false", "exercise_solution_code": "import java.util.*;\r\npublic  class Solution {\r\n    /**\r\n     * @param str: a string\r\n     * @return: a boolean\r\n     */\r\n    public static boolean is_Unique_str(String str) {\r\n        char[] chars = str.toCharArray();\r\n        Arrays.sort(chars);\r\n        for (int i = 1; i < chars.length; ++i) {\r\n            if (chars[i] == chars[i-1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\npublic static void main(String[] args) {\r\n\t\t//String str = \"xyz\";\r\n\t\tString str = \"xyyz\";\r\n\t\tSystem.out.println(\"Original String : \"+str);\r\n\t\tSystem.out.println(\"String has all unique characters: \"+is_Unique_str(str));\r\n\t}\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-141.php"}, {"exercise_number": 142, "exercise_content": "142. Write a Java program to check if two given strings are anagrams or not. \nAccording to Wikipedia \"An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. For example, the word anagram can be rearranged into nag a ram, or the word binary into brainy.\"\nSample Output: String-1 : wxyz\nString-2 : zyxw\nCheck if two given strings are anagrams or not?: true", "exercise_solution_code": "public  class Solution {\r\n    /**\r\n     * @param s: The first string\r\n     * @param b: The second string\r\n     * @return true or false\r\n     */\r\n   public static boolean anagram_test(String str1, String str2) {\r\n        if (str1 == null || str2 == null) {\r\n            return false;\r\n        } else if (str1.length() != str2.length()) {\r\n            return false;\r\n        } else if (str1.length() == 0 && str2.length() == 0) {\r\n            return true;\r\n        }\r\n        int[] count = new int[256];\r\n        for (int i = 0; i < str1.length(); i++) {\r\n            count[str1.charAt(i)]++;\r\n            count[str2.charAt(i)]--;\r\n        }\r\n        for (int num : count) {\r\n            if (num != 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    public static void main(String[] args) {\r\n\t\tString str1 = \"wxyz\";\r\n\t\tString str2 = \"zyxw\";\r\n\t\tSystem.out.println(\"String-1 : \"+str1);\r\n\t\tSystem.out.println(\"String-2 : \"+str2);\r\n\t\tSystem.out.println(\"Check if two given strings are anagrams or not?: \"+anagram_test(str1,str2));\r\n\t}\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-142.php"}, {"exercise_number": 143, "exercise_content": "143. Write a Java program to merge two given sorted lists. \nSample Output: \nMerge Two Sorted ListsT:\n1 2 3 7 9 13 40", "exercise_solution_code": "public class Solution {\r\n    public static void main(String[] args) {\r\n        ListNode list1 = new ListNode(1);\r\n        list1.next = new ListNode(3);\r\n        list1.next.next = new ListNode(7);\r\n        list1.next.next.next = new ListNode(9);\r\n        list1.next.next.next.next = new ListNode(13);\r\n        ListNode list2 = new ListNode(2);\r\n        list2.next = new ListNode(40);\r\n        ListNode head = mergeTwoLists(list1, list2);\r\n\t\tSystem.out.print(\"Merge Two Sorted ListsT:\\n\");\r\n        while (head != null) {\r\n            System.out.print(head.val + \" \");\r\n            head = head.next;\r\n        }\r\n    }\r\n\r\n    public static ListNode mergeTwoLists(ListNode list1, ListNode list2) {\r\n        ListNode head = new ListNode(0);\r\n        ListNode mlist = head;\r\n        while (list1 != null && list2 != null) {\r\n            if (list1.val < list2.val) {\r\n                mlist.next = new ListNode(list1.val);\r\n                mlist = mlist.next;\r\n                list1 = list1.next;\r\n            } else {\r\n                mlist.next = new ListNode(list2.val);\r\n                mlist = mlist.next;\r\n                list2 = list2.next;\r\n            }\r\n        }\r\n        while (list1 != null) {\r\n            mlist.next = new ListNode(list1.val);\r\n            mlist = mlist.next;\r\n            list1 = list1.next;\r\n        }\r\n        while (list2 != null) {\r\n            mlist.next = new ListNode(list2.val);\r\n            mlist = mlist.next;\r\n            list2 = list2.next;\r\n        }\r\n\r\n        head = head.next;\r\n        return head;\r\n    }\r\n}\r\n\r\nclass ListNode {\r\n    int val;\r\n    ListNode next;\r\n\r\n    ListNode(int val) {\r\n        this.val = val;\r\n        this.next = null;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-143.php"}, {"exercise_number": 144, "exercise_content": "144. Write a Java program to remove all occurrences of a specified value in a given array of integers and return the new length of the array. \nSample Output: \nOriginal array: [1, 4, 6, 7, 6, 2]\nThe length of the new array is: 4", "exercise_solution_code": "import java.util.*;\r\npublic  class Solution {\r\n     /** \r\n     *@param nums: A list of integers\r\n     *@param element: An integer\r\n     *@return: The new length after remove\r\n     */\r\n  public static int removeElement(int[] nums, int elem) {\r\n      int length = nums.length; \r\n      if(length==0) return 0; \r\n      int i=0; \r\n      for(int j=0; j<length; j++)\r\n      {\r\n        if(nums[j]!=elem)\r\n        {\r\n          nums[i]=nums[j];\r\n          i++; \r\n        }\r\n      }\r\n      if(i<length) nums[i]='\\0';\r\n      return i; \r\n    }\r\n    public static void main(String[] args) {\r\n\t\tint x = 6;\r\n\t\tint [] nums = {1,4,6,7,6,2};\r\n\t\tSystem.out.println(\"Original array: \"+Arrays.toString(nums));\r\n        System.out.println(\"The length of the new array is: \" + removeElement(nums, x));\r\n\t}\t\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-144.php"}, {"exercise_number": 145, "exercise_content": "145. Write a Java program to remove the nth element from the end of a given list. \nSample Output: \nOriginal node:\n1 2 3 4 5 \nAfter removing 2nd element from end:\n1 2 3 5", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n    public static void main(String[] args) {\r\n        ListNode h = new ListNode(1);\r\n        h.next = new ListNode(2);\r\n        h.next.next = new ListNode(3);\r\n        h.next.next.next = new ListNode(4);\r\n        h.next.next.next.next = new ListNode(5);\r\n\t\tListNode o = h;\r\n\t\tSystem.out.println(\"Original node:\");\r\n\t\twhile (o != null) {\r\n            System.out.print(o.val + \" \");\r\n            o = o.next;\r\n        }\r\n        System.out.println(\"\\nAfter removing 2nd element from end:\");\r\n\t\tListNode head = removeNthFromEnd(h, 2);\r\n    \r\n\t    while (head != null) {\r\n            System.out.print(head.val + \" \");\r\n            head = head.next;\r\n        }\r\n\t\r\n    }\r\n     public static ListNode removeNthFromEnd(ListNode head, int n) {\r\n        ListNode p = head;\r\n        int size = 0;\r\n        while (p != null) {\r\n            size++;\r\n            p = p.next;\r\n        }\r\n        if (n == size) {  \r\n            head = head.next;\r\n        } else {\r\n            int index = size - n;\r\n            ListNode t = head;\r\n            while (index > 1) {\r\n                t = t.next;\r\n                index--;\r\n            }\r\n            t.next = t.next.next;\r\n        }\r\n        return head;\r\n    }\r\n}\r\nclass ListNode {\r\n    int val;\r\n    ListNode next;\r\n\r\n    ListNode(int val) {\r\n        this.val = val;\r\n        this.next = null;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-145.php"}, {"exercise_number": 146, "exercise_content": "146. Write a Java program to convert an sorted array to binary search tree. Maintain minimal height of the tree. \nSample Output: \n2\n1\n4\n6\n5\n3", "exercise_solution_code": "public class Solution {\r\n    public static void main(String[] args) {\r\n        int[] arr = {1, 2, 3, 4, 5, 6};\r\n        TreeNode root = sortedArrayToBST(arr);\r\n        traverseTree(root);\r\n    }\r\n\r\n    public static TreeNode sortedArrayToBST(int[] arr) {\r\n        if (arr.length == 0) return null;\r\n        return creation(arr, 0, arr.length - 1);\r\n    }\r\n\r\n    private static TreeNode creation(int[] arr, int start, int end) {\r\n        TreeNode node = new TreeNode(0);\r\n        if (start == end - 1) {\r\n            node = new TreeNode(arr[start]);\r\n            node.right = new TreeNode(arr[end]);\r\n        } else if (start == end) {\r\n            return new TreeNode(arr[start]);\r\n        } else {\r\n            int mid = (start + end) / 2;\r\n            node.val = arr[mid];\r\n            node.left = creation(arr, start, mid - 1);\r\n            node.right = creation(arr, mid + 1, end);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    private static void traverseTree(TreeNode root) {\r\n        if (root != null) {\r\n            traverseTree(root.left);\r\n            traverseTree(root.right);\r\n            System.out.println(root.val);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass TreeNode {\r\n    public int val;\r\n    public TreeNode left, right;\r\n\r\n    public TreeNode(int val) {\r\n        this.val = val;\r\n        this.left = this.right = null;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-146.php"}, {"exercise_number": 147, "exercise_content": "147. Write a Java program to find the number of bits required to flip to convert two given integers. \nSample Output: \n2", "exercise_solution_code": "public class Solution {\r\n    public static void main(String[] args) {\r\n        System.out.println(bitSwapRequired(27, 23));\r\n    }\r\n\r\n      public static int bitSwapRequired(int x, int y) {\r\n        int ctr = 0;\r\n        for (int z = x ^ y; z != 0; z = z >>> 1) {\r\n            ctr += z & 1;\r\n        }\r\n        return ctr;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-147.php"}, {"exercise_number": 148, "exercise_content": "148. Write a Java program to find the index of the first unique character in a given string, assume that there is at least one unique character in the string. \nSample Output: \nOriginal String: wresource\nFirst unique character of the above: 0", "exercise_solution_code": "import java.util.*;\r\npublic  class  Solution {\r\n    public static void main(String[] args) {\r\n\t\tString s = \"wresource\";\r\n\t\tSystem.out.println(\"Original String: \"+s);\r\n        System.out.println(\"First unique character of the above: \"+first_Uniq_Char(s));\r\n    }\r\n\r\n    public static int first_Uniq_Char(String s) {\r\n         int[] freq = new int[256];\r\n        for (char c : s.toCharArray()) {\r\n            freq[c - 'a']++;\r\n        }\r\n        for (int i = 0; i < s.length(); i++) {\r\n            if (freq[s.charAt(i) - 'a'] == 1) return i;\r\n        }\r\n        return -1;\r\n\t}\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-148.php"}, {"exercise_number": 149, "exercise_content": "149. Write a Java program to check if a given string is a permutation of another given string. \nSample Output: \nOriginal strings: xxyz yxzx\ntrue", "exercise_solution_code": "import java.util.*;\r\n  public  class  Solution {\r\n    public static void main(String[] args) {\r\n\t\tString str1 = \"xxyz\";\r\n\t\tString str2 = \"yxzx\";\r\n\t\tSystem.out.println(\"Original strings: \"+str1+\"  \"+str2);\r\n        System.out.println(stringPermutation(str1, str2));\r\n    }\r\n      public static boolean stringPermutation(String str1, String str2) {\r\n        int[] arr = new int[500];\r\n        for (int i = 0; i < str1.length(); i++) {\r\n            arr[(int) str1.charAt(i)] += 1;\r\n        }\r\n        for (int i = 0; i < str2.length(); i++) {\r\n            arr[(int) str2.charAt(i)] -= 1;\r\n        }\r\n        for (int i = 0; i < arr.length; i++) {\r\n            if (arr[i] != 0) return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-149.php"}, {"exercise_number": 150, "exercise_content": "150. Write a Java program to test if a binary tree is a subtree of another binary tree. \nSample Output: \nOriginal strings: xxyz yxzx\ntrue", "exercise_solution_code": "public  class  Solution {\r\n\t  /**\r\n     * @param T1, T2: The roots of binary tree.\r\n     * @return: True if T2 is a subtree of T1, or false.\r\n     */\r\n        public static boolean is_Subtree(TreeNode T1, TreeNode T2) {\r\n        if (T2 == null) return true;\r\n        if (T1 == null) return false;\r\n        if (is_Same(T1, T2)) return true;\r\n        if (is_Subtree(T1.left, T2) || is_Subtree(T1.right, T2)) return true;\r\n        return false;\r\n    }\r\n\r\n    public static boolean is_Same(TreeNode t1, TreeNode t2) {\r\n        if (t1 == null || t2 == null) {\r\n            return t1 == t2;\r\n        } else if (t1.val != t2.val) {\r\n            return false;\r\n        } else {\r\n            return is_Same(t1.left, t2.left) && is_Same(t1.right, t2.right);\r\n        }\r\n    }\r\n   /* Driver program to test above functions */\r\n\tpublic static void main(String[] args) {\r\n        TreeNode t1 = new TreeNode(1);\r\n        TreeNode t2 = new TreeNode(2);\r\n        TreeNode t3 = new TreeNode(3);\r\n        TreeNode t4 = new TreeNode(4);\r\n        t1.left  = t2;\r\n        t1.right = t3;\r\n       \r\n        TreeNode n1 = new TreeNode(1);\r\n        TreeNode n2 = new TreeNode(2);\r\n        TreeNode n3 = new TreeNode(3);\r\n        TreeNode n4 = new TreeNode(4);\r\n        n1.left  = n2;\r\n        n1.right = n3;\r\n      \r\n        System.out.println(is_Subtree(t1, n1));\r\n    }\r\n  }\r\n  class TreeNode {\r\n    public int val;\r\n    public TreeNode left, right;\r\n\r\n    public TreeNode(int val) {\r\n        this.val = val;\r\n        this.left = this.right = null;\r\n    }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-150.php"}], "Basic Part-II": [{"exercise_number": 151, "exercise_content": "151. Write a Java program to find the value of specified expression.a) 101 + 0) / 3\nb) 3.0e-6 * 10000000.1\nc) true && true\nd) false && true\ne) (false && false) || (true && true)\nf) (false || false) && (true && true)Expected Output :(101 + 0) / 3)-> 33(3.0e-6 * 10000000.1)-> 30.0000003(true && true)-> true(false && true)-> false((false && false) || (true && true))-> true(false || false) && (true && true)-> false", "exercise_solution_code": "public class Solution {\r\n\tpublic static void main(String[] args) {\r\n\t\tint r1 = (101 + 0) / 3;\r\n\t\tdouble r2 = 3.0e-6 * 10000000.1;\r\n\t\tboolean r3 = true && true;\r\n\t\tboolean r4 = false && true;\r\n\t\tboolean r5 = (false && false) || (true && true);\r\n\t\tboolean r6 = (false || false) && (true && true);\r\n\t\t\r\n\t\tSystem.out.println(\"(101 + 0) / 3)-> \" + r1);\r\n\t\tSystem.out.println(\"(3.0e-6 * 10000000.1)-> \" + r2);\r\n\t\tSystem.out.println(\"(true && true)-> \" + r3);\r\n\t\tSystem.out.println(\"(false && true)-> \" + r4);\r\n\t\tSystem.out.println(\"((false && false) || (true && true))-> \" + r5);\r\n\t\tSystem.out.println(\"(false || false) && (true && true)-> \" + r6);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-151.php"}, {"exercise_number": 152, "exercise_content": "152. Write a Java program that accepts four integer from the user and prints equal if all four are equal, and not equal otherwise.Sample Output:\nInput first number: 25\nInput second number: 37\nInput third number: 45\nInput fourth number: 23\nNumbers are not equal!", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\r\n\tpublic static void main(String[] args) {\r\n\t\t Scanner in = new Scanner(System.in);\r\n\t\t System.out.print(\"Input first number: \");\r\n         int num1 = in.nextInt();\r\n         System.out.print(\"Input second number: \");\r\n         int num2 = in.nextInt();\r\n\t\t System.out.print(\"Input third number: \");\r\n         int num3 = in.nextInt();\r\n         System.out.print(\"Input fourth number: \");\r\n         int num4 = in.nextInt();\t\t\r\n\t\t\r\n\t\tif (num1 == num2 && num2 == num3 && num3 == num4) \r\n\t\t  {\r\n\t\t\tSystem.out.println(\"Numbers are equal.\");\r\n                               }\r\n\t\telse\r\n\t\t\t{\r\n\t\t\tSystem.out.println(\"Numbers are not equal!\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-152.php"}, {"exercise_number": 153, "exercise_content": "153. Write a Java program that accepts two double variables and test if both strictly between 0 and 1 and false otherwise.Sample Output:\nInput first number: 5\nInput second number: 1\nfalse", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\r\n\tpublic static void main(String[] args) {\r\n\t\t Scanner in = new Scanner(System.in);\r\n\t\t System.out.print(\"Input first number: \");\r\n         double n1 = in.nextDouble();\r\n         System.out.print(\"Input second number: \");\r\n         double n2 = in.nextDouble();\r\n\t\t System.out.println(n1 > 0 && n1 < 1 && n2 > 0 && n2 < 1);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-153.php"}, {"exercise_number": 154, "exercise_content": "154. Write a Java program to print the contents of a two-dimensional Boolean array where t will represent true and f will represent false.Sample array:\narray = {{true, false, true},\n{false, true, false}};\nExpected Output :\nt f t \nf t f", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\r\n\tpublic static void main(String[] args) {\r\n\t\tboolean[][] array = {{true, false, true},\r\n\t\t\t\t\t\t\t {false, true, false}};\r\n\t\tint rows_length = array.length;\r\n\t\tint columns_length = array[0].length;\r\n\t\t\r\n\t\tfor (int i = 0; i < rows_length; i++) {\r\n\t\t\tfor (int j = 0; j < columns_length; j++) {\r\n\t\t\t\t\r\n\t\t\t\tif (array[i][j]) {\r\n\t\t\t\t\tSystem.out.print(\" t \");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tSystem.out.print(\" f \");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t}\t\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-154.php"}, {"exercise_number": 155, "exercise_content": "155. Write a Java program to print an array after changing the rows and columns of a given two-dimensional array.Original Array:\n10 20 30\n40 50 60 \nAfter changing the rows and columns of the said array:10 40 \n20 50 \n30 60", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\r\n\tpublic static void main(String[] args) {\r\n\t\tint[][] twodm = {\r\n\t\t\t\t{10, 20, 30},\r\n\t\t\t\t{40, 50, 60}\r\n\t\t};\r\n\t\tSystem.out.print(\"Original Array:\\n\");\r\n\t\tprint_array(twodm);\r\n\t\tSystem.out.print(\"After changing the rows and columns of the said array:\");\r\n\t\ttranspose(twodm);\r\n\t\t}\r\n\t\r\n\tprivate static void transpose(int[][] twodm) {\r\n\t\t\r\n\t\tint[][] newtwodm = new int[twodm[0].length][twodm.length];\r\n\t\t\r\n\t\tfor (int i = 0; i < twodm.length; i++) {\r\n\t\t\tfor (int j = 0; j < twodm[0].length; j++) {\r\n\t\t\t\tnewtwodm[j][i] = twodm[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tprint_array(newtwodm);\r\n\t}\r\n\tprivate static void print_array(int[][] twodm) {\r\n\t\tfor (int i = 0; i < twodm.length; i++) {\r\n\t\t\tfor (int j = 0; j < twodm[0].length; j++) {\r\n\t\t\t\tSystem.out.print(twodm[i][j] + \" \");\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t}\r\n\t\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-155.php"}, {"exercise_number": 156, "exercise_content": "156. Write a Java program that returns the largest integer but not larger than the base-2 logarithm of a specified integer.Original Number: 2350\nResult: 115", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\r\n\t     \r\n    public static void main(String[] args) {\r\n        int n = 2350;\r\n\t\tSystem.out.printf(\"Original Number: %d\\n\", n);\r\n\t\tint shift_right_count = 0;\r\n        do {\r\n            n >>= 1;\r\n            shift_right_count++;\r\n        } while (n != 0);\r\n         shift_right_count--;\r\n        System.out.printf(\"Result: %s\\r\\n\", shift_right_count);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-156.php"}, {"exercise_number": 157, "exercise_content": "157. Write a Java program to prove that Euclid\u2019s algorithm computes the greatest common divisor of two positive given integers.According to Wikipedia \"The Euclidean algorithm is based on the principle that the greatest common divisor of two numbers does not change if the larger number is replaced by its difference with the smaller number. For example, 21 is the GCD of 252 and 105 (as 252 = 21 \u00d7 12 and 105 = 21 \u00d7 5), and the same number 21 is also the GCD of 105 and 252 \u2212 105 = 147. Since this replacement reduces the larger of the two numbers, repeating this process gives successively smaller pairs of numbers until the two numbers become equal. When that occurs, they are the GCD of the original two numbers. By reversing the steps, the GCD can be expressed as a sum of the two original numbers each multiplied by a positive or negative integer, e.g., 21 = 5 \u00d7 105 + (\u22122) \u00d7 252. The fact that the GCD can always be expressed in this way is known as B\u00e9zout's identity.\"Expected Output:\nresult: 24\nresult: 1", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\r\n\tpublic static int euclid(int x, int y) {\r\n\t\tif (x == 0 || y == 0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\tif (x < y) {\r\n\t\t\tint t = x;\r\n\t\t\tx = y;\r\n\t\t\ty = t;\r\n\t\t}\r\n\t\tif (x % y == 0) {\r\n\t\t\treturn y;\r\n\t\t} else {\r\n\t\t\treturn euclid(y, x % y);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"result: \" + euclid(48, 24));\r\n\t\tSystem.out.println(\"result: \" + euclid(125463, 9658));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-157.php"}, {"exercise_number": 158, "exercise_content": "158. Write a Java program to create a two-dimension array (m x m) A[][] such that A[i][j] is false if I and j are prime otherwise A[i][j] becomes true.Sample Output: \ntrue true true \ntrue true true \ntrue true false", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\r\n\tpublic static int prime_cell(int a, int b) {\r\n\t\tif (a == 0 || b == 0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\tif (a < b) {\r\n\t\t\tint t = a;\r\n\t\t\ta = b;\r\n\t\t\tb = t;\r\n\t\t}\r\n\t\tif (a % b == 0) \r\n\t\t{\r\n\t\t\treturn b;\r\n\t\t} \r\n\t\telse \r\n\t\t{\r\n\t\t\treturn prime_cell(b, a % b);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint n = 3;\r\n\t\tboolean[][] A = new boolean[n][n];\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\t\tA[i][j] = prime_cell(i, j) == 1;\r\n\t\t\t\tSystem.out.print(A[i][j] + \" \");\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-158.php"}, {"exercise_number": 159, "exercise_content": "159. Write a Java program to find the k largest elements in a given array. Elements in the array can be in any order.Expected Output:\nOriginal Array: \n[1, 4, 17, 7, 25, 3, 100]\n3 largest elements of the said array are:\n100 25 17", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n\t\r\n    public static void main(String[] args) \r\n    {\r\n        Integer arr[] = new Integer[]{1, 4, 17, 7, 25, 3, 100};\r\n        int k = 3;\r\n\t\tSystem.out.println(\"Original Array: \");\r\n\t\tSystem.out.println(Arrays.toString(arr));\r\n\t\tSystem.out.println(k +\" largest elements of the said array are:\");\r\n        Arrays.sort(arr, Collections.reverseOrder());         \r\n       for (int i = 0; i < k; i++) \r\n          System.out.print(arr[i] + \" \");\r\n      }      \r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-159.php"}, {"exercise_number": 160, "exercise_content": "160. Write a Java program to find the k smallest elements in a given array. Elements in the array can be in any order.Expected Output:\nOriginal Array: \n[1, 4, 17, 7, 25, 3, 100]\n3 largest elements of the said array are:\n100 25 17", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n\t\r\n    public static void main(String[] args) \r\n    {\r\n        Integer arr[] = new Integer[]{1, 4, 17, 7, 25, 3, 100};\r\n  int k = 3;\r\n  System.out.println(\"Original Array: \");\r\n  System.out.println(Arrays.toString(arr));\r\n  System.out.println(k + \" smallest elements of the said array are:\");\r\n  Arrays.sort(arr);\r\n  for (int i = 0; i < k; i++)\r\n   System.out.print(arr[i] + \" \");\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-160.php"}, {"exercise_number": 161, "exercise_content": "161. Write a Java program to find the kth smallest and largest element in a given array. Elements in the array can be in any order.Expected Output:\nOriginal Array: \n[1, 4, 17, 7, 25, 3, 100]\nK'th smallest element of the said array: \n3 \nK'th largest element of the said array:\n25", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n  public static void main(String[] args) \r\n    {\r\n        Integer arr[] = new Integer[]{1, 4, 17, 7, 25, 3, 100};\r\n        int k = 2;\r\n\t\tSystem.out.println(\"Original Array: \");\r\n\t\tSystem.out.println(Arrays.toString(arr));\r\n\t\tSystem.out.println(\"K'th smallest element of the said array: \");\r\n        Arrays.sort(arr);       \t\t\r\n        System.out.print(arr[k-1] + \" \");\r\n\t\tSystem.out.println(\"\\nK'th largest element of the said array:\");          \r\n        Arrays.sort(arr, Collections.reverseOrder());  \t\t\r\n        System.out.print(arr[k-1] + \" \");\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-161.php"}, {"exercise_number": 162, "exercise_content": "162. Write a Java program to find the numbers greater than the average of the numbers of a given array.Expected Output:\nOriginal Array: \n[1, 4, 17, 7, 25, 3, 100]\nThe average of the said array is: 22.0\nThe numbers in the said array that are greater than the average are: \n25\n100", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n  public static void main(String[] args) \r\n    {\r\n      Integer nums[] = new Integer[]{1, 4, 17, 7, 25, 3, 100};\r\n      int sum = 0;\r\n\t  System.out.println(\"Original Array: \");\r\n\t  System.out.println(Arrays.toString(nums));\r\n\t  for(int i = 0; i < nums.length; i++) {      \r\n      sum = sum + nums[i];\r\n    }\r\n      double average = sum / nums.length;\r\n      System.out.println(\"The average of the said array is: \" + average);\r\n      System.out.println(\"The numbers in the said array that are greater than the average are: \");\r\n      for(int i = 0; i < nums.length; i++) {\r\n      if(nums[i] > average) {\r\n        System.out.println(nums[i]);\r\n      }\r\n    }\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-162.php"}, {"exercise_number": 163, "exercise_content": "163. Write a Java program that will accept an integer and convert it into a binary representation. Now count the number of bits which is equal to zero of the said binary representation.Expected Output:\nInput first number: 25\nBinary representation of 25 is: 11001\nNumber of zero bits: 2", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\t\r\n\tpublic static int countBitsTozeroBasedOnString(int n) {\r\n    int ctr = 0;\r\n    String binaryNumber = Integer.toBinaryString(n);\r\n\tSystem.out.print(\"Binary representation of \"+n+\" is: \"+binaryNumber);\r\n    for (char ch : binaryNumber.toCharArray()) {\r\n      ctr += ch == '0' ? 1 : 0;\r\n    }\r\n    return ctr;\r\n  }\t\r\n\t\r\n    public static void main(String[] args) {\r\n\t\tScanner in = new Scanner(System.in);\r\n        System.out.print(\"Input first number: \");\r\n        int n = in.nextInt();\r\n\t\tSystem.out.println(\"\\nNumber of zero bits: \" + countBitsTozeroBasedOnString(n));\r\n\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-163.php"}, {"exercise_number": 164, "exercise_content": "164. Write a Java program to divide the two given integers using subtraction operator.Expected Output:\nInput the dividend: 625\nInput the divider: 25\nResult: 25.0", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\t\r\n\tpublic static float divide_using_subtraction(int dividend, int divider) {\r\n\tif (divider == 0) {\r\n       return 0;\r\n\t}\t   \r\n    float result = 0;\r\n    while (dividend > divider) {\r\n      dividend -= divider;\r\n      result++;\r\n    }\r\n    float decimalPart = (float) dividend / (float) divider;\r\n    result += decimalPart;\r\n    return result;\r\n  }\t\r\n\t\r\n    public static void main(String[] args) {\r\n Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the dividend: \");\r\n        int dividend = in.nextInt();\r\n\t\tSystem.out.print(\"Input the divider: \");\r\n        int divider = in.nextInt();\r\n\t\tSystem.out.println(\"\\nResult: \" + divide_using_subtraction(dividend,divider));\t\t\r\n\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-164.php"}, {"exercise_number": 165, "exercise_content": "165. Write a Java program to move every positive number to the right and every negative number to the left of a given array of integers.Expected Output:\nOriginal array: [-2, 3, 4, -1, -3, 1, 2, -4, 0]\nResult: [-4, -3, -2, -1, 0, 1, 2, 3, 4]", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static int[] split_sorting_array(int[] nums) {\r\n  if (nums == null) {\r\n   throw new IllegalArgumentException(\"Null array......!\");\r\n  }\r\n  boolean flag = true;\r\n  while (flag) {\r\n   flag = false;\r\n   for (int j = 0; j < nums.length - 1; j++) {\r\n    if (nums[j] > nums[j + 1]) {\r\n     swap(nums, j, j + 1);\r\n     flag = true;\r\n    }\r\n   }\r\n  }\r\n  return nums;\r\n }\r\n private static void swap(int[] nums, int left, int right) {\r\n  int temp = nums[right];\r\n  nums[right] = nums[left];\r\n  nums[left] = temp;\r\n }\r\n public static void main(String[] args) {\r\n  int[] nums = {-2,3,4,-1,-3,1,2,-4,0};\r\n  System.out.println(\"\\nOriginal array: \" + Arrays.toString(nums));\r\n  int[] result = split_sorting_array(nums);\r\n  System.out.println(\"\\nResult: \" + Arrays.toString(result));\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-165.php"}, {"exercise_number": 166, "exercise_content": "166. Write a Java program to transform a given integer to String format.Expected Output:\nInput an integer: 35\nString format of the said integer: 35", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\t\r\n public static String transform_int_to_string(int n) {\r\n    boolean is_negative = false;\r\n    StringBuilder tsb = new StringBuilder();\r\n    if (n == 0) {\r\n      return \"0\";\r\n    } else if (n < 0) {\r\n      is_negative = true;\r\n    }\r\n    n = Math.abs(n);\r\n    while (n > 0) {\r\n      tsb.append(n % 10);\r\n      n /= 10;\r\n    }\r\n    if (is_negative) {\r\n      tsb.append(\"-\");\r\n    }\r\n    return tsb.reverse().toString();\r\n  }\r\n    public static void main(String[] args) {\r\n\t\tScanner in = new Scanner(System.in);\r\n        System.out.print(\"Input an integer: \");\r\n        int n = in.nextInt();\r\n \t\tSystem.out.println(\"String format of the said integer: \" + transform_int_to_string(n));\t\t\r\n\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-166.php"}, {"exercise_number": 167, "exercise_content": "167. Write a Java program to move every zero to the right side of a given array of integers.Original array: [0, 3, 4, 0, 1, 2, 5, 0]\nResult: [3, 4, 1, 2, 5, 0, 0, 0]", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\t\r\n public static int[] move_zero(int[] nums) {\r\n     if (nums == null) {\r\n      throw new IllegalArgumentException(\"Null array!\");\r\n    }\r\n    boolean swap = true;\r\n    while (swap) {\r\n      swap = false;\r\n      for (int i = 0; i < nums.length - 1; i++) {\r\n        if (nums[i] == 0 && nums[i + 1] != 0) {\r\n          swap(nums, i, i + 1);\r\n          swap = true;\r\n        }\r\n      }\r\n    }\r\n\treturn nums;\r\n  }\r\n  private static void swap(int[] nums, int a, int b) {\r\n    int temp = nums[a];\r\n    nums[a] = nums[b];\r\n    nums[b] = temp;\r\n  }\r\n    public static void main(String[] args) {\r\n\t\tint[] nums = {0,3,4,0,1,2,5,0};\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums));  \r\n\t\tint[] result = move_zero(nums);\r\n \t\tSystem.out.println(\"\\nResult: \" + Arrays.toString(result));\t\t\r\n\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-167.php"}, {"exercise_number": 168, "exercise_content": "168. Write a Java program to multiply two given integers without using the multiply operator(*).Input the first number: 25\nInput the second number: 5\nResult: 125", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\t\r\n  public static int multiply(int n1, int n2) {\r\n    int result = 0;\r\n    boolean negative_num = (n1 < 0 && n2 >= 0) || (n2 < 0 && n1 >= 0);\r\n    boolean positive_num = !negative_num;\r\n    n1 = Math.abs(n1);\r\n    for (int i = 0; i < n1; i++) {\r\n      if (negative_num && n2 > 0 || positive_num && n2 < 0)\r\n        result -= n2;\r\n      else\r\n        result += n2;\r\n    }\r\n\r\n    return result;\r\n }\r\n\r\n   public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number: \");\r\n        int n1 = in.nextInt();\r\n\t\tSystem.out.print(\"Input the second number: \");\r\n        int n2 = in.nextInt();\r\n\t\tSystem.out.println(\"\\nResult: \" + multiply(n1,n2));\t\t\r\n\t\t}\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-168.php"}, {"exercise_number": 169, "exercise_content": "169. Write a Java program to reverse the content of a sentence (assume a single space between two words) without reverse every word.Input a string: The quick brown fox jumps over the lazy dog\nResult: dog lazy the over jumps fox brown quick The", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\t\r\n public static String reverse_str_word(String input_sentence) {\r\n    if (input_sentence == null) {\r\n      throw new IllegalArgumentException(\"Input param can't be null.\");\r\n    }\r\n    StringBuilder stringBuilder = new StringBuilder();\r\n    String[] words = input_sentence.split(\" \");\r\n    for (int i = words.length - 1; i >= 0; i--) {\r\n      stringBuilder.append(words[i]);\r\n      if (i != 0) {\r\n        stringBuilder.append(\" \");\r\n      }\r\n    }\r\n    return stringBuilder.toString();\r\n  }\r\n   public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Input a string: \");\r\n\t\tString input = scanner.nextLine();\r\n\t\tSystem.out.println(\"\\nResult: \" + reverse_str_word(input));\t\t\r\n\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-169.php"}, {"exercise_number": 170, "exercise_content": "170. Write a Java program to find the length of the longest consecutive sequence of a given array of integers.Original array: [1, 1, 2, 3, 3, 4, 5, 2, 4, 5, 6, 7, 8, 9, 6, -1, -2]\n7", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\t\r\n public static int longest_sequence(int[] nums) {\r\n    if (nums == null) {\r\n      throw new IllegalArgumentException(\"Null array..!\");\r\n    }\r\n    if (nums.length == 0) {\r\n      return 0;\r\n    }\r\n    boolean flag = false;\r\n    int result = 0;\r\n    int start = 0, end = 0;\r\n    for (int i = 1; i < nums.length; i++) {\r\n      if (nums[i - 1] < nums[i]) {\r\n        end = i;\r\n      } else {\r\n        start = i;\r\n      }\r\n      if (end - start > result) {\r\n        flag = true;\r\n        result = end - start;\r\n      }\r\n    }\r\n    if (flag) \r\n\t{\r\n      return result + 1;\r\n    } \r\n\telse \r\n\t{\r\n      return result;\r\n    }\r\n }\r\n\r\n   public static void main(String[] args) {\r\n        int[] nums = { 1, 1, 2, 3, 3, 4, 5, 2, 4, 5, 6, 7, 8, 9, 6, -1, -2 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums));  \r\n\t\tSystem.out.println(longest_sequence(nums));\t\t\r\n\t\t}\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-170.php"}, {"exercise_number": 171, "exercise_content": "171. Write a Java program to accept two string and test if the second string contains the first one.Input first string: Once in a blue moon\nInput second string: See eye to eye\nIf the second string contains the first one? false", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\t\r\n public static boolean is_str_contains(String str1, String str2) {\r\n    if (str1 == null || str2 == null) {\r\n      throw new IllegalArgumentException(\"You can't pass null strings as input.\");\r\n    }\r\n     boolean ans = false;\r\n     for (int i = 0; i < str2.length() - 1; i++) {\r\n       if (str2.charAt(i) == str1.charAt(0)) {\r\n         for (int j = 0; j < str1.length(); j++) {\r\n           if ((i + j) < str2.length() && str1.charAt(j) == str2.charAt(i + j) && j == str1.length() - 1) {\r\n             ans = true;\r\n             break;\r\n           }\r\n        }\r\n      }\r\n    }\r\n    return ans;\r\n  }\r\n\r\n   public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Input first string: \");\r\n\t\tString str1 = scanner.nextLine();\r\n\t\tSystem.out.print(\"Input second string: \");\r\n\t\tString str2 = scanner.nextLine();\r\n\t\tSystem.out.println(\"If the second string contains the first one? \"+is_str_contains(str1, str2));\t\t\r\n\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-171.php"}, {"exercise_number": 172, "exercise_content": "172. Write a Java program to get the number of element in a given array of integers that are smaller than the integer of another given array of integers.Expected Output:0\n3\n7", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Arrays;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n int[] main_arra = {1, 2, 3, 4, 5, 6, 7, 8};\r\n\t\tint[]query_arra = {1, 4, 8};\r\n  ArrayList < Integer > result = count_smaller_number(main_arra, query_arra);\r\n  for (int i = 0; i < result.size(); i++) {\r\n   System.out.println(result.get(i));\r\n  }\r\n }\r\n public static ArrayList < Integer > count_smaller_number(int[] main_arra, int[] query_arra) {\r\n  ArrayList < Integer > result = new ArrayList < > ();\r\n  Arrays.sort(main_arra);\r\n  for (int i = 0; i < query_arra.length; i++) {\r\n   result.add(temp(main_arra, query_arra[i]));\r\n  }\r\n  return result;\r\n }\r\n private static int temp(int[] main_arra, int num) {\r\n  int ctr = 0;\r\n  for (int i = 0; i < main_arra.length; i++) {\r\n   if (main_arra[i] < num) {\r\n    ctr++;\r\n   } else {\r\n    break;\r\n   }\r\n  }\r\n  return ctr;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-172.php"}, {"exercise_number": 173, "exercise_content": "173. Write a Java program to find the median of the number inside the window (size k) at each moving in a given array of integers with duplicate numbers. Move the window from the start of the array.Sample Output:\n{|1, 2, 3|, 4, 5, 6, 7, 8, 8} -> Return median 2\n{1, |2, 3, 4|, 5, 6, 7, 8, 8} -> Return median 3\n{1, 2, |3, 4, 5|, 6, 7, 8, 8} -> Return median 4\n{1, 2, 3, |4, 5, 6|, 7, 8, 8} -> Return median 5\n{1, 2, 3, 4, |5, 6, 7|, 8, 8} -> Return median 6\n{1, 2, 3, 4, 5, |6, 7, 8|, 8} -> Return median 7\n{1, 2, 3, 4, 5, 6, |7, 8, 8|} -> Return median 8\nResult array {2, 3, 4, 5, 6, 7, 8}Expected Output:Original array: [1, 2, 3, 4, 5, 6, 7, 8, 8]\r\n\r\nValue of k: 3\r\n\r\nResult: \r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Arrays;\r\nimport java.util.LinkedList;\r\n\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  int[] main_array = {1, 2, 3, 4, 5, 6, 7, 8, 8};\r\n  int k = 3;\r\n  System.out.println(\"\\nOriginal array: \" + Arrays.toString(main_array));\r\n  System.out.println(\"\\nValue of k: \" + k);\r\n  System.out.println(\"\\nResult: \");\r\n  ArrayList < Integer > result = median_slide_window(main_array, k);\r\n  for (int i = 0; i < result.size(); i++) {\r\n   System.out.println(result.get(i));\r\n  }\r\n }\r\n public static ArrayList < Integer > median_slide_window(int[] main_array, int k) {\r\n  ArrayList < Integer > result = new ArrayList < > ();\r\n  if (k == 0 || main_array.length < k) {\r\n   return result;\r\n  }\r\n  PriorityQueue < Integer > right_num = new PriorityQueue < Integer > (k);\r\n  PriorityQueue < Integer > left_num = new PriorityQueue < Integer > (k, Collections.reverseOrder());\r\n\r\n  for (int i = 0; i < k - 1; ++i) {\r\n   add(right_num, left_num, main_array[i]);\r\n  }\r\n\r\n  for (int i = k - 1; i < main_array.length; ++i) {\r\n   add(right_num, left_num, main_array[i]);\r\n   int median = compute_median(right_num, left_num);\r\n   result.add(median);\r\n   remove(right_num, left_num, main_array[i - k + 1]);\r\n  }\r\n  return result;\r\n }\r\n\r\n private static int compute_median(PriorityQueue < Integer > right_num, PriorityQueue < Integer > left_num) {\r\n  if (left_num.isEmpty() && right_num.isEmpty()) {\r\n   return 0;\r\n  }\r\n  while (left_num.size() < right_num.size()) {\r\n   left_num.add(right_num.poll());\r\n  }\r\n\r\n  while (left_num.size() - right_num.size() > 1) {\r\n   right_num.add(left_num.poll());\r\n  }\r\n  return left_num.peek();\r\n }\r\n\r\n private static void add(PriorityQueue < Integer > right_num, PriorityQueue < Integer > left_num, int num) {\r\n  if (left_num.isEmpty() && right_num.isEmpty()) {\r\n   left_num.add(num);\r\n   return;\r\n  } else {\r\n   if (num <= compute_median(right_num, left_num)) {\r\n    left_num.add(num);\r\n   } else {\r\n    right_num.add(num);\r\n   }\r\n  }\r\n }\r\n\r\n private static void remove(PriorityQueue < Integer > right_num, PriorityQueue < Integer > left_num, int num) {\r\n  if (num <= compute_median(right_num, left_num)) {\r\n   left_num.remove(num);\r\n  } else {\r\n   right_num.remove(num);\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-173.php"}, {"exercise_number": 174, "exercise_content": "174. Write a Java program to find the maximum number inside the number in the window (size k) at each moving in a given array of integers with duplicate numbers. Move the window from the start of the array.Sample output:\n{|1, 2, 3|, 4, 5, 6, 7, 8, 8} -> Return maximum 3\n{1, |2, 3, 4|, 5, 6, 7, 8, 8} -> Return maximum 4\n{1, 2, |3, 4, 5|, 6, 7, 8, 8} -> Return maximum 5\n{1, 2, 3, |4, 5, 6|, 7, 8, 8} -> Return maximum 6\n{1, 2, 3, 4, |5, 6, 7|, 8, 8} -> Return maximum 7\n{1, 2, 3, 4, 5, |6, 7, 8|, 8} -> Return maximum 8\n{1, 2, 3, 4, 5, 6, |7, 8, 8|} -> Return maximum 8\nResult array {3, 4, 5, 6, 7, 8, 8}Expected Output:Original array: [1, 2, 3, 4, 5, 6, 7, 8, 8]\r\n\r\nValue of k: 3\r\n\r\nResult: \r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Arrays;\r\nimport java.util.LinkedList;\r\n\r\npublic class Solution {\r\n   public static void main(String[] args) {\r\n       \tint[] main_array = {1, 2, 3, 4, 5, 6, 7, 8, 8};\r\n\t\tint k = 3;\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(main_array));  \r\n\t\tSystem.out.println(\"\\nValue of k: \"+k);  \r\n        System.out.println(\"\\nResult: \");   \r\n        ArrayList result = max_slide_window(main_array,k);\r\n        for (int i = 0; i < result.size(); i++) {\r\n            System.out.println(result.get(i));\r\n        }\r\n    }\r\n  public static ArrayList max_slide_window(int[] main_array, int k) {\r\n    \tArrayList rst_arra = new ArrayList();\r\n    \tif (main_array == null || main_array.length == 0 || k < 0) {\r\n    \t\treturn rst_arra;\r\n    \t}\r\n    \tDeque deque_num = new LinkedList();\r\n    \tfor (int i = 0; i < k; i++) {\r\n    \t\twhile (!deque_num.isEmpty() && main_array[deque_num.peekLast()] <= main_array[i]) {\r\n    \t\t\tdeque_num.pollLast();\r\n    \t\t}\r\n    \t\tdeque_num.offerLast(i);\r\n    \t}\r\n\r\n    \tfor (int i = k; i < main_array.length; i++) {\r\n    \t\trst_arra.add(main_array[deque_num.peekFirst()]);\r\n    \t\tif (!deque_num.isEmpty() && deque_num.peekFirst() <= i - k) {\r\n    \t\t\tdeque_num.pollFirst();\r\n    \t\t}\r\n    \t\twhile (!deque_num.isEmpty() && main_array[deque_num.peekLast()] <= main_array[i]) {\r\n    \t\t\tdeque_num.pollLast();\r\n    \t\t}\r\n    \t\tdeque_num.offerLast(i);\r\n    \t}\r\n    \trst_arra.add(main_array[deque_num.peekFirst()]);\r\n    \treturn rst_arra;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-174.php"}, {"exercise_number": 175, "exercise_content": "175. Write a Java program to delete a specified node in the middle of a singly linked list.Sample Singly linked list: 10->20->30->40->50\nDelete the fourth node i.e. 40\nResult: 10->20->30->50\nExpected Output:Original Linked list:\r\n10->20->30->40->50\r\nAfter deleting the fourth node, Linked list becomes:\r\n10->20->30->50", "exercise_solution_code": "import java.util.*;\r\nimport java.util.Arrays;\r\nimport java.util.LinkedList;\r\n\r\npublic class Solution {\r\n public static ListNode head = new ListNode(10);\r\n\r\n public static void main(String[] args) {\r\n  head.next = new ListNode(20);\r\n  head.next.next = new ListNode(30);\r\n  head.next.next.next = new ListNode(40);\r\n  head.next.next.next.next = new ListNode(50);\r\n  ListNode p = head;\r\n  System.out.println(\"Original Linked list:\");\r\n  printList(p);\r\n  System.out.println(\"\\nAfter deleting the fourth node, Linked list becomes:\");\r\n  deleteNode(head.next.next.next);\r\n  p = head;\r\n  printList(p);\r\n }\r\n\r\n public static void deleteNode(ListNode node) {\r\n  if (node.next != null) {\r\n   int temp = node.val;\r\n   node.val = node.next.val;\r\n   node.next.val = temp;\r\n\r\n   node.next = node.next.next;\r\n  } else {\r\n   ListNode p = head;\r\n   while (p.next.val != node.val) {\r\n    p = p.next;\r\n   }\r\n   p.next = null;\r\n  }\r\n }\r\n\r\n static void printList(ListNode p) {\r\n\r\n  while (p != null) {\r\n   System.out.print(p.val);\r\n   if (p.next != null) {\r\n    System.out.print(\"->\");\r\n   }\r\n   p = p.next;\r\n  }\r\n }\r\n}\r\nclass ListNode {\r\n int val;\r\n ListNode next;\r\n\r\n ListNode(int val) {\r\n  this.val = val;\r\n  this.next = null;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-175.php"}, {"exercise_number": 176, "exercise_content": "176. Write a Java program to partition an given array of integers into even number first and odd number second.Expected OutputOriginal array: [7, 2, 4, 1, 3, 5, 6, 8, 2, 10]\r\nAfter partition the said array becomes: [10, 2, 4, 2, 8, 6, 5, 3, 1, 7]", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Solution {  \r\n\t\r\n    public static void main(String[] args) {\r\n\t\tint[] nums = {7, 2, 4, 1, 3, 5, 6, 8, 2, 10};\r\n\t\tSystem.out.println(\"Original array: \"+Arrays.toString(nums));\r\n     \tint[] result = partitionArray2(nums);\r\n        System.out.println(\"After partition the said array becomes: \" +Arrays.toString(result));\r\n      }\r\n\r\n   \r\n\r\n    public static int[] partitionArray2(int[] nums) {\r\n        int i = 0;\r\n        int j = nums.length - 1;\r\n        while (i < j) {\r\n            while (nums[i] % 2 == 0) i++;\r\n            while (nums[j] % 2 != 0) j--;\r\n            if (i < j) {\r\n                int temp = nums[i];\r\n                nums[i] = nums[j];\r\n                nums[j] = temp;\r\n            }\r\n        }\r\n\t\treturn nums;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-176.php"}, {"exercise_number": 177, "exercise_content": "177. Write a Java program to get a new binary tree with same structure and same value of a given binary tree.Expected Output:Original Treenode:\r\n4\r\n5\r\n2\r\n3\r\n1\r\n\r\nClone of the said Treenode:\r\n4\r\n5\r\n2\r\n3\r\n1", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  TreeNode t1 = new TreeNode(1);\r\n  TreeNode t2 = new TreeNode(2);\r\n  TreeNode t3 = new TreeNode(3);\r\n  TreeNode t4 = new TreeNode(4);\r\n  TreeNode t5 = new TreeNode(5);\r\n  t1.left = t2;\r\n  t1.right = t3;\r\n  t2.left = t4;\r\n  t2.right = t5;\r\n  System.out.println(\"Original Treenode:\");\r\n  traverseTree(t1);\r\n  System.out.println(\"\\nClone of the said Treenode:\");\r\n  TreeNode result = cloneTree(t1);\r\n  traverseTree(result);\r\n }\r\n public static TreeNode cloneTree(TreeNode root) {\r\n  if (root == null) {\r\n   return null;\r\n  }\r\n  TreeNode dup = new TreeNode(root.val);\r\n  dup.left = cloneTree(root.left);\r\n  dup.right = cloneTree(root.right);\r\n  return dup;\r\n }\r\n\r\n private static void traverseTree(TreeNode root) {\r\n  if (root != null) {\r\n   traverseTree(root.left);\r\n   traverseTree(root.right);\r\n   System.out.println(root.val);\r\n  }\r\n\r\n }\r\n}\r\nclass TreeNode {\r\n public int val;\r\n public TreeNode left, right;\r\n\r\n public TreeNode(int val) {\r\n  this.val = val;\r\n  this.left = this.right = null;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-177.php"}, {"exercise_number": 178, "exercise_content": "178. Write a Java program to find the longest increasing continuous subsequence in a given array of integers.Expected Output:Original array: [10, 11, 12, 13, 14, 7, 8, 9, 1, 2, 3]\r\nSize of longest increasing continuous subsequence: 5", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  int[] nums = { 10, 11, 12, 13, 14, 7, 8, 9, 1, 2, 3 };\r\n  System.out.println(\"Original array: \" + Arrays.toString(nums));\r\n  System.out.println(\"Size of longest increasing continuous subsequence: \" + longest_seq(nums));\r\n }\r\n\r\n public static int longest_seq(int[] nums) {\r\n  int max_sequ = 0;\r\n  if (nums.length == 1) return 1;\r\n  for (int i = 0; i < nums.length - 1; i++) {\r\n   int ctr = 1;\r\n   int j = i;\r\n   if (nums[i + 1] > nums[i]) {\r\n    while (j < nums.length - 1 && nums[j + 1] > nums[j]) {\r\n     ctr++;\r\n     j++;\r\n    }\r\n   } else if (nums[i + 1] < nums[i]) {\r\n    while (j < nums.length - 1 && nums[j + 1] < nums[j]) {\r\n     ctr++;\r\n     j++;\r\n    }\r\n   }\r\n   if (ctr > max_sequ) {\r\n    max_sequ = ctr;\r\n   }\r\n   i += ctr - 2;\r\n  }\r\n  return max_sequ;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-178.php"}, {"exercise_number": 179, "exercise_content": "179. Write a Java program to plus one to the number of a given positive numbers represented as an array of digits.Sample array: [9, 9, 9, 9] which represents 9999\nOutput: [1, 0, 0, 0, 0].Expected Output:Original array: [9, 9, 9, 9]\r\nArray of digits: [1, 0, 0, 0, 0]", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  int[] nums = {9,9,9,9};\r\n  System.out.println(\"Original array: \" + Arrays.toString(nums));\r\n  System.out.println(\"Array of digits: \" + Arrays.toString(plus_One_digit(nums)));\r\n }\r\n public static int[] plus_One_digit(int[] digits_nums) {\r\n  for (int i = digits_nums.length - 1; i > -1; --i) {\r\n   if (digits_nums[i] != 9) {\r\n    digits_nums[i] += 1;\r\n    for (int j = i + 1; j < digits_nums.length; ++j) {\r\n     digits_nums[j] = 0;\r\n    }\r\n    return digits_nums;\r\n   }\r\n  }\r\n  int[] result = new int[digits_nums.length + 1];\r\n  result[0] = 1;\r\n  return result;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-179.php"}, {"exercise_number": 180, "exercise_content": "180. Write a Java program to swap every two adjacent nodes of a given linked list.Expected Output:Original Linked list:\r\n10->20->30->40->50\r\n\r\nAfter swiping Linked list becomes:\r\n20->10->40->30->50", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {  \r\n public static void main(String[] args) {\r\n        String str1 = \"The length of last word\";\r\n\t\tSystem.out.println(\"Original String: \"+str1);\r\n        System.out.println(\"Length of the last word of the above string: \"+length_Of_last_word(str1));\r\n    }\r\n\r\n    public static int length_Of_last_word(String str1) {\r\n        int length_word = 0;\r\n        String[] words = str1.split(\" \");\r\n        if(words.length>0) {\r\n            length_word = words[words.length-1].length();\t\t\t\r\n        } else {\r\n            length_word = 0;\r\n        }\r\n        return length_word;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-181.php"}, {"exercise_number": 181, "exercise_content": "181. Write a Java program to find the length of last word of a given string. The string contains upper/lower-case alphabets and empty space characters ' '.Sample Output:Original String: The length of last word\r\nLength of the last word of the above string: 4", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {  \r\n public static void main(String[] args) {\r\n        String str1 = \"The length of last word\";\r\n\t\tSystem.out.println(\"Original String: \"+str1);\r\n        System.out.println(\"Length of the last word of the above string: \"+length_Of_last_word(str1));\r\n    }\r\n\r\n    public static int length_Of_last_word(String str1) {\r\n        int length_word = 0;\r\n        String[] words = str1.split(\" \");\r\n        if(words.length>0) {\r\n            length_word = words[words.length-1].length();\t\t\t\r\n        } else {\r\n            length_word = 0;\r\n        }\r\n        return length_word;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-181.php"}, {"exercise_number": 182, "exercise_content": "182. Write a Java program to check if two binary trees are identical or not. Assume that two binary trees have the same structure and every identical position has the same value.Sample Output:Comparing TreeNode a and TreeNode b:\r\nfalse\r\n\r\nComparing TreeNode b and TreeNode c:\r\ntrue", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {  \r\n   public static void main(String[] args) {\r\n        TreeNode a = new TreeNode(1);\r\n        a.left = new TreeNode(2);\r\n        a.right = new TreeNode(3);\r\n        a.left.left = new TreeNode(4);\r\n\t\t\r\n\t\tTreeNode b = new TreeNode(1);\r\n        b.left = new TreeNode(2);\r\n        b.right = new TreeNode(3);\r\n        b.left.right = new TreeNode(4);\r\n\t\t\t\t\r\n\t\tTreeNode c = new TreeNode(1);\r\n        c.left = new TreeNode(2);\r\n        c.right = new TreeNode(3);\r\n        c.left.right = new TreeNode(4);\r\n\t\t\r\n        System.out.println(\"\\nComparing TreeNode a and TreeNode b:\");\r\n        System.out.println(is_Identical_tree_node(a, b));\r\n\t\tSystem.out.println(\"\\nComparing TreeNode b and TreeNode c:\");\r\n\t\tSystem.out.println(is_Identical_tree_node(b, c));\r\n    }\r\n\r\n    public static boolean is_Identical_tree_node(TreeNode a, TreeNode b) {\r\n        // Write your code here\r\n        if (a == null && b == null) return true;\r\n        if (a == null || b == null) {\r\n            return false;\r\n        }\r\n        if (a.val != b.val) return false;\r\n        return is_Identical_tree_node(a.left, b.left) &&\r\n                is_Identical_tree_node(a.right, b.right);\r\n    }\r\n}\r\nclass TreeNode {\r\n    public int val;\r\n    public TreeNode left, right;\r\n    public TreeNode(int val) {\r\n        this.val = val;\r\n        this.left = this.right = null;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-182.php"}, {"exercise_number": 183, "exercise_content": "183. Write a Java program to accept a positive number and repeatedly add all its digits until the result has only one digit.Expected Output:Input a positive integer:  25\r\n7", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n  System.out.print(\"Input a positive integer: \");\r\n  int n = in .nextInt();\r\n  if (n > 0)\r\n   System.out.println(add_digits_until_one(n));\r\n }\r\n\r\n public static int add_digits_until_one(int n) {\r\n  while (n > 9) {\r\n   int sum_digits = 0;\r\n   while (n != 0) {\r\n    sum_digits += n % 10;\r\n    n /= 10;\r\n   }\r\n   n = sum_digits;\r\n  }\r\n  return n;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-183.php"}, {"exercise_number": 184, "exercise_content": "184. Write a Java program to find the length of the longest consecutive sequence path of a given binary tree. \nNote: The longest consecutive path need to be from parent to child.Expected Output:Length of the longest consecutive sequence path:  4", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {  \r\n   public static void main(String[] args) {\r\n        TreeNode a = new TreeNode(1);\r\n        a.right = new TreeNode(3);\r\n        a.right.left = new TreeNode(2);\r\n\t\ta.right.right = new TreeNode(4);\r\n\t\ta.right.right.right = new TreeNode(5);\r\n\t\ta.right.right.right.right = new TreeNode(6);\r\n\t\tSystem.out.println(\"Length of the longest consecutive sequence path: \"+longest_Consecutive(a));\r\n    }\r\n  public static int longest_Consecutive(TreeNode root) {\r\n        if (root == null) {\r\n            return 0;\r\n        }\r\n        int result = diffn(root, 1) + diffn(root, -1);\r\n        return Math.max(result, Math.max(longest_Consecutive(root.left), longest_Consecutive(root.right)));\r\n    }\r\n    private static int diffn(TreeNode tnode, int diff) {\r\n        if (tnode == null) {\r\n            return 0;\r\n        }\r\n        int left_depth = 0, right_depth = 0;\r\n        // check node\r\n        if (tnode.left != null && tnode.val - tnode.left.val == diff) {\r\n            left_depth = diffn(tnode.left, diff) + 1;\r\n        }\r\n        if (tnode.right != null && tnode.val - tnode.right.val == diff) {\r\n            right_depth = diffn(tnode.right, diff) + 1;\r\n        }\r\n        return Math.max(left_depth, right_depth);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-184.php"}, {"exercise_number": 185, "exercise_content": "185. Write a Java program to check if two given strings are isomorphic or not.Expected Output:Is abca and zbxz are Isomorphic? true", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {  \r\n   public static void main(String[] args) {\r\n        String str1 = \"abca\";\r\n\t\tString str2 = \"zbxz\";\r\n\t\tSystem.out.println(\"Is \"+str1 +\" and \"+str2 +\" are Isomorphic? \"+is_Isomorphic(str1, str2));\r\n    }\r\n\r\n  public static boolean is_Isomorphic(String str1, String str2) {\r\n        if (str1 == null || str2 == null || str1.length() != str2.length())\r\n\t\t\treturn false;\r\n        Map<Character, Character> map = new HashMap<>();\r\n        \r\n        for (int i = 0; i < str1.length(); i++) {\r\n            char char_str1 = str1.charAt(i), char_str2 = str2.charAt(i);\r\n            if (map.containsKey(char_str1)) \r\n\t\t\t{\r\n                if (map.get(char_str1) != char_str2)\r\n\t\t\t\t\treturn false;\r\n            }\r\n\t\t\telse \r\n\t\t\t{\r\n                if (map.containsValue(char_str2)) \r\n\t\t\t\t\treturn false;\r\n             map.put(char_str1, char_str2);\r\n            }\r\n        }\r\n        \r\n        return true;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-185.php"}, {"exercise_number": 186, "exercise_content": "186. Write a Java program to check if a number is a strobogrammatic number. The number is represented as a string.According to Wikipedia \"A strobogrammatic number is a number whose numeral is rotationally symmetric, so that it appears the same when rotated 180 degrees. In other words, the numeral looks the same right-side up and upside down (e.g., 69, 96, 1001). A strobogrammatic prime is a strobogrammatic number that is also a prime number, i.e., a number that is only divisible by one and itself (e.g., 11). It is a type of ambigram, words and numbers that retain their meaning when viewed from a different perspective, such as palindromes.\"\nThe first few strobogrammatic numbers are:\n0, 1, 8, 11, 69, 88, 96, 101, 111, 181, 609, 619, 689, 808, 818, 888, 906, 916, 986, 1001, 1111, 1691, 1881, 1961, 6009, 6119, 6699, 6889, 6969, 8008, 8118, 8698, 8888, 8968, 9006, 9116, 9696, 9886, 9966, ...Expected Output:Is 9006 is Strobogrammatic? true", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  String n = \"9006\";\r\n  System.out.println(\"Is \" + n + \" is Strobogrammatic? \" + is_Strobogrammatic(n));\r\n }\r\n\r\n public static boolean is_Strobogrammatic(String n) {\r\n  if (n == null || n.length() == 0) {\r\n   return true;\r\n  }\r\n  HashMap < Character, Character > map = new HashMap < Character, Character > ();\r\n  map.put('0', '0');\r\n  map.put('1', '1');\r\n  map.put('8', '8');\r\n  map.put('6', '9');\r\n  map.put('9', '6');\r\n  int left = 0;\r\n  int right = n.length() - 1;\r\n  while (left <= right) {\r\n   if (!map.containsKey(n.charAt(right)) || n.charAt(left) != map.get(n.charAt(right))) {\r\n    return false;\r\n   }\r\n   left++;\r\n   right--;\r\n  }\r\n  return true;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-186.php"}, {"exercise_number": 187, "exercise_content": "187. Write a Java program to find the index of first non-repeating character in a given string.Expected Output:Index of first non-repeating character in 'google' is: 4", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  String str1 = \"google\";\r\n  System.out.println(\"Index of first non-repeating character in '\" + str1 + \"' is: \" + first_unique_character(str1));\r\n }\r\n\r\n public static int first_unique_character(String str1) {\r\n  HashMap < Character, Integer > map = new HashMap < > ();\r\n  for (int i = 0; i < str1.length(); ++i) {\r\n   char chr = str1.charAt(i);\r\n   map.put(chr, map.containsKey(chr) ? map.get(chr) + 1 : 1);\r\n  }\r\n  for (int i = 0; i < str1.length(); ++i) {\r\n   if (map.get(str1.charAt(i)) < 2) {\r\n    return i;\r\n   }\r\n  }\r\n  return -1;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-187.php"}, {"exercise_number": 188, "exercise_content": "188. Write a Java program to find all the start indices of a given string's anagrams in another given string.Expected Output:Original String: zyxwyxyxzwxyz\r\nStarting anagram indices of xyz: [0, 6, 10]", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  String str1 = \"zyxwyxyxzwxyz\";\r\n  String str2 = \"xyz\";\r\n  System.out.println(\"Original String: \" + str1);\r\n  System.out.println(\"Starting anagram indices of \" + str2 + \": \" + find_Anagrams(str1, str2));\r\n }\r\n\r\n public static List < Integer > find_Anagrams(String str1, String str2) {\r\n  List < Integer > list = new ArrayList < Integer > ();\r\n  if (str1.length() < str2.length() || str2.length() < 1) {\r\n   return list;\r\n  }\r\n  if (str1.equals(str2)) {\r\n   list.add(0);\r\n   return list;\r\n  }\r\n\r\n  HashMap < Character, Integer > map = new HashMap < > ();\r\n  for (char c: str2.toCharArray()) {\r\n   if (map.containsKey(c)) {\r\n    map.put(c, map.get(c) + 1);\r\n   } else {\r\n    map.put(c, 1);\r\n   }\r\n  }\r\n  int str2_length = str2.length();\r\n  int current_length = 0;\r\n  int correct_chars = 0;\r\n\r\n  for (int i = 0; i < str1.length(); ++i) {\r\n   current_length++;\r\n   if (map.containsKey(str1.charAt(i))) {\r\n    int ctr = map.get(str1.charAt(i));\r\n    if (ctr > 0) {\r\n     correct_chars++;\r\n    }\r\n    map.put(str1.charAt(i), ctr - 1);\r\n   }\r\n\r\n   if (current_length == str2_length) {\r\n    int begin_pos = i - str2_length + 1;\r\n    if (correct_chars == str2_length) {\r\n     list.add(begin_pos);\r\n    }\r\n    if (map.containsKey(str1.charAt(begin_pos))) {\r\n     int ctr = map.get(str1.charAt(begin_pos));\r\n     if (ctr >= 0) {\r\n      correct_chars--;\r\n     }\r\n     map.put(str1.charAt(begin_pos), ctr + 1);\r\n    }\r\n    current_length--;\r\n   }\r\n  }\r\n  return list;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-188.php"}, {"exercise_number": 189, "exercise_content": "189. Write a Java program to Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.Expected Output:'123' + '456' = 579", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  String n1 = \"123\";\r\n  String n2 = \"456\";\r\n  System.out.println(\"'\" + n1 + \"'\" + \" + \" + \"'\" + n2 + \"'\" + \" = \" + addStrings(n1, n2));\r\n }\r\n public static String addStrings(String n1, String n2) {\r\n  int[] x = str_num(n1);\r\n  int[] y = str_num(n2);\r\n  int[] sum = new int[Math.max(x.length, y.length) + 1];\r\n  int z = 0;\r\n  int index = sum.length - 1;\r\n  int i = 0;\r\n  int j = 0;\r\n  while (index >= 0) {\r\n   if (i < x.length) {\r\n    z += x[i++];\r\n   }\r\n   if (j < y.length) {\r\n    z += y[j++];\r\n   }\r\n   sum[index--] = z % 10;\r\n   z /= 10;\r\n  }\r\n  StringBuilder sb = new StringBuilder(sum.length);\r\n  for (i = (sum[0] == 0 ? 1 : 0); i < sum.length; ++i) {\r\n   sb.append(sum[i]);\r\n  }\r\n  return sb.toString();\r\n }\r\n\r\n private static int[] str_num(String num) {\r\n  char[] digits = num.toCharArray();\r\n  int[] number = new int[digits.length];\r\n  int index = number.length - 1;\r\n  for (char digit: digits) {\r\n   number[index--] = digit - '0';\r\n  }\r\n  return number;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-189.php"}, {"exercise_number": 190, "exercise_content": "190. Write a Java program to find the missing string from two given strings.Expected Output:Missing string: [Solution]", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  String str1 = \"Java Programming Exercises, Practice, Solution\";\r\n  String str2 = \"Java Programming Exercises, Practice,\";\r\n  System.out.println(\"Missing string: \" + Arrays.toString(missing_Words(str1, str2)));\r\n }\r\n\r\n public static String[] missing_Words(String t, String s) {\r\n\r\n  String[] s1 = t.split(\" \");\r\n  String[] s2 = s.split(\" \");\r\n  int sz = s1.length - s2.length;\r\n  String[] missing_str = new String[sz];\r\n  int c = 0;\r\n  for (int i = 0; i < s1.length; i++) {\r\n   int flag = 0;\r\n   for (int j = 0; j < s2.length; j++) {\r\n    if (s1[i].equals(s2[j]))\r\n     flag = 1;\r\n   }\r\n   if (flag == 0) {\r\n    missing_str[c++] = s1[i];\r\n   }\r\n  }\r\n  return missing_str;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-190.php"}, {"exercise_number": 191, "exercise_content": "191. Write a Java program to test whether there are two integers x and y such that x^2 + y^2 is equal to a given positive number.Expected Output:Input a positive integer:  25\r\nIs 25 sum of two square numbers? true", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {  \r\n   public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\t\r\n        System.out.print(\"Input a positive integer: \");\r\n        int n = in.nextInt(); \r\n\t\tif (n>0)\r\n\t\t{\r\n           System.out.print(\"Is \"+n+\" sum of two square numbers? \"+sum_of_square_numbers(n));\r\n\t\t}  \t\t\r\n    }\r\n\r\n public static boolean sum_of_square_numbers(int n) {\r\n        int left_num = 0, right_num = (int) Math.sqrt(n);\r\n        while (left_num <= right_num) {\r\n            if (left_num * left_num + right_num * right_num == n) {\r\n                return true;\r\n            } else if (left_num * left_num + right_num * right_num < n) {\r\n                left_num++;\r\n            } else {\r\n                right_num--;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-191.php"}, {"exercise_number": 192, "exercise_content": "192. Write a Java program to rearrange the alphabets in the order followed by the sum of digits in a given string containing uppercase alphabets and integer digits (from 0 to 9).Expected Output:ADEHNS23", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\npublic class Solution {\r\n static final int MAX_CHAR = 20;\r\n\r\n public static void main(String args[]) {\r\n  String str1 = \"AND456HSE8\";\r\n  System.out.println(arrange_String_nums(str1));\r\n }\r\n static String arrange_String_nums(String str1) {\r\n  int char_count[] = new int[MAX_CHAR];\r\n  int sum_num = 0;\r\n  for (int i = 0; i < str1.length(); i++) {\r\n   if (Character.isUpperCase(str1.charAt(i)))\r\n    char_count[str1.charAt(i) - 'A']++;\r\n   else\r\n    sum_num = sum_num + (str1.charAt(i) - '0');\r\n  }\r\n\r\n  String rarr_part = \"\";\r\n\r\n  for (int i = 0; i < MAX_CHAR; i++) {\r\n   char ch = (char)('A' + i);\r\n   while (char_count[i]-- != 0)\r\n    rarr_part = rarr_part + ch;\r\n  }\r\n\r\n  if (sum_num > 0)\r\n   rarr_part = rarr_part + sum_num;\r\n  return rarr_part;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-192.php"}, {"exercise_number": 193, "exercise_content": "193. Write a Java program that accept an integer and find the sum of all the elements from all possible subsets of a set formed by first n natural numbers.Expected Output:Input a positive integer:  25\r\nSum of subsets of n is : 1157627904", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n  System.out.print(\"Input a positive integer: \");\r\n  int n = in .nextInt();\r\n  int result = (n * (n + 1) / 2) * (1 << (n - 1));\r\n  System.out.print(\"Sum of subsets of n is : \" + result);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-193.php"}, {"exercise_number": 194, "exercise_content": "194. Write a Java program to find the all positions of a given number in a given matrix. If the number not found print (\"Number not found!\").Expected Output:(0,2)\r\n\r\n(1,0)\r\n\r\n(2,1)", "exercise_solution_code": "public class Solution {\r\n public static void main(String[] args) {\r\n  int num = 3;\r\n  int matrix[][] = {\r\n   {2,5,3},\r\n   {3,2,1},\r\n   {1,3,5}\r\n  };\r\n  int r = matrix.length;\r\n  int c = matrix[0].length - 1;\r\n  int m = 0, n = 0;\r\n  Boolean flag = false;\r\n  while (m < r) {\r\n   while (n <= c) {\r\n    if (matrix[m][n] == num) {\r\n     System.out.print(\"\\n(\" + m + \",\" + n + \")\\n\");\r\n     flag = true;\r\n    }\r\n    n++;\r\n   }\r\n   m++;\r\n   n = 0;\r\n  }\r\n  if (flag == false)\r\n   System.out.print(\"Number not found!\");\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-194.php"}, {"exercise_number": 195, "exercise_content": "195. Write a Java program to check if three given side lengths (integers) can make a triangle or not.Expected Output:Input side1:  5\r\nInput side2:  6\r\nInput side3:  8\r\nIs the said sides form a triangle: true", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n  System.out.print(\"Input side1: \");\r\n  int s1 = in .nextInt();\r\n  System.out.print(\"Input side2: \");\r\n  int s2 = in .nextInt();\r\n  System.out.print(\"Input side3: \");\r\n  int s3 = in .nextInt();\r\n\r\n  System.out.print(\"Is the said sides form a triangle: \" + isValidTriangle(s1, s2, s3));\r\n }\r\n public static boolean isValidTriangle(int a, int b, int c) {\r\n  return (a + b > c && b + c > a && c + a > b);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-195.php"}, {"exercise_number": 196, "exercise_content": "196. rite a Java program\u00a0to create a spiral array of n * n sizes from a given\u00a0integer n.Expected Output:Input a number:  5\r\nSpiral array becomes:\r\n1 2 3 4 5\r\n16 17 18 19 6\r\n15 24 25 20 7\r\n14 23 22 21 8\r\n13 12 11 10 9", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {       \r\n    public static void main(String[] args) {\r\n\t\tScanner in = new Scanner(System.in);\t\r\n        System.out.print(\"Input a number: \");\r\n        int n = in.nextInt(); \r\n        int[][] result = spiral_Array(n);\r\n\t\tSystem.out.print(\"Spiral array becomes:\\n\");\r\n\t\tfor(int i = 0; i < result.length; i++)\r\n        {\r\n          for(int j = 0; j < result[i].length; j++)\r\n          {\r\n             System.out.print(result[i][j]);\r\n             if(j < result[i].length - 1) System.out.print(\" \");\r\n            }\r\n         System.out.println();\r\n           }\r\n\t   }\r\n   public static int[][] spiral_Array(int n) {\r\n        int[][] temp = new int[n][n];\r\n        int[] dx = new int[]{0, 1, 0, -1};\r\n        int[] dy = new int[]{1, 0, -1, 0};\r\n        int x, y, d;\r\n        int i, j, nx, ny;        \r\n        for (i = 0; i < n; ++i) \r\n\t\t{\r\n            for (j = 0; j < n; ++j)\r\n\t\t\t\t{\r\n                temp[i][j] = -1; \r\n            }\r\n        }        \r\n        x = 0;\r\n        y = 0;\r\n        d = 0;\r\n        for (i = 1; i <= n * n; ++i) \r\n\t\t{\r\n            temp[x][y] = i;  \r\n            nx = x + dx[d];\r\n            ny = y + dy[d];\r\n            if (nx < 0 || nx >= n || ny < 0 || ny >= n || temp[nx][ny] != -1) {\r\n                d = (d + 1) % 4;\r\n                nx = x + dx[d];\r\n                ny = y + dy[d];\r\n            }         \r\n            x = nx;\r\n            y = ny;\r\n        }        \r\n        return temp;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-196.php"}, {"exercise_number": 197, "exercise_content": "197. Write a Java program to test if a given number (positive integer ) is a perfect square or not.Expected Output:Input a positive integer:  6\r\nIs the said number perfect square? false", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n  System.out.print(\"Input a positive integer: \");\r\n  int n = in .nextInt();\r\n  System.out.print(\"Is the said number perfect square? \" + is_Perfect_Square(n));\r\n }\r\n\r\n public static boolean is_Perfect_Square(int n) {\r\n  int x = n % 10;\r\n  if (x == 2 || x == 3 || x == 7 || x == 8) {\r\n   return false;\r\n  }\r\n  for (int i = 0; i <= n / 2 + 1; i++) {\r\n   if ((long) i * i == n) {\r\n    return true;\r\n   }\r\n  }\r\n  return false;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-197.php"}, {"exercise_number": 198, "exercise_content": "198. Write a Java program to get the position of a given prime number.Expected Output:Input a positive integer:  15\r\nPosition of the said Prime number: 6", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n  System.out.print(\"Input a prime number: \");\r\n  int n = in .nextInt();\r\n  System.out.print(\"Position of the said Prime number: \" + kth_Prime(n));\r\n }\r\n public static int kth_Prime(int n) {\r\n  int[] prime_num = new int[10000];\r\n  int num = 3;\r\n  int i = 0, index = 0;\r\n  prime_num[0] = 2;\r\n  while (num <= n) {\r\n   for (i = 0; i <= index; i++) {\r\n    if (num % prime_num[i] == 0) {\r\n     break;\r\n    }\r\n   }\r\n   if (i > index) {\r\n    prime_num[++index] = num;\r\n   }\r\n   num++;\r\n  }\r\n  return index + 1;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-198.php"}, {"exercise_number": 199, "exercise_content": "199. Write a Java program to check a string follows a given pattern.Example pattern:\nGiven pattern = \"xyyx\", str = \"red black black red\", return true.\nGiven pattern = \"xyyx\", str = \"red black black green\", return false.\nGiven pattern = \"xxxx\", str = \"red black black red\", return false.\nGiven pattern = \"xxxx\", str = \"red red red red\", return true.Expected Output:Is the string and pattern matched? false", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  String str = \"red black black red\";\r\n  //String str = \"red red red red\"; \r\n  String pattern = \"xyxx\";\r\n  //String pattern = \"xxxx\";\r\n  System.out.print(\"Is the string and pattern matched? \" + word_Pattern_Match(pattern, str));\r\n }\r\n\r\n public static boolean word_Pattern_Match(String pattern, String str) {\r\n  char[] word_pattern = pattern.toCharArray();\r\n  String[] words = str.split(\" \");\r\n\r\n  Map < Character, String > map = new HashMap < > ();\r\n  Set < String > set = new HashSet < > ();\r\n\r\n  for (int i = 0; i < word_pattern.length; i++) {\r\n   if (map.containsKey(word_pattern[i])) {\r\n    if (!map.get(word_pattern[i]).equals(words[i])) {\r\n     return false;\r\n    }\r\n    continue;\r\n   }\r\n\r\n   if (set.contains(words[i])) {\r\n    return false;\r\n   }\r\n   map.put(word_pattern[i], words[i]);\r\n   set.add(words[i]);\r\n  }\r\n  return true;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-199.php"}, {"exercise_number": 200, "exercise_content": "200. Write a Java program to remove duplicate letters and arrange in lexicographical order from a given string which contains only lowercase letters.Note: In mathematics, the lexicographic or lexicographical order (also known as lexical order, dictionary order, alphabetical order or lexicographic(al) product) is a generalization of the way words are alphabetically ordered based on the alphabetical order of their component letters.Expected Output:Original string: zxywooxz\r\nAfter removing duplicate characters: xywoz", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  String str = \"zxywooxz\";\r\n  System.out.print(\"Original string: \" + str);\r\n  System.out.print(\"\\nAfter removing duplicate characters: \" + remove_duplicate_letters(str));\r\n }\r\n public static String remove_duplicate_letters(String str1) {\r\n  int[] ctr = new int[26];\r\n  boolean[] in_stack = new boolean[26];\r\n  char[] st_char = new char[str1.length()];\r\n  int len = 0;\r\n\r\n  for (char c: str1.toCharArray()) {\r\n   ctr[c - 'a']++;\r\n  }\r\n\r\n  for (char c: str1.toCharArray()) {\r\n   ctr[c - 'a']--;\r\n\r\n   if (!in_stack[c - 'a']) {\r\n    while (len > 0 && c < st_char[len - 1] && ctr[st_char[len - 1] - 'a'] > 0) {\r\n     in_stack[st_char[--len] - 'a'] = false;\r\n    }\r\n    st_char[len++] = c;\r\n    in_stack[c - 'a'] = true;\r\n   }\r\n  }\r\n  return new String(st_char, 0, len);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-200.php"}, {"exercise_number": 201, "exercise_content": "201. Write a Java program to divide a given array of integers into given k non-empty subsets whose sums are all equal. Return true if all sums are equal otherwise return false.Example:\nnums = {1,3,3,5,6,6}, k = 4;\n4 subsets (5,1), (3, 3), (6), (6) with equal sums.Expected Output:Original Array: [1, 3, 3, 5, 6, 6]\r\nTarget of subsets: 4\r\nAfter removing duplicate characters: true", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Solution {\r\n public static void main(String[] args) {\r\n  int[] nums = {1,3,3,5,6,6};\r\n  int target = 4;\r\n  System.out.print(\"Original Array: \" + Arrays.toString(nums));\r\n  System.out.print(\"\\nTarget of subsets: \" + target);\r\n  System.out.print(\"\\nAfter removing duplicate characters: \" + partition_k_subsets(nums, target));\r\n }\r\n static boolean search_subset(int used, int n, boolean[] flag, int[] nums, int target) {\r\n  if (n == 0) {\r\n   return true;\r\n  }\r\n\r\n  if (!flag[used]) {\r\n   flag[used] = true;\r\n   int remain_num = (n - 1) % target + 1;\r\n   for (int i = 0; i & lt; nums.length; i++) {\r\n    if ((((used >> i) & 1) == 0) && nums[i] & lt; = remain_num) {\r\n     if (search_subset(used | (1 & lt; & lt; i), n - nums[i], flag, nums, target)) {\r\n      return true;\r\n     }\r\n    }\r\n   }\r\n  }\r\n  return false;\r\n }\r\n\r\n public static boolean partition_k_subsets(int[] nums, int k) {\r\n  int sum = Arrays.stream(nums).sum();\r\n  if (sum % k > 0) {\r\n   return false;\r\n  }\r\n  boolean[] flag = new boolean[1 & lt; & lt; nums.length];\r\n  return search_subset(0, sum, flag, nums, sum / k);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-201.php"}, {"exercise_number": 202, "exercise_content": "202. Write a Java program to find the total number of continuous subarrays in a given array of integers whose sum equals to an given integer.Expected Output:Original Array: [4, 2, 3, 3, 7, 2, 4]\r\nValue of k: 6\r\nTotal number of continuous subarrays: 3", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n    public static void main(String[] args) {\t\t\r\n        int[] nums = {4,2,3,3,7,2,4};\r\n\t\tint k = 6;\r\n\t\tSystem.out.print(\"Original Array: \"+Arrays.toString(nums));\r\n\t\tSystem.out.print(\"\\nValue of k: \"+k);\r\n\t\tSystem.out.print(\"\\nTotal number of continuous subarrays: \"+max_SubArray(nums, k));       \r\n    }     \r\n   public static int max_SubArray(int[] nums, int k) {\r\n   int ctr = 0, sum = 0;\r\n        Map<Integer, Integer>map = new HashMap<>();\r\n        \r\n        map.put(0, 1);\r\n        \r\n        for (int i = 0; i < nums.length; i++) {\r\n            sum += nums[i];\r\n            \r\n            if (map.containsKey(sum - k)) {\r\n                ctr = ctr + map.get(sum - k);\r\n            }\r\n            \r\n            if (map.containsKey(sum)) {\r\n                map.put(sum, map.get(sum) + 1);\r\n            } else {\r\n                map.put(sum, 1);\r\n            }\r\n        }\r\n        \r\n        return ctr;\r\n    }\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-202.php"}, {"exercise_number": 203, "exercise_content": "203. Write a Java program to find the contiguous subarray of given length k which has the maximum average value of a given array of integers. Display the maximum average value.Expected Output:Original Array: [4, 2, 3, 3, 7, 2, 4]\r\nValue of k: 3\r\nMaximum average value: 4.333333333333333", "exercise_solution_code": "import java.util.*;\r\npublic class Solution {\r\n    public static void main(String[] args) {\t\t\r\n        int[] nums = {4,2,3,3,7,2,4};\r\n\t\tint k = 3;\r\n\t\tSystem.out.print(\"Original Array: \"+Arrays.toString(nums));\r\n\t\tSystem.out.print(\"\\nValue of k: \"+k);\r\n\t\tSystem.out.print(\"\\nMaximum average value: \"+find_max_average(nums, k));       \r\n    }     \r\n  public static double find_max_average(int[] nums, int k) {\r\n        int sum = 0;\r\n        for (int i = 0; i < k; i++) {\r\n            sum += nums[i];\r\n        }\r\n        int max_val = sum;\r\n        \r\n        for (int i = k; i < nums.length; i++) {\r\n            sum = sum - nums[i - k] + nums[i];\r\n            max_val = Math.max(max_val, sum);\r\n        }\r\n        return (double) max_val / k;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-203.php"}, {"exercise_number": 204, "exercise_content": "204. Write a Java program to compute xn % y where x, y and n are all 32bit integers.Expected Output:Input x :  25\r\nInput n :  35\r\nInput y :  45\r\nx^n % y = 5.0", "exercise_solution_code": "import java.util.*;\r\n public class Main \r\n {\r\n public static void main(String[] args)\r\n    {\r\n       Scanner in = new Scanner(System.in);\r\n          System.out.print(\"Input x : \");\r\n          int x = in.nextInt();  \r\n\t\t      System.out.print(\"Input n : \");\r\n\t\t      int n = in.nextInt(); \r\n\t      \tSystem.out.print(\"Input y : \");\r\n\t      \tint y = in.nextInt(); \r\n\t      \t    double result = Math.pow(x, n);\r\n\t\t     double result1 = result % y;\r\n\t\t   System.out.println(\"x^n % y = \" + result1); \r\n    }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-204.php"}, {"exercise_number": 205, "exercise_content": "205. Write a Java program to check whether an given integer is power of 2 or not using O(1) time.Note: O(1) means that it takes a constant time, like 12 nanoseconds, or two minutes no matter the amount of data in the set.\nO(n) means it takes an amount of time linear with the size of the set, so a set twice the size will take twice the time. You probably don't want to put a million objects into one of these.Expected Output:Input a number :  25\r\nfalse", "exercise_solution_code": "import java.util.*;\r\npublic class Main \r\n {\r\n public static void main(String[] args)\r\n  {\r\n      boolean b = true;\r\n      Scanner in = new Scanner(System.in);\r\n      System.out.print(\"Input a number : \");\r\n      int num = in.nextInt();           \r\n     {   \r\n     while(num!=1)\r\n      {\r\n        if(num%2!=0)\r\n          { \r\n            b=! b;\r\n            System.out.print(b);\r\n            System.exit(0);\r\n          }\r\n            num = num / 2;\r\n      }\r\n       System.out.print(b);\r\n     }\r\n  }\r\n         \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-205.php"}, {"exercise_number": 206, "exercise_content": "206. Write a Java program to find all unique combinations from a collection of candidate numbers. The sum of the numbers will be equal to a given target number.Expected Output:Input number of elements of the array: \r\n 3\r\nInput number format: 2 3 4 5: \r\nEnter elements:\r\n 6 7 8\r\nEnter target sum:\r\n 21\r\nA solution set is:\r\n{ 6 7 8 }", "exercise_solution_code": "import java.util.*;\r\nclass Main {\r\n private static < K, V > void insert(Map < K, List < V >> hashMap, K key, V value) {\r\n  if (!hashMap.containsKey(key)) {\r\n   hashMap.put(key, new ArrayList < > ());\r\n  }\r\n  hashMap.get(key).add(value);\r\n }\r\n public static void Subsets(int[] A, int i, int j) {\r\n  System.out.print(\"{ \");\r\n  for (int k = i; k <= j; k++) {\r\n   System.out.print(A[k] + \" \");\r\n  }\r\n  System.out.println(\"}\");\r\n }\r\n\r\n public static void Subsets(int[] A, int sum) {\r\n  Map < Integer, List < Integer >> hashMap = new HashMap < > ();\r\n  insert(hashMap, 0, -1);\r\n  int sum_so_far = 0;\r\n  for (int index = 0; index < A.length; index++) {\r\n\r\n   sum_so_far += A[index];\r\n   if (hashMap.containsKey(sum_so_far - sum)) {\r\n    List < Integer > list = hashMap.get(sum_so_far - sum);\r\n    for (Integer value: list) {\r\n     Subsets(A, value + 1, index);\r\n    }\r\n   }\r\n   insert(hashMap, sum_so_far, index);\r\n  }\r\n }\r\n\r\n public static void main(String[] args) {\r\n  {\r\n   Scanner s = new Scanner(System.in);\r\n   System.out.println(\"Input number of elements of the array: \");\r\n   int n = s.nextInt();\r\n   System.out.println(\"Input number format: 2 3 4 5: \");\r\n   int arr[] = new int[n];\r\n   System.out.println(\"Enter elements:\");\r\n   for (int i = 0; i < n; i++)\r\n    arr[i] = s.nextInt();\r\n   System.out.println(\"Enter target sum:\");\r\n   int sum = s.nextInt();\r\n   int A[] = new int[arr.length];\r\n   A = Arrays.copyOf(arr, arr.length);\r\n   System.out.println(\"A solution set is:\");\r\n   Subsets(A, sum);\r\n   System.exit(0);\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-206.php"}, {"exercise_number": 207, "exercise_content": "207. Write a Java program to merge two sorted (ascending) linked lists in ascending order.Expected Output:How many elements do you want to add in 1st linked list?:  3\r\nInput numbers of 1st linked list in ascending order:  1 2 3\r\n\r\nHow many elements do you want to add in 2nd linked list?:  3\r\nInput numbers of 2nd linked list in ascending order:  4 5 6\r\n\r\nMerged list: 1 2 3 4 5 6", "exercise_solution_code": "import java.util.*;\r\nclass Main\r\n{\r\n    public static void main(String[] args)  \r\n    {\r\n      //Create the 1st linked list and take input as per user's choice\r\n        LinkedList  list1 = new LinkedList();\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.print(\"How many elements do you want to add in 1st linked list?: \");\r\n        int num = input.nextInt();\r\n        System.out.print(\"Input numbers of 1st linked list in ascending order: \");\r\n        for(int i=0;i<num;i++)\r\n        {\r\n         int element = input.nextInt();\r\n         list1.add(element);\r\n        }\r\n        System.out.println();\r\n       //System.out.println(\"Elements of 1st linked list are: \");\r\n       //for(int i=0;i<list.size();i++){\r\n       //System.out.println(list.get(i));}       \r\n       //Convert the 1st linked list to arraylist\r\n       List<Integer> list1_1 = new ArrayList<Integer>(list1);\r\n       //Convert the arraylist to array using toArray method\r\n        Object[] list1_1_1 = list1_1.toArray();\r\n       //Copy elements from object array to integer array\r\n        int[] list1_1_1_1 = new int[list1_1_1.length];\r\n       \tfor (int i = 0; i < list1_1_1.length; i++)\r\n\t\t   \tlist1_1_1_1[i] = (int)list1_1_1[i];\t   \t\r\n//Create the 2nd linked list and take input as per user's choice\r\n        LinkedList list2 = new LinkedList();\r\n        System.out.print(\"How many elements do you want to add in 2nd linked list?: \");\r\n        int num1 = input.nextInt();\r\n        System.out.print(\"Input numbers of 2nd linked list in ascending order: \");\r\n        for(int i=0;i<num1;i++)\r\n        {\r\n         int element = input.nextInt();\r\n         list2.add(element);\r\n        }\r\n        System.out.println();\r\n       //System.out.println(\"Elements of 2nd linked list are: \");\r\n       //for(int i=0;i<list1.size();i++){\r\n       //System.out.println(list1.get(i));}       \r\n       //Convert the 2nd linked list to arraylist\r\n       List<Integer> list2_2 = new ArrayList<Integer>(list2);\r\n       //Convert the arraylist to array using toArray method\r\n        Object[] list2_2_2 = list2_2.toArray();\r\n    \t //Copy elements from object array to integer array\r\n\t      int[] list2_2_2_2 = new int[list2_2_2.length];\r\n        for (int i=0; i<list2_2_2.length; i++)\r\n\t\t\t       list2_2_2_2[i] = (int)list2_2_2[i];      \r\n       int[] mergedArray = merge(list1_1_1_1, list2_2_2_2);\r\n      System.out.print(\"Merged list: \");\r\n      for (int i=0; i<mergedArray.length; i++)\r\n      {\r\n        System.out.print(mergedArray[i] + \" \");\r\n      }    \r\n    }\r\n//Create java method to merge the elements of 2 linked lists\r\npublic static int[] merge(int[] list1_1_1_1, int[] list2_2_2_2) \r\n    {\r\n//Create an array listmerged of length list1_1_1_1.length+list2_2_2_2.length and arrange the eliments in ascending order\r\n      int[] listmerged = new int[list1_1_1_1.length + list2_2_2_2.length];\r\n      int i = 0, j = 0, k = 0;\r\n      while (i < list1_1_1_1.length && j < list2_2_2_2.length)\r\n      {\r\n          if (list1_1_1_1[i] < list2_2_2_2[j])\r\n          {\r\n              listmerged[k] = list1_1_1_1[i];\r\n              i++;\r\n          }\r\n          else\r\n          {\r\n              listmerged[k] = list2_2_2_2[j];\r\n              j++;\r\n          }\r\n          k++;\r\n      }\r\n      while (i < list1_1_1_1.length)\r\n      {\r\n          listmerged[k] = list1_1_1_1[i];\r\n          i++;\r\n          k++;\r\n      }\r\n      while (j < list2_2_2_2.length)\r\n      {\r\n          listmerged[k] = list2_2_2_2[j];\r\n          j++;\r\n          k++;\r\n      }\r\n      return listmerged;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-207.php"}, {"exercise_number": 208, "exercise_content": "208. Write a Java program to create a basic string compression method using the counts of repeated characters.Input string: aaaabbbbcccccddddeeeeExpected Output:Enter a string (you can include space as well)\r\n aaaabbbbcccccddddeeee\r\nThe compressed string along with the counts of repeated characters is:\r\na4b4c5d4e4", "exercise_solution_code": "import java.util.Scanner; \r\npublic class StringCompression\r\n{\r\n public static void main(String[] args)\r\n {\r\n  StringCompression str = new StringCompression();\r\n  String s1,s2; \r\n  Scanner in = new Scanner(System.in);\r\n  System.out.println(\"Enter a string (you can include space as well)\"); \r\n  s1 = in.nextLine(); \r\n  //Trim all the spaces of the string using replaceAll method\r\n  s2 = s1.replaceAll(\"\\\\s\",\"\");\r\n  str.Compression(s2);\r\n }\r\n \r\n \r\n//Create a Java Method Compression to compress the string\r\npublic static String Compression(String s)\r\n {\r\n  int count = 1;\r\n  StringBuilder sb = new StringBuilder();\r\n\r\n//Below for loop counts all characters of the string apart from the last one\r\n//The last character won't get appended by the class StringBuilder here as it \r\n//does not enter the for loop once the length completes the count\r\n      for (int i = 1; i < s.length()-1 ; i++) \r\n        {\r\n          if (s.charAt(i) == s.charAt(i - 1)) \r\n          {\r\n            count++;\r\n          } \r\n          else \r\n          {\r\n            sb.append(s.charAt(i - 1));\r\n            sb.append(count);\r\n            count = 1;\r\n          }\r\n        }\r\n//Count the last character of the string\r\n      if (s.length() > 1)\r\n        {\r\n        //Compare the last two characters of the string\r\n        if (s.charAt(s.length() - 1) == s.charAt(s.length() - 2))\r\n          {\r\n            count++;\r\n          } \r\n          else \r\n          {\r\n            sb.append(s.charAt(s.length() - 2));\r\n            sb.append(count);\r\n            count = 1;\r\n          }\r\n          sb.append(s.charAt(s.length() - 1));\r\n          sb.append(count);\r\n        }\r\n        s = sb.toString();\r\n        System.out.println(\"The compressed string along with the counts of repeated characters is:\" + \"\\n\" +s);\r\n        return s;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-208.php"}, {"exercise_number": 209, "exercise_content": "209. Write a Java program to find all unique combinations from a collection of candidate numbers. The sum of the numbers will be equal to a given target number.Input number of elements of the array: \n3\nInput number format: 2 3 4 5:Expected Output:Enter elements:\r\n 6 7 8\r\nEnter target sum:\r\n 21\r\nA solution set is:\r\n{ 6 7 8 }", "exercise_solution_code": "import java.util.*;\r\nclass Main {\r\n private static < K, V > void insert(Map < K, List < V >> hashMap, K key, V value) {\r\n  if (!hashMap.containsKey(key)) {\r\n   hashMap.put(key, new ArrayList < > ());\r\n  }\r\n  hashMap.get(key).add(value);\r\n }\r\n public static void Subsets(int[] A, int i, int j) {\r\n  System.out.print(\"{ \");\r\n  for (int k = i; k <= j; k++) {\r\n   System.out.print(A[k] + \" \");\r\n  }\r\n  System.out.println(\"}\");\r\n }\r\n\r\n public static void Subsets(int[] A, int sum) {\r\n  Map < Integer, List < Integer >> hashMap = new HashMap < > ();\r\n  insert(hashMap, 0, -1);\r\n  int sum_so_far = 0;\r\n  for (int index = 0; index < A.length; index++) {\r\n\r\n   sum_so_far += A[index];\r\n   if (hashMap.containsKey(sum_so_far - sum)) {\r\n    List < Integer > list = hashMap.get(sum_so_far - sum);\r\n    for (Integer value: list) {\r\n     Subsets(A, value + 1, index);\r\n    }\r\n   }\r\n   insert(hashMap, sum_so_far, index);\r\n  }\r\n }\r\n\r\n public static void main(String[] args) {\r\n  {\r\n   Scanner s = new Scanner(System.in);\r\n   System.out.println(\"Input number of elements of the array: \");\r\n   int n = s.nextInt();\r\n   System.out.println(\"Input number format: 2 3 4 5: \");\r\n   int arr[] = new int[n];\r\n   System.out.println(\"Enter elements:\");\r\n   for (int i = 0; i < n; i++)\r\n    arr[i] = s.nextInt();\r\n   System.out.println(\"Enter target sum:\");\r\n   int sum = s.nextInt();\r\n   int A[] = new int[arr.length];\r\n   A = Arrays.copyOf(arr, arr.length);\r\n   System.out.println(\"A solution set is:\");\r\n   Subsets(A, sum);\r\n   System.exit(0);\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-209.php"}, {"exercise_number": 210, "exercise_content": "210. Write a Java program to match any single character (use ?) or any sequence of characters use *) including the empty. The matching should cover the entire input string.Expected Output:Enter a string\r\n bb\r\nEnter a pattern\r\n b*\r\nYes", "exercise_solution_code": "import java.util.*;\r\npublic class PatternMatching\r\n{\r\n//Create a java method for wildcard pattern matching\r\nstatic boolean pattern_match(String string, String pattern) \r\n {\r\n  //i measures the length of the string\r\n\tint i = 0;\r\n\t//j measures the length of the pattern\r\n\tint j = 0;\r\n\tint star_index = -1;\r\n\tint i_index = -1;\r\n\t\r\n \twhile (i < string.length()) \r\n\t{\r\n//If ? matches the ith character of the string or if the jth character of the\r\n//pattern matches the ith character of the string. e.g.(a & ?),(ab & ab)\r\n\t\tif (j < pattern.length() && (pattern.charAt(j) == '?' || pattern.charAt(j) == string.charAt(i))) \r\n\t\t{\r\n\t\t\t++i;\r\n\t\t\t++j;\r\n\t\t} \r\n//Counts * characters of the pattern when the count of the string is not\r\n//completed yet. e.g.(a & ***),(abb & ab****)\t\t\r\n\t\telse if (j < pattern.length() && pattern.charAt(j) == '*') \r\n\t\t{\r\n\t\t\tstar_index = j;\t\t\r\n\t\t\ti_index = i;\r\n\t\t\tj++;\r\n\t\t}\r\n//Counts the characters of the string which are left out once a * of the pattern \r\n//gets counted e.g.(xayb & *a*b),(a & ***),(abcd & ab*),(aa & ?**)\r\n\t\telse if (star_index != -1) \r\n\t\t{\r\n\t\t\tj = star_index + 1;\r\n\t\t\ti = i_index+1;\r\n\t\t\ti_index++;\r\n\t\t}\r\n//If the characters of the string and pattern don't match\r\n//e.g.(xy & ab),(abxy & ab)\r\n\t\telse \r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n//Counts the * characters of the pattern when the characters before the * characters\r\n//of the pattern completely match the string and both are of the same length\r\n//(apart from the star characters of the pattern)\r\n//e.g.(ab and ab**),(aa and ??**)\r\n  while (j < pattern.length() && pattern.charAt(j) == '*') \r\n    {\r\n\t\t  ++j;\r\n\t  } \r\n\t return j == pattern.length();\r\n }\r\npublic static void main(String args[]) \r\n { \r\n    String str, pat;\r\n    Scanner in = new Scanner(System. in);\r\n    System.out.println(\"Enter a string\");\r\n    str = in. nextLine();\r\n    System.out.println(\"Enter a pattern\");\r\n    pat = in.nextLine();\r\n    if (pattern_match(str, pat))\r\n          System.out.println(\"Yes\"); \r\n    else\r\n          System.out.println(\"No\");\r\n  }  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-210.php"}, {"exercise_number": 211, "exercise_content": "211. Write a Java program to find heights of the top three building in descending order from eight given buildings.Input:0 \u2264 height of building (integer) \u2264 10,000Expected Output:Input the heights of eight buildings:\r\n 25 19 23 45 18 23 24 19\r\n\r\nHeights of the top three buildings:\r\n45\r\n25\r\n24", "exercise_solution_code": "import java.util.*; \r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int[] t = new int[8];\r\n        System.out.println(\"Input the heights of eight buildings:\");\r\n        for(int i = 0; i < 8; i++){\r\n            t[i] = sc.nextInt();\r\n        }         \r\n        Arrays.sort(t);\r\n        System.out.println(\"\\nHeights of the top three buildings:\"); \r\n        for(int i = 7; i >= 5; i--){\r\n            System.out.println(t[i]);\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-211.php"}, {"exercise_number": 212, "exercise_content": "212. Write a Java program to compute the digit number of sum of two given integers.Input:Each test case consists of two non-negative integers a and b which are separated by a space in a line.\n0 \u2264 a, b \u2264 1,000,000Expected Output:Input two integers(a b):\r\n 13 25\r\nDigit number of sum of said two integers:\r\n2", "exercise_solution_code": "import java.util.*;\r\npublic class Main \r\n{\r\n    public static void main(String[] args) \r\n    {\t\t\r\n        System.out.println(\"Input two integers(a b):\");\r\n        Scanner stdIn = new Scanner(System.in);\r\n            int a = stdIn.nextInt();\r\n            int b = stdIn.nextInt();\r\n            int sum = a + b;\r\n            int count = 0;\r\n            while(sum != 0)\r\n            {\r\n                sum /= 10;\r\n                ++count;\r\n            }\r\n            System.out.println(\"Digit number of sum of said two integers:\");\r\n            System.out.println(count);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-212.php"}, {"exercise_number": 213, "exercise_content": "213. Write a Java program to check whether three given lengths (integers) of three sides form a right triangle. Print \"Yes\" if the given sides form a right triangle otherwise print \"No\".Input:Each test case consists of two non-negative integers a and b which are separated by a space in a line.\n0 \u2264 a, b \u2264 1,000,000Expected Output:Input three integers(sides of a triangle)\r\n 6 9 12\r\nIf the given sides form a right triangle?\r\nNo", "exercise_solution_code": "import java.util.Arrays;\r\nimport java.util.Comparator;\r\nimport java.util.Scanner; \r\nclass Main {\r\n    Scanner sc = new Scanner(System.in);\r\n    public void run() {\r\n\t\tSystem.out.println(\"Input three integers(sides of a triangle)\");\r\n        int[] int_num = new int[]{\r\n               sc.nextInt(),sc.nextInt(),sc.nextInt()\r\n            };\r\n            Arrays.sort(int_num);\r\n\t\t\tSystem.out.println(\"If the given sides form a right triangle?\"); \r\n            ln((int_num[2]*int_num[2]==int_num[0]*int_num[0]+int_num[1]*int_num[1])?\"Yes\":\"No\");        \r\n    } \r\n    public static void main(String[] args) {\r\n        new Main().run();\r\n    } \r\n    public static void pr(Object o) {\r\n        System.out.print(o);\r\n    } \r\n    public static void ln(Object o) {\r\n        System.out.println(o);\r\n    } \r\n    public static void ln() {\r\n        System.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-213.php"}, {"exercise_number": 214, "exercise_content": "214. Write a Java program which solve the equation: \nax+by=c\ndx+ey=f\nPrint the values of x, y where a, b, c, d, e and f are given.Input:a,b,c,d,e,f separated by a single space.\n(-1,000 \u2264 a,b,c,d,e,f \u2264 1,000)Expected Output:Input the value of a, b, c, d, e, f:\r\n 5 6 8 9 7 4\r\n-1.684 2.737", "exercise_solution_code": "import java.math.BigDecimal;\r\nimport java.util.*;\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        ArrayDeque<Double> x = new ArrayDeque<Double>();\r\n        ArrayDeque<Double> y = new ArrayDeque<Double>();\r\n        System.out.println(\"Input the value of a, b, c, d, e, f:\");\r\n            int a = sc.nextInt();\r\n            int b = sc.nextInt();\r\n            int c = sc.nextInt();\r\n            int d = sc.nextInt();\r\n            int e = sc.nextInt();\r\n            int f = sc.nextInt();             \r\n            double t = (double)(d*c-a*f)/(d*b-a*e);\r\n            double s = (double)(c-t*b)/a;\r\n            x.push(s);\r\n            y.push(t);       \r\n        int num = x.size();\r\n        for(int i=0;i<num;i++){\r\n            BigDecimal bdx = new BigDecimal(x.pollLast());\r\n            BigDecimal bdy = new BigDecimal(y.pollLast()); \r\n            BigDecimal ansx = bdx.setScale(4, BigDecimal.ROUND_HALF_UP);\r\n            BigDecimal ansy = bdy.setScale(4, BigDecimal.ROUND_HALF_UP);             \r\n            System.out.printf(\"%.3f\", ansx.doubleValue());\r\n            System.out.print(\" \");\r\n            System.out.printf(\"%.3f\", ansy.doubleValue());\r\n            System.out.println();\r\n        }         \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-214.php"}, {"exercise_number": 215, "exercise_content": "215. Write a Java program to compute the amount of the debt in n months. The borrowing amount is $100,000 and the loan adds 4% interest of the debt and rounds it to the nearest 1,000 above month by month.Input:An integer n (0 \u2264 n \u2264 100)Expected Output:Input number of months:\r\n 6\r\n\r\nAmount of debt: \r\n129000", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main { \r\n    public static void main(String[] args) {\r\n   Scanner s = new Scanner(System.in);\r\n   System.out.println(\"Input number of months:\");\r\n        int n = s.nextInt();\r\n        double c = 100000;\r\n        for(int i = 0; i < n; i++) {\r\n            c += c*0.04;\r\n            if(c % 1000 != 0) {\r\n                c -= c % 1000;\r\n                c += 1000;\r\n            }             \r\n        }\r\n       System.out.println(\"\\nAmount of debt: \");\r\n        System.out.printf(\"%.0f\\n\",c);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-215.php"}, {"exercise_number": 216, "exercise_content": "216. Write a Java program which reads an integer n and find the number of combinations of a,b,c and d (0 \u2264 a,b,c,d \u2264 9) where (a + b + c + d) will be equal to n.Input:a,b,c,d,e,f separated by a single space.\n(-1,000 \u2264 a,b,c,d,e,f \u2264 1,000)Expected Output:Input the number(n):\r\n 5 \r\nNumber of combinations of a, b, c and d :\r\n56", "exercise_solution_code": " import java.util.Scanner;\r\npublic class Main {\r\n \r\n    public static void main(String[] args) {\r\n\t\tSystem.out.println(\"Input the number(n):\");\r\n        Scanner s = new Scanner(System.in);\r\n        int c = s.nextInt();\r\n        int ans = check(c);\r\n\t\tSystem.out.println(\"Number of combinations of a, b, c and d :\");\r\n        System.out.println(ans);\r\n    }\r\n    static int check(int c) {\r\n        int ctr = 0;\r\n        for(int i = 0; i < 10; i++) {\r\n            for(int j = 0; j < 10; j++) {\r\n                for(int k = 0; k < 10; k++) {\r\n                    for(int l = 0; l < 10; l++) {\r\n                        if(i + j + k + l == c) {\r\n                            ctr++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ctr;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-216.php"}, {"exercise_number": 217, "exercise_content": "217. Write a Java program to print the number of prime numbers which are less than or equal to a given integer.Input:n (1 \u2264 n \u2264 999,999)Expected Output:Input the number(n):\r\n 1235\r\nNumber of prime numbers which are less than or equal to n.:\r\n202", "exercise_solution_code": " import java.util.Scanner;\r\npublic class Main {\r\n \r\n    public static void main(String[] args) {\r\n        System.out.println(\"Input the number(n):\");\r\n\t\tScanner s = new Scanner(System.in);\r\n            int c = s.nextInt();\r\n            int ans = check(c);\r\n\t\t\tSystem.out.println(\"Number of prime numbers which are less than or equal to n.:\");\r\n            System.out.println(ans);\r\n       }\r\n    static int check(int c) {\r\n        boolean[] prime = new boolean[c+1];\r\n        int count = 0;\r\n        for(int i = 2; i <= Math.sqrt(c); i++) {\r\n            for(int j = i + i; j <= c; j += i) {\r\n                prime[j] = true;\r\n            }\r\n        }\r\n        for(int i = 2; i <= c; i++) {\r\n            if(!prime[i]) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-217.php"}, {"exercise_number": 218, "exercise_content": "218. Write a Java program to compute the radius and the central coordinate (x, y) of a circle which is constructed by three given points on the plane surface.Input:x1, y1, x2, y2, x3, y3 separated by a single space.Expected Output:Input x1, y1, x2, y2, x3, y3 separated by a single space:\r\n 5 6 4 8 7 9\r\n\r\nRadius and the central coordinate:\r\n1.821 (5.786 7.643)", "exercise_solution_code": " import java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.BufferedReader;\r\n \r\nclass Main {\r\n    public static void main(String[] args) throws IOException {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n            System.out.println(\"Input x1, y1, x2, y2, x3, y3 separated by a single space:\"); \r\n\r\n\t\t\tString[] input = br.readLine().split(\" \");\r\n \r\n            double x1 = Double.parseDouble(input[0]);\r\n            double y1 = Double.parseDouble(input[1]);\r\n            double x2 = Double.parseDouble(input[2]);\r\n            double y2 = Double.parseDouble(input[3]);\r\n            double x3 = Double.parseDouble(input[4]);\r\n            double y3 = Double.parseDouble(input[5]);\r\n \r\n            double A = x2 - x1;\r\n            double B = y2 - y1;\r\n            double p = (y2 * y2 - y1 * y1 + x2 * x2 - x1 * x1) / 2;\r\n            double C = x3 - x1;\r\n            double D = y3 - y1;\r\n            double q = (y3 * y3 - y1 * y1 + x3 * x3 - x1 * x1) / 2;\r\n \r\n            double X = (D * p - B * q) / (A * D - B * C);\r\n            double Y = (A * q - C * p) / (A * D - B * C);\r\n \r\n            double r = Math.sqrt(Math.pow(X - x1, 2.0) + Math.pow(Y - y1, 2.0));\r\n            System.out.println(\"\\nRadius and the central coordinate:\"); \r\n            System.out.printf(\"%.3f (%.3f %.3f)\", r, X, Y);        \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-218.php"}, {"exercise_number": 219, "exercise_content": "219. Write a Java program to check if a point (x, y) is in a triangle or not. There is a triangle formed by three points.Input:x1, y1, x2, y2, x3, y3 separated by a single space.Expected Output:Input (x1, y1)\r\n2\r\n6\r\nInput (x2, y2)\r\n3\r\n5\r\nInput (x3, y3)\r\n4\r\n6\r\nInput (xp, yp)\r\n5\r\n6\r\nThe point is outside the triangle.", "exercise_solution_code": "import java.util.*;\r\npublic class Main { \r\n    private double outer_product(double x, double y, double x1, double y1, double x2, double y2){\r\n        x1 = x1 - x;\r\n        y1 = y1 - y;\r\n        x2 = x2 - x;\r\n        y2 = y2 - y;\r\n        double s = x1 * y2 - y1 * x2;\r\n        return s;\r\n    } \r\n    public void point(){\r\n        Scanner sc = new Scanner(System.in);\r\n            double [] x = new double[3];\r\n            double [] y = new double[3];\r\n\t\t\tSystem.out.println(\"Input (x1, y1)\");            \r\n                x[0] = sc.nextDouble();\r\n                y[0] = sc.nextDouble();\r\n\t\t\tSystem.out.println(\"Input (x2, y2)\");            \r\n                x[1] = sc.nextDouble();\r\n                y[1] = sc.nextDouble();\r\n\t\t\tSystem.out.println(\"Input (x3, y3)\");            \r\n                x[2] = sc.nextDouble();\r\n                y[2] = sc.nextDouble();\r\n\t\t\tSystem.out.println(\"Input (xp, yp)\");            \r\n                           \r\n            double xp = sc.nextDouble();\r\n            double yp = sc.nextDouble();\r\n            boolean [] ans = new boolean[3];\r\n            for(int i=0; i < 3; i++){\r\n                ans[i] = outer_product(xp, yp, x[i], y[i], x[(i+1)%3], y[(i+1)%3]) > 0.0;\r\n            }\r\n            if(ans[0] == ans[1] && ans[1] == ans[2]){\r\n                \r\n            }\r\n            else{\r\n                System.out.println(\"The point is outside the triangle.\");\r\n            }\r\n      }\r\n    public static void main(String[] args) {\r\n        Main obj = new Main();\r\n        obj.point();\r\n    }\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-219.php"}, {"exercise_number": 220, "exercise_content": "220. Write a Java program to compute and print sum of two given integers (more than or equal to zero). If given integers or the sum have more than 80 digits, print \"overflow\".Input:Expected Output:Input two integers:\r\n25\r\n46\r\n\r\nSum of the said two integers:\r\n71", "exercise_solution_code": " import java.*;\r\nimport java.math.BigInteger;\r\nimport java.util.Scanner;\r\n \r\npublic class Main {\r\n    public static void main(String args[]) {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"Input two integers:\");\r\n        String s1 = new String();\r\n\t\tString s2 = new String();\r\n        s1 = sc.nextLine();\r\n        s2 = sc.nextLine();\r\n        BigInteger b1 = new BigInteger(s1);\r\n        BigInteger b2 = new BigInteger(s2);\r\n        BigInteger result = new BigInteger(\"0\");\r\n        result = result.add(b1);\r\n        result = result.add(b2);\r\n        String s3 = \"\"+result;\r\n\t\tSystem.out.println(\"\\nSum of the said two integers:\");\r\n        if(s1.length()>80 || s2.length()>80 || s3.length()>80)\r\n            System.out.println(\"Overflow\");\r\n        else\r\n            System.out.println(result);\r\n          }    \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-220.php"}, {"exercise_number": 221, "exercise_content": "221. Write a Java program that accepts six numbers as input and sorts them in descending order.Input:Input consists of six numbers n1, n2, n3, n4, n5, n6 (-100000 \u2264 n1, n2, n3, n4, n5, n6 \u2264 100000). The six numbers are separated by a space.Expected Output:Input six integers:\r\n 4 6 8 2 7 9\r\nAfter sorting the said integers:\r\n9 8 7 6 4 2", "exercise_solution_code": " import java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.BufferedReader;\r\n \r\npublic class Main{\r\n    public static void main(String[] args) throws IOException {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        System.out.println(\"Input six integers:\");\r\n        String[] input = br.readLine().split(\" \", 6);\r\n        int[] data = new int[6];\r\n \r\n        for (int i = 0; i < 6; i++) {\r\n            data[i] = Integer.parseInt(input[i]);\r\n        }\r\n \r\n        for (int j = 0; j < 5; j++) {\r\n            for (int i = 5; i > j; i--) {\r\n                if (data[i - 1] < data[i]) {\r\n                    int swp = data[i];\r\n                    data[i] = data[i - 1];\r\n                    data[i - 1] = swp;\r\n                }\r\n            }\r\n        }\r\n        StringBuilder sb = new StringBuilder(); \r\n        for (int i : data) {\r\n            sb.append(i);\r\n            sb.append(\" \");\r\n        }\r\n        System.out.println(\"After sorting the said integers:\");\r\n        System.out.println(sb.substring(0 , sb.length()-1));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-221.php"}, {"exercise_number": 222, "exercise_content": "222. Write a Java program to test whether two lines PQ and RS are parallel. The four points are P(x1, y1), Q(x2, y2), R(x3, y3), S(x4, y4).Input:\u2212100 \u2264 x1, y1, x2, y2, x3, y3, x4, y4 \u2264 100\nEach value is a real number with at most 5 digits after the decimal point.Expected Output:Input P(x1,y1),separated by a space.\r\n 5 6\r\nInput Q(x2,y2),separated by a space.\r\n 4 2\r\nInput R(x3,y3),separated by a space.\r\n 5 3\r\nInput S(x4,y4),separated by a space.\r\n 5 6\r\nTwo lines are not parallel.", "exercise_solution_code": " import java.util.*;\r\n \r\nclass Main {\r\n     \r\n    public static void main(String args[]){\r\n        Scanner in = new Scanner(System.in);\r\n\t\tSystem.out.println(\"Input P(x1,y1),separated by a space.\");\r\n        double x1 = in.nextDouble(), y1 = in.nextDouble();\r\n\t\tSystem.out.println(\"Input Q(x2,y2),separated by a space.\");\r\n        double x2 = in.nextDouble(), y2 = in.nextDouble();\r\n\t\tSystem.out.println(\"Input R(x3,y3),separated by a space.\");\r\n        double x3 = in.nextDouble(), y3 = in.nextDouble();\r\n\t\tSystem.out.println(\"Input S(x4,y4),separated by a space.\");\r\n        double x4 = in.nextDouble(), y4 = in.nextDouble();\r\n        double p1 = x2 - x1, p2 = y2 - y1, q1 = x4 - x3, q2 = y4 - y3,\r\n        r1 = x3 - x1, r2 = y3 - y1, s1 = x4 - x1, s2 = y4 - y1;\r\n        if(Math.abs(p1*q2 - p2*q1)<1e-9)\r\n           System.out.println(\"Two lines are parallel.\");\r\n        else\r\n           System.out.println(\"Two lines are not parallel.\");\r\n     }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-222.php"}, {"exercise_number": 223, "exercise_content": "223. Write a Java program to find the maximum sum of a contiguous subsequence from a given sequence of numbers a1, a2, a3, ... an. A subsequence of one element is also a continuous subsequence.Input:You can assume that 1 \u2264 n \u2264 5000 and -100000 \u2264 ai \u2264 100000.\nInput numbers are separated by a space.\nInput 0 to exit.Expected Output:How many integers would you like to input?\r\n 5\r\nInput the integers:\r\n 25 61 35 42 66\r\nMaximum sum of the said contiguous subsequence:\r\n229", "exercise_solution_code": " import java.util.*;\r\npublic class Main {\r\n\tpublic static void main(String [] args) {\r\n\t\tScanner s = new Scanner(System.in);\r\n\t\tSystem.out.println(\"How many integers would you like to input?\");\r\n\t\t    int n = s.nextInt();\r\n\t\t\tint ans = -100000;\r\n\t\t\tint acc = 0;\r\n\t\t\tSystem.out.println(\"Input the integers:\");\r\n\t\t\tfor (int i=0;i<n;i++) {\r\n\t\t\t\tacc += s.nextInt();\r\n\t\t\t\tans = Math.max(ans, acc);\r\n\t\t\t\tif (acc < 0) acc = 0;\r\n\t\t\t}\r\n\t\t\tSystem.out.println(\"Maximum sum of the said contiguous subsequence:\");\r\n\t\t\tSystem.out.println(ans);\r\n\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-223.php"}, {"exercise_number": 224, "exercise_content": "224. There are two circles C1 with radius r1, central coordinate (x1, y1) and C2 with radius r2 and central coordinate (x2, y2) \nWrite a Java program to test the followings -\n\"C2 is in C1\" if C2 is in C1\n\"C1 is in C2\" if C1 is in C2\n\"Circumference of C1 and C2 intersect\" if circumference of C1 and C2 intersect, and\n\"C1 and C2 do not overlap\" if C1 and C2 do not overlap.Input:Input numbers (real numbers) are separated by a space.Expected Output:Input x1, y1, r1: (numbers are separated by a space)\r\n 5 6 8 7\r\nInput x2, y2, r2: (numbers are separated by a space)\r\n 8 9 5 4\r\nC1 and C2  do not overlap", "exercise_solution_code": " import java.util.Scanner;\r\npublic class Main\r\n{\r\n\tpublic static void main(String arg[])\r\n\t{\r\n\t\tScanner in=new Scanner(System.in);\r\n\t\t    System.out.println(\"Input x1, y1, r1: (numbers are separated by a space)\");\r\n\t\t\tdouble x1 = in.nextDouble(),y1=in.nextDouble(),r1=in.nextDouble();\r\n\t\t\tSystem.out.println(\"Input x2, y2, r2: (numbers are separated by a space)\");\r\n\t\t\tdouble x2 = in.nextDouble(),y2=in.nextDouble(),r2=in.nextDouble();\r\n\t\t\tdouble l = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\r\n\t\t\tif(l>r1+r2)\r\n\t\t\t\tSystem.out.println(\"Circumference of C1  and C2  intersect\");\r\n\t\t\telse if(r1>l+r2)\r\n\t\t\t\tSystem.out.println(\"C2  is in C1\");\r\n\t\t\telse if(r2>l+r1)\r\n\t\t\t\tSystem.out.println(\"C1  is in C2\");\r\n\t\t\telse\r\n\t\t\t\tSystem.out.println(\"C1 and C2  do not overlap\");\r\n\t\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-224.php"}, {"exercise_number": 225, "exercise_content": "225. Write a Java program to that reads a date (from 2004/1/1 to 2004/12/31) and prints the day of the date. Jan. 1, 2004, is Thursday. Note that 2004 is a leap year.Expected Output:Input the month(1-12)\r\n 9\r\nInput date (1-31)\r\n 15\r\nName of the date: \r\nWednesday", "exercise_solution_code": "import java.util.*;\r\n \r\nclass Main {\r\n \r\n    static int days[] = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\r\n    static String name[] = {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};\r\n \r\n    public static void main(String args[]){\r\n        Scanner in = new Scanner(System.in);\r\n\t\tSystem.out.println(\"Input month and date(o o to exit)\");\r\n\t\t\r\n        for(;;){\r\n            int m=in.nextInt(), d=in.nextInt();\r\n            if(m==0&&d==0) break;\r\n            System.out.println(solve(m,d));\r\n        }\r\n    }\r\n \r\n    static String solve(int month, int date){\r\n        int cur = 3;\r\n\t\tSystem.out.println(\"Name of the day:\");\r\n        for(int i=0; i<month-1; i++) cur += days[i];\r\n        cur += date-1;\r\n        return name[cur%7];\r\n    }\r\n \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-225.php"}, {"exercise_number": 226, "exercise_content": "226. Write a Java program to print mode values from a given a sequence of integers. The mode value is the element which occurs most frequently. If there are several mode values, print them in ascending order.Input:A sequence of integer\u2019s ai (1 \u2264 ai \u2264 100). The number of integers is less than or equals to 100.Expected Output:How many integers would you like to input(Max.100?)\r\n5\r\nInput the integers:\r\n25\r\n35\r\n15\r\n5\r\n45\r\nMode value(s)in ascending order:\r\n5\r\n15\r\n25\r\n35\r\n45", "exercise_solution_code": "import java.util.Scanner;\r\n public class Main {\r\n    public static void main(String[] args){\r\n        Scanner input = new Scanner(System.in);\r\n        int cnt[] = new int[100];\r\n\t\tint i;\r\n        System.out.println(\"How many integers would you like to input(Max.100?)\");\r\n\t\tint x = input.nextInt();\r\n        System.out.println(\"Input the integers:\");\r\n        for (i = 0; i <x; i++){ \r\n         int n = input.nextInt();\r\n            cnt[--n]++;\t\r\n\t\t}\r\n\t\t \r\n        int max = 0;\r\n        for (int n : cnt){\r\n            if (max < n){\r\n                max = n;\r\n            }\r\n        }\r\n         System.out.println(\"Mode value(s)in ascending order:\");\r\n        for (i = 0; i < cnt.length; i++){\r\n            if (cnt[i] == max){\r\n                System.out.println(i + 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-226.php"}, {"exercise_number": 227, "exercise_content": "227. Write a Java program which reads a text (only alphabetical characters and spaces.) and prints two words. The first one is the word which is arise most frequently in the text. The second one is the word which has the maximum number of letters. \nNote: A word is a sequence of letters which is separated by the spaces.Input:A sequence of integer\u2019s ai (1 \u2264 ai \u2264 100). The number of integers is less than or equals to 100.Expected Output:Thank you for your comment and your participation.\r\nInput a text in a line:\r\nMost frequent text and the word which has the maximum number of letters:\r\nyour participation.", "exercise_solution_code": "import java.util.Scanner;\r\nclass Main\r\n{\r\n    public static void main(String args[])\r\n    {\r\n        Scanner sc = new Scanner(System.in);\r\n         \r\n        String strs[] = sc.nextLine().split(\" \");\r\n        int max_Length = 0;\r\n        int indexL = 0;\r\n        int max_Frequency = 0;\r\n        int indexF = 0;\r\n        System.out.println(\"Input a text in a line:\");\r\n        for (int i = 0; i < strs.length; i++)\r\n        {\r\n            if (max_Length < strs[i].length())\r\n            {\r\n                indexL = i;\r\n                max_Length = strs[i].length();\r\n            }\r\n            int ctr = 0;\r\n            for (int j = i; j < strs.length; j++)\r\n            {\r\n                if (strs[i].equals(strs[j]))\r\n                {\r\n                    ctr++;\r\n                }\r\n            }\r\n            if (max_Frequency < ctr)\r\n            {\r\n                indexF = i;\r\n                max_Frequency = ctr;\r\n            }\r\n        }\r\n\t\tSystem.out.println(\"Most frequent text and the word which has the maximum number of letters:\");\r\n        System.out.println(strs[indexF] + \" \" + strs[indexL]);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-227.php"}, {"exercise_number": 228, "exercise_content": "228. Write a Java program that reads n digits (given) chosen from 0 to 9 and prints the number of combinations where the sum of the digits equals to another given number (s). Do not use the same digits in a combination. \nFor example, the combinations where n = 3 and s = 6 are as follows:\n1 + 2 + 3 = 6\n0 + 1 + 5 = 6\n0 + 2 + 4 = 6Input:Two integers as number of combinations and their sum by a single space in a line. Input 0 0 to exit.Expected Output:Input number of combinations and sum (separated by a space in a line):\r\n3 6\r\nNumber of combinations:\r\n3", "exercise_solution_code": " import java.util.*;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n         Scanner stdIn = new Scanner(System.in);\r\n\t\t System.out.println(\"Input number of combinations and sum (separated by a space in a line):\"); \r\n         int n = stdIn.nextInt();\r\n         int s = stdIn.nextInt();\r\n         int c1 = comnum(0, n, s,0);\r\n\t\t System.out.println(\"Number of combinations:\");\r\n         System.out.println(c1);\r\n    }\r\n    public static int comnum(int i, int n, int s,int p) {\r\n        if(s == p && n == 0) {\r\n            return 1;\r\n        }\r\n        if(i >= 10) {\r\n            return 0;\r\n        }\r\n        if(n < 0) {\r\n            return 0;\r\n        }\r\n \r\n        if(p > s) {\r\n            return 0;\r\n        }\r\n        int c1 = comnum(i+1,n-1,s,p+i);\r\n        int c2 = comnum(i+1,n,s,p);\r\n        return c1+c2;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-228.php"}, {"exercise_number": 229, "exercise_content": "229. Write a Java program which reads the two adjoined sides and the diagonal of a parallelogram and check whether the parallelogram is a rectangle or a rhombus. \nAccording to Wikipedia-\nparallelograms: In Euclidean geometry, a parallelogram is a simple (non-self-intersecting) quadrilateral with two pairs of parallel sides. The opposite or facing sides of a parallelogram are of equal length and the opposite angles of a parallelogram are of equal measure.\nrectangles: In Euclidean plane geometry, a rectangle is a quadrilateral with four right angles. It can also be defined as an equiangular quadrilateral, since equiangular means that all of its angles are equal (360\u00b0/4 = 90\u00b0). It can also be defined as a parallelogram containing a right angle.\nrhombus: In plane Euclidean geometry, a rhombus (plural rhombi or rhombuses) is a simple (non-self-intersecting) quadrilateral whose four sides all have the same length. Another name is equilateral quadrilateral, since equilateral means that all of its sides are equal in length. The rhombus is often called a diamond, after the diamonds suit in playing cards which resembles the projection of an octahedral diamond, or a lozenge, though the former sometimes refers specifically to a rhombus with a 60\u00b0 angle (see Polyiamond), and the latter sometimes refers specifically to a rhombus with a 45\u00b0 angle.Input:Two adjoined sides and the diagonal.\n1 \u2264 ai, bi, ci \u2264 1000, ai + bi > ciExpected Output:Input two adjoined sides and the diagonal of a parallelogram (comma separated):\r\n8,8,8\r\nThis is a rhombus.", "exercise_solution_code": " import java.util.*;\r\npublic class Main {\r\n \tpublic static void main(String[] args){\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint count_1 = 0,count_2 = 0;\t\t\r\n\t\tSystem.out.println(\"Input two adjoined sides and the diagonal of a parallelogram (comma separated):\");\r\n\t\tString[] s = sc.nextLine().split(\",\");\r\n\t\tint len1 = Integer.parseInt(s[0]);\r\n\t\tint len2 = Integer.parseInt(s[1]);\r\n\t\tint len3 = Integer.parseInt(s[2]);\r\n\t\tif(len3*len3 == len1*len1 + len2*len2) count_1++;\r\n\t\tif(len1 == len2) count_2++;\t\t\r\n\t\tif(count_1>0)\r\n        System.out.println(\"This is a rectangle.\");\r\n        if(count_2>0)\r\n        System.out.println(\"This is a rhombus.\");\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-229.php"}, {"exercise_number": 230, "exercise_content": "230. Write a Java program to replace a string \"python\" with \"java\" and \"java\" with \"python\" in a given string.Input:English letters (including single byte alphanumeric characters, blanks, symbols) are given on one line. The length of the input character string is 1000 or less.\nOutput: \nExchanged character string of python and java on one line.Expected Output:Input the string:\r\npython is more propular than java\r\nNew string:\r\njava is more propular than python", "exercise_solution_code": " import java.io.IOException;\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\n \r\nclass Main {\r\n    public static void main(String[] args) throws IOException {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        System.out.println(\"Input the string:\");\r\n        String str1 = br.readLine();\r\n \r\n        str1 = str1.replaceAll(\"java\", \"py_thon\");\r\n        str1 = str1.replaceAll(\"python\", \"java\");\r\n        str1 = str1.replaceAll(\"py_thon\", \"python\");\r\n        System.out.println(\"New string:\");\r\n        System.out.println(str1);\r\n    }\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-230.php"}, {"exercise_number": 231, "exercise_content": "231. Write a Java program to find the difference between the largest integer and the smallest integer which are created by 8 numbers from 0 to 9. The number that can be rearranged shall start with 0 as in 00135668.Input:Data is a sequence of 8 numbers (numbers from 0 to 9).\nOutput:\nThe difference between the largest integer and the smallest integer.Sample Output:Input an integer created by 8 numbers from 0 to 9:\r\n567894321\r\nDifference between the largest and the smallest integer from the given integer:\r\n75308643", "exercise_solution_code": " import java.util.*; \r\npublic class Main {     \r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);         \r\n\t\tSystem.out.println(\"Input an integer created by 8 numbers from 0 to 9:\");\r\n        String s = sc.next();\r\n        int[] num = new int[8];\r\n        for(int i=0;i<8;i++){\r\n               num[i] = Integer.valueOf(s.substring(i,i+1));\r\n            }\r\n        Arrays.sort(num);\r\n        int a = 0;\r\n        int b = 0;\r\n        int c = 1;\r\n        for(int i=0;i<8;i++){\r\n            a += num[i]*c;\r\n            b += num[7-i]*c;\r\n            c *= 10;\r\n           }\r\n\t\tSystem.out.println(\"Difference between the largest and the smallest integer from the given integer:\");   \r\n        System.out.println(a-b);                 \r\n    }   \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-231.php"}, {"exercise_number": 232, "exercise_content": "232. Write a Java program to compute the sum of first n given prime numbers.Input:n ( n \u2264 10000). Input 0 to exit the program.Sample Output:Input a number (n<=10000) to compute the sum:\r\n100\r\nSum of first 100 prime numbers:\r\n24133", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n \r\n        public static void main(String[] args) throws java.io.IOException{\r\n            Scanner scan = new Scanner(System.in);\r\n                int count=0;\r\n                int sum=0;\r\n\tSystem.out.println(\"Input a number (n<=10000) to compute the sum:\");\r\n\tint n=scan.nextInt();\r\n                for(int i=2;;i++){\r\n                    if(prime(i)){\r\n                        count++;\r\n                        sum+=i;\r\n\t if(count==n)break;\r\n\t    }\r\n\t         } \r\n\tSystem.out.println(\"Sum of first \"+n+\" prime numbers:\"); \r\n                System.out.println(sum);\r\n\t}\t\t\t\t\r\n         public static boolean prime (int n){\r\n                if(n==1)return false;\r\n                for(int i=2;i<=Math.sqrt(n);i++)\r\n                    if(n%i==0)return false;\r\n                return true;\r\n            }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-232.php"}, {"exercise_number": 233, "exercise_content": "233. Write a Java program that accept a even number (n should be greater than or equal to 4 and less than or equal to 50,000, Goldbach number) from the user and create a combinations that express the given number as a sum of two prime numbers. Print the number of combinations.Goldbach number: A Goldbach number is a positive even integer that can be expressed as the sum of two odd primes.[4] Since four is the only even number greater than two that requires the even prime 2 in order to be written as the sum of two primes, another form of the statement of Goldbach's conjecture is that all even integers greater than 4 are Goldbach numbers.\nThe expression of a given even number as a sum of two primes is called a Goldbach partition of that number. The following are examples of Goldbach partitions for some even numbers:\n6 = 3 + 3\n8 = 3 + 5\n10 = 3 + 7 = 5 + 5\n12 = 7 + 5\n...\n100 = 3 + 97 = 11 + 89 = 17 + 83 = 29 + 71 = 41 + 59 = 47 + 53Sample Output:Input an even number: 100\r\n\r\nNumber of combinations: 6", "exercise_solution_code": " import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n \r\npublic class Main {\r\n \r\n    public static void main(String[] args) throws NumberFormatException,IOException {\r\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\r\n        StringBuilder builder = new StringBuilder();\r\n        int max = 50000;\r\n        System.out.print(\"Input an even number: \"); \r\n        boolean[] primes = new boolean[max + 1];\r\n        int count = 1;\r\n        for (int i = 3; i <= max; i += 2) {\r\n            if (!primes[i]) {\r\n                count++;\r\n                if (i <= Math.sqrt(max)) {\r\n                    for (int j = i; j <= max / i; j += 2) {\r\n                        primes[(int) (i * j)] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        int[] prime = new int[count];\r\n        prime[0] = 2;\r\n        int count2 = 1;\r\n        for (int i = 3; i <= max; i += 2) {\r\n            if (!primes[i]) {\r\n                prime[count2] = i;\r\n                count2++;\r\n            }\r\n        }\r\n        int[] g = new int[max + 1];\r\n        for (int i = 0; i <= prime.length; i++) {\r\n            for (int j = i; j < prime.length && prime[i] + prime[j] <= max; j++) {\r\n                g[prime[i] + prime[j]]++;\r\n            }\r\n        }\r\n \r\n           int n = Integer.parseInt(reader.readLine());\r\n           builder.append(g[n]).append('\\n');\r\n\t\t   System.out.print(\"\\nNumber of combinations: \"); \r\n           System.out.print(builder);\r\n \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-233.php"}, {"exercise_number": 234, "exercise_content": "234. If you draw a straight line on a plane, the plane is divided into two regions. For example, if you pull two straight lines in parallel, you get three areas, and if you draw vertically one to the other you get 4 areas.Write a Java program to create maximum number of regions obtained by drawing n given straight lines.\nInput:\nxp,yp, xq, yq, xr, yr, xs and ys are -100 to 100 respectively and each value can be up to 5 digits after the decimal point It is given as a real number including the number of.\nOutput: Yes or No.Sample Output:Input number of straight lines:\r\n5\r\nNumber of regions:\r\n16", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Main { \r\n    public static void main(String[] args){ \r\n        Scanner scan = new Scanner(System.in);\r\n\t\tSystem.out.println(\"Input number of straight lines:\");\r\n     \tint n=scan.nextInt();\r\n\t\tSystem.out.println(\"Number of regions:\");\r\n        System.out.println((n * (n + 1) >> 1) + 1);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-234.php"}, {"exercise_number": 235, "exercise_content": "235. There are four different points on a plane, P(xp,yp), Q(xq, yq), R(xr, yr) and S(xs, ys). Write a Java program to test whether AB and CD are orthogonal or not. \nWrite a Java program to create maximum number of regions obtained by drawing n given straight lines.Input:xp,yp, xq, yq, xr, yr, xs and ys are -100 to 100 respectively and each value can be up to 5 digits after the decimal point It is given as a real number including the number of.Output: Yes or No.Sample Output:Input xp, yp, xq, yq, xr, yr, xs, ys:\r\n3.5 4.5 2.5 -1.5 3.5 1.0 0.0 4.5\r\nTwo lines are not orthogonal.", "exercise_solution_code": " import java.util.*;\r\nimport static java.lang.Math.*;\r\n\r\nclass Main{\r\n  public static void main(String args[]){\r\n\t  System.out.println(\"Input xp, yp, xq, yq, xr, yr, xs, ys:\");\r\n      Scanner scan = new Scanner(System.in);\r\n      double x[] = new double[4];\r\n      double y[] = new double[4];\r\n      for(int i=0;i<4;i++){\r\n        x[i] = scan.nextDouble();\r\n        y[i] = scan.nextDouble();\r\n      }\r\n      double a = (x[0] - x[1]) * (x[2] - x[3]);\r\n      double b = (y[0] - y[1]) * (y[2] - y[3]);\r\n      if((float)a + (float)b == 0) \r\n\t\t  System.out.println(\"Two lines are orthogonal.\");\r\n      else \r\n\t\t  System.out.println(\"Two lines are not orthogonal.\");\r\n    }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-235.php"}, {"exercise_number": 236, "exercise_content": "236. Write a Java program to sum of all numerical values (positive integers) embedded in a sentence.Input:\nSentences with positive integers are given over multiple lines. Each line is a character string containing one-byte alphanumeric characters, symbols, spaces, or an empty line. However the input is 80 characters or less per line and the sum is 10,000 or less.Sample Output:Input some text and numeric values:\r\n5 apple and 10 orange are rotten in the basket\r\n\r\nSum of the numeric values:\r\n15", "exercise_solution_code": " import java.util.Scanner;\r\npublic class Main\r\n{\r\n    public static void main(String arg[])\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        int count =0;\r\n        String tmp = \"0\";\r\n\t\tSystem.out.println(\"Input some text and numeric values:\"); \r\n        char ch[]=in.nextLine().toCharArray();\r\n        for(int i=0; i<ch.length; i++)\r\n          {\r\n           while(i<ch.length&&(Character.isDigit(ch[i])))\r\n            {\r\n                tmp+=ch[i];\r\n                i++;\r\n             }\r\n           count+=Integer.valueOf(tmp);\r\n           tmp=\"0\";\r\n            }   \r\n\t\tSystem.out.println(\"\\nSum of the numeric values:\"); \t\r\n        System.out.println(count);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-236.php"}, {"exercise_number": 237, "exercise_content": "237. There are 10 vertical and horizontal squares on a plane. Each square is painted blue and green. Blue represents the sea, and green represents the land. When two green squares are in contact with the top and bottom, or right and left, they are said to be ground. The area created by only one green square is called \"island\". For example, there are five islands in the figure below. \nWrite a Java program to read the mass data and find the number of islands.Input:\nA single data set is represented by 10 rows of 10 numbers representing green squares as 1 and blue squares as zeros.\nOutput: For each data set, output the number of islands.Sample Output:Input 10 rows of 10 numbers representing green squares (island) as 1 and blue squares (sea) as zeros\r\n1100000111\r\n1000000111\r\n0000000111\r\n0010001000\r\n0000011100\r\n0000111110\r\n0001111111\r\n1000111110\r\n1100011100\r\n1110001000\r\nNumber of islands:\r\n5", "exercise_solution_code": "  import java.util.Scanner;\r\n\r\npublic class test {\r\n\r\n\tpublic static boolean[][] map;\r\n\r\n\tpublic static int[][] move = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\r\n\r\n\tpublic static void fds(int i, int j){\r\n\t\tmap[i][j] = false;\r\n\t\tfor(int k=0;k<4;k++){\r\n\t\t\tint i2 = i+move[k][0];\r\n\t\t\tint j2 = j+move[k][1];\r\n\t\t\tif(0<=i2&&i2<10&&0<=j2&&j2<10&&map[i2][j2])fds(i2,j2);\r\n\t\t}\r\n\t}\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"Input 10 rows of 10 numbers representing green squares (island) as 1 and blue squares (sea) as zeros\");\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\t\t\tmap = new boolean[10][10];\r\n\t\t\tfor(int i=0;i<10;i++){\r\n\t\t\t\tchar[] s = sc.next().toCharArray();\r\n\t\t\t\tfor(int j=0;j<10;j++){\r\n\t\t\t\t\tmap[i][j] = s[j]=='1';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tint x = 0;\r\n\t\t\tfor(int i=0;i<10;i++){\r\n\t\t\t\tfor(int j=0;j<10;j++){\r\n\t\t\t\t\tif(map[i][j]){\r\n\t\t\t\t\t\tfds(i, j);\r\n\t\t\t\t\t\tx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSystem.out.println(\"Number of islands:\");   \r\n\t\t\tSystem.out.println(x);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-237.php"}, {"exercise_number": 238, "exercise_content": "238. When character are consecutive in a string , it is possible to shorten the character string by replacing the character with a certain rule. For example, in the case of the character string YYYYY, if it is expressed as # 5 Y, it is compressed by one character. \nWrite a Java program to restore the original string by entering the compressed string with this rule. However, the # character does not appear in the restored character string. \nNote: The original sentences are uppercase letters, lowercase letters, numbers, symbols, less than 100 letters, and consecutive letters are not more than 9 letters.Input:\nMultiple character strings are given. One string is given per line. \nOutput: The restored character string for each character on one line.Sample Output:Input the text:\r\nXY#6Z1#4023\r\nXYZZZZZZ1000023", "exercise_solution_code": "import java.util.*;\r\npublic class Main \r\n{\r\n    public static void main(String[] args) \r\n    {\r\n        Scanner stdIn = new Scanner(System.in);\r\n\t\t    System.out.println(\"Input the text:\");\r\n            String str = stdIn.next();\r\n            for(int i = 0; i < str.length(); ++i)\r\n            {\r\n                if(str.charAt(i) == '#')\r\n                {\r\n                    for(int j = 0; j < (str.charAt(i + 1) - '0'); ++j)\r\n                    {\r\n                        System.out.print(str.charAt(i + 2));\r\n                    }\r\n                    i += 2;\r\n                }\r\n                else\r\n                {\r\n                    System.out.print(str.charAt(i));\r\n                }\r\n            }\r\n            System.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-238.php"}, {"exercise_number": 239, "exercise_content": "239. Internet search engine giant, such as Google accepts web pages around the world and classify them, creating a huge database. The search engines also analyze the search keywords entered by the user and create inquiries for database search. In both cases, complicated processing is carried out in order to realize efficient retrieval, but basics are all cutting out words from sentences. \nWrite a Java program to cut out words of 3 to 6 characters length from a given sentence not more than 1024 characters.Input:\nEnglish sentences consisting of delimiters and alphanumeric characters are given on one line. \nOutput: Output a word delimited by one space character on one line.Sample Output:Input a sentence (1024 characters. max.)\r\nThe quick brown fox\r\n\r\n3 to 6 characters length of words:\r\nThe quick brown fox", "exercise_solution_code": " import java.util.Scanner;\r\n\r\npublic class Main{\r\n\t  public static void main(String[] args) \r\n       {\t\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tSystem.out.println(\"Input a sentence (1024 characters. max.)\");\r\n\t\tString[] str = ((sc.nextLine()).replace(\",\", \"\").replace(\".\", \"\")).split(\" \");\r\n\t\tint flag = 0;\r\n\t\tSystem.out.println(\"\\n3 to 6 characters length of words:\");\r\n\t\tfor(String s: str){\r\n\t\t\tint l = s.length();\r\n\t\t\tif(l >= 3 && l <= 6){\r\n\t\t\t\tif(flag == 1){\r\n\t\t\t\t\tSystem.out.print(\" \");\r\n\t\t\t\t}\r\n\t\t\t\t\tSystem.out.print(s);\r\n\t\t\t\tflag = 1;\r\n\t\t\t}\r\n\t\t}\t\r\n\t} \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-239.php"}, {"exercise_number": 240, "exercise_content": "240. Arrange integers (0 to 99) as narrow hilltop, as illustrated in Figure 1. Reading such data representing huge, when starting from the top and proceeding according to the next rule to the bottom. \nWrite a Java program that compute the maximum value of the sum of the passing integers.Input:\nA series of integers separated by commas are given in diamonds. No spaces are included in each line. The input example corresponds to Figure 1. The number of lines of data is less than 100 lines. \nOutput: The maximum value of the sum of integers passing according to the rule on one line.Sample Output:Input the numbers (ctrl+c to exit):\r\n8\r\n4,9\r\n9,2,1\r\n3,8,5,5\r\n5,6,3,7,6\r\n3,8,5,5\r\n9,2,1\r\n4,9\r\n8\r\nMaximum value of the sum of integers passing according to the rule on one line.\r\n64", "exercise_solution_code": " import java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class Main{\r\n \r\n    public static void main(String[] args) {\r\n\t\tSystem.out.println(\"Input the numbers (ctrl+c to exit):\");\r\n        Scanner sc = new Scanner(System.in);\r\n        List<String> l = new ArrayList<String>();\r\n        while(sc.hasNext())l.add(sc.next());\r\n        int n = l.size();\r\n        int[][] a = new int[n][];\r\n        for(int i=0;i<n;i++){\r\n            String[] s = l.get(i).split(\",\");\r\n            int k = s.length;\r\n            a[i] = new int[k];\r\n            for(int j=0;j<k;j++)a[i][j]=Integer.parseInt(s[j]);\r\n        }\r\n        int[] sd = {a[0][0]};\r\n        for(int i=1;i<n;i++){\r\n            int[] tmp = new int[a[i].length];\r\n            for(int j=0;j<tmp.length;j++){\r\n                if(i<=n/2){\r\n                    if(j==0)tmp[j]=sd[j]+a[i][j];\r\n                    else if(j==tmp.length-1)tmp[j]=sd[j-1]+a[i][j];\r\n                    else tmp[j]=Math.max(sd[j-1]+a[i][j], sd[j]+a[i][j]);\r\n                }\r\n                else{\r\n                    tmp[j] = Math.max(sd[j]+a[i][j], sd[j+1]+a[i][j]);\r\n                }\r\n            }\r\n            sd = tmp;\r\n        }\r\n\t\tSystem.out.println(\"Maximum value of the sum of integers passing according to the rule on one line.\");\r\n        System.out.println(sd[0]);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-240.php"}, {"exercise_number": 241, "exercise_content": "241. Write a Java program to find the number of combinations that satisfy p + q + r + s = n where n is a given number <= 4000 and p, q, r, s in the range of 0 to 1000.Sample Output:Input a positive integer:\r\n252\r\nNumber of combinations of a,b,c,d:\r\n2731135", "exercise_solution_code": " import java.util.*;\r\npublic class Main{ \r\n    public static void main(String[] args) {\r\n    Scanner sc = new Scanner(System.in);\r\n\tSystem.out.println(\"Input a positive integer:\");\r\n    int[] temp = new int[2001];\r\n    int[] ans = new int[4001];\r\n    for(int i=0;i<=1000;i++){\r\n    for(int j=0;j<=1000;j++){\r\n    temp[i+j]++;\r\n     }\r\n       }\r\n    for(int i=0;i<=2000;i++){\r\n    for(int j=0;j<=2000;j++){\r\n    ans[i+j]+=temp[i]*temp[j];\r\n     }\r\n        }\r\n\t      int n = sc.nextInt();\r\n          System.out.println(\"Number of combinations of a,b,c,d:\");\r\n          System.out.println(ans[n]);      \r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-241.php"}, {"exercise_number": 242, "exercise_content": "242. Your task is to develop a small part of spreadsheet software.\nWrite a Java program which adds up columns and rows of given table as shown in the specified figure:Input number of rows/columns (0 to exit)\r\n4\r\n25 69 51 26\r\n68 35 29 54\r\n54 57 45 63\r\n61 68 47 59\r\nResult:\r\n   25   69   51   26  171\r\n   68   35   29   54  186\r\n   54   57   45   63  219\r\n   61   68   47   59  235\r\n  208  229  172  202  811", "exercise_solution_code": " import java.util.*;\r\n\r\npublic class Main {     \r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n          System.out.println(\"Input number of rows/columns (0 to exit)\"); \r\n          while(true){\r\n            int n = sc.nextInt();\r\n            if(n==0)break;\r\n            int[][] map = new int[n+1][n+1];\r\n             \r\n            for(int i=0;i<n;i++){\r\n                for(int j=0;j<n;j++){\r\n                    map[i][j] = sc.nextInt();\r\n                    map[i][n] += map[i][j];\r\n                }\r\n                map[n][n] += map[i][n];\r\n            }\r\n             \r\n            for(int i=0;i<n;i++){\r\n                for(int j=0;j<n;j++){\r\n                    map[n][i] += map[j][i];\r\n                }\r\n            }\r\n            System.out.println(\"Result:\"); \r\n            for(int i=0;i<n+1;i++){\r\n                for(int j=0;j<n+1;j++){\r\n                    System.out.printf(\"%5d\", map[i][j]);\r\n                }\r\n                System.out.println();\r\n            }\r\n        }\r\n    }   \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-242.php"}, {"exercise_number": 243, "exercise_content": "243. Write a Java program which reads a list of pairs of a word and a page number, and prints the word and a list of the corresponding page numbers.Input:Input pairs of a word and a page number:\r\napple 5\r\nbanana 6\r\n\r\nWord and page number in alphabetical order:\r\napple\r\n5\r\nbanana\r\n6", "exercise_solution_code": "import java.util.PriorityQueue;\r\nimport java.util.Scanner;\r\n \r\npublic class Main {\r\n     \r\n    static class Dic implements Comparable<Dic>{\r\n        String moji;\r\n        int page;\r\n        Dic(String moji, int page){\r\n            this.moji=moji;\r\n            this.page=page;\r\n        }\r\n        public int compareTo(Dic d) {\r\n            if(this.moji.equals(d.moji)) {\r\n                return this.page-d.page;\r\n            }\r\n            else {\r\n                return this.moji.compareTo(d.moji);\r\n            }\r\n        }\r\n    }\r\n     \r\n    public static void main(String[] args) {\r\n        try(Scanner sc = new Scanner(System.in)){\r\n            PriorityQueue<Dic> pq=new PriorityQueue<>();\r\n\t\t\tSystem.out.println(\"Input pairs of a word and a page number:\"); \r\n            while(sc.hasNextLine()) {\r\n                String str=sc.nextLine();\r\n                String[] token=str.split(\" \");\r\n                String s=token[0];\r\n                int n=Integer.parseInt(token[1]);\r\n                pq.add(new Dic(s, n));\r\n            }\r\n            String pre=\"\";\r\n           System.out.println(\"\\nWord and page number in alphabetical order:\"); \r\n            while(!pq.isEmpty()) {\r\n                Dic dic=pq.poll();\r\n                if(dic.moji.equals(pre)) {\r\n                    System.out.print(\" \"+dic.page);\r\n                }\r\n                else if(pre.equals(\"\")) {\r\n                    System.out.println(dic.moji);\r\n                    System.out.print(dic.page);\r\n                }\r\n                else {\r\n                    System.out.println();\r\n                    System.out.println(dic.moji);\r\n                    System.out.print(dic.page);\r\n                }\r\n                pre=dic.moji;\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-243.php"}, {"exercise_number": 244, "exercise_content": "244. Write a Java program which accepts a string from the user and check whether the string is correct or not.The conditions for getting the \"correct answer\" are:\na)\tThere must be only three characters X, Y, and Z in the string, and no other characters.\nb)\tAny string of any form such as aXYZa can get the \"correct answer\", where a is either an empty string or a string consisting only of the letter X;\nc)\tIf aXbZc is correct, aXbYZca is also correct, where a, b, c are either empty strings or a string consisting only of the letter X.Input:Input a string:\r\n XYZ\r\nCorrect format..", "exercise_solution_code": "import java.util.Scanner;\r\n\r\nclass Student {\r\n\tString name;\r\n\tString stu_id;\r\n\tint score;\r\n\tpublic Student() {\r\n\t\tthis(\" \", \" \", 0);\r\n\t}\r\n\tpublic Student(String initName, String initId, int initScore) {\r\n\t\tname = initName;\r\n\t\tstu_id = initId;\r\n\t\tscore = initScore;\r\n\t}\r\n}\r\n\r\npublic class Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner in = new Scanner(System.in);\r\n\t\tSystem.out.println(\"Input number of students:\");\r\n\t\tint n = Integer.parseInt(in.nextLine().trim());\r\n\t\tSystem.out.println(\"Input Student Name, ID, Score:\");\r\n\t\tStudent stu = new Student();\r\n\t\tStudent max = new Student();\r\n\t\tStudent min = new Student(\" \", \" \", 100);\r\n\t\tfor (int i = 0; i < n; i ++) {\r\n\t\t\tstu.name = in.next();\r\n\t\t\tstu.stu_id = in.next();\r\n\t\t\tstu.score = in.nextInt();\r\n\t\t\tif (max.score < stu.score) {\r\n\t\t\t\tmax.name = stu.name;\r\n\t\t\t\tmax.stu_id = stu.stu_id;\r\n\t\t\t\tmax.score = stu.score;\r\n\t\t\t}\r\n\t\t\tif (min.score > stu.score) {\r\n\t\t\t\tmin.name = stu.name;\r\n\t\t\t\tmin.stu_id = stu.stu_id;\r\n\t\t\t\tmin.score = stu.score;\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"name, ID of the highest score and the lowest score:\");\r\n\t\tSystem.out.println(max.name + \" \" + max.stu_id);\r\n\t\tSystem.out.println(min.name + \" \" + min.stu_id);\r\n\t\tin.close();\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-245.php"}, {"exercise_number": 245, "exercise_content": "245. Write a Java program which accepts students name, id, and marks and display the highest score and the lowest score.The student name and id are all strings of no more than 10 characters. The score is an integer between 0 and 100.Input:Input number of students:\r\n3\r\nInput Student Name, ID, Score:\r\nDevid v1 72\r\nPeter v2 68\r\nJohnson v3 85\r\nname, ID of the highest score and the lowest score:\r\nJohnson v3\r\nPeter v2", "exercise_solution_code": "import java.util.Scanner;\r\n\r\nclass Student {\r\n\tString name;\r\n\tString stu_id;\r\n\tint score;\r\n\tpublic Student() {\r\n\t\tthis(\" \", \" \", 0);\r\n\t}\r\n\tpublic Student(String initName, String initId, int initScore) {\r\n\t\tname = initName;\r\n\t\tstu_id = initId;\r\n\t\tscore = initScore;\r\n\t}\r\n}\r\n\r\npublic class Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner in = new Scanner(System.in);\r\n\t\tSystem.out.println(\"Input number of students:\");\r\n\t\tint n = Integer.parseInt(in.nextLine().trim());\r\n\t\tSystem.out.println(\"Input Student Name, ID, Score:\");\r\n\t\tStudent stu = new Student();\r\n\t\tStudent max = new Student();\r\n\t\tStudent min = new Student(\" \", \" \", 100);\r\n\t\tfor (int i = 0; i < n; i ++) {\r\n\t\t\tstu.name = in.next();\r\n\t\t\tstu.stu_id = in.next();\r\n\t\t\tstu.score = in.nextInt();\r\n\t\t\tif (max.score < stu.score) {\r\n\t\t\t\tmax.name = stu.name;\r\n\t\t\t\tmax.stu_id = stu.stu_id;\r\n\t\t\t\tmax.score = stu.score;\r\n\t\t\t}\r\n\t\t\tif (min.score > stu.score) {\r\n\t\t\t\tmin.name = stu.name;\r\n\t\t\t\tmin.stu_id = stu.stu_id;\r\n\t\t\t\tmin.score = stu.score;\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"name, ID of the highest score and the lowest score:\");\r\n\t\tSystem.out.println(max.name + \" \" + max.stu_id);\r\n\t\tSystem.out.println(min.name + \" \" + min.stu_id);\r\n\t\tin.close();\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-245.php"}, {"exercise_number": 246, "exercise_content": "246. Let us use the letter H to mean \"hundred\", the letter T to mean \"ten\" and \u201c1, 2, . . . n\u201d to represent the ones digit n (<10). Write a Java program to convert 3 digits positive number in given format. For example, 234 should be output as BBSSS1234 because it has 2 \"hundreds\", 3 \"ten\", and 4 of the ones.The student name and id are all strings of no more than 10 characters. The score is an integer between 0 and 100.Input:\n235\n230\nOutput:\nHHTTT12345\nHHTTTInput a positive number(max three digits):\r\n235\r\nResult:\r\nHHTTT12345", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n\t\tSystem.out.println(\"Input a positive number(max three digits):\");\r\n        char[] num = String.format(\"%03d\", in.nextInt()).toCharArray();\r\n        StringBuilder tm = new StringBuilder();\r\n        for (int i = 0; i < num[0] - '0'; i++) {\r\n            tm.append(\"H\");\r\n        }\r\n        for (int i = 0; i < num[1] - '0'; i++) {\r\n            tm.append(\"T\");\r\n        }\r\n        for (int i = 0; i < num[2] - '0'; i++) {\r\n            tm.append(i + 1);\r\n        }\r\n\t\tSystem.out.println(\"Result:\");\t\t\r\n        System.out.println(tm.toString());\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-246.php"}, {"exercise_number": 247, "exercise_content": "247. Write a Java program which accepts three integers and check whether sum of the first two given integers is greater than third one. Three integers are in the interval [-231, 231 ].Input:Input three integers (a,b,c):\r\n5 8 9\r\nCheck whether (a + b) is greater than c?\r\ntrue", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.println(\"Input three integers (a,b,c):\");\r\n            long a = in.nextLong();\r\n            long b = in.nextLong();\r\n            long c = in.nextLong();\r\n\t\t\tSystem.out.println(\"Check whether (a + b) is greater than c?\");\r\n            System.out.println(a + b > c);\r\n       }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-247.php"}, {"exercise_number": 248, "exercise_content": "248. From Wikipedia, An abecedarium (or abecedary) is an inscription consisting of the letters of an alphabet, almost always listed in order. Typically, abecedaria (or abecedaries) are practice exercises.\nWrite a Java program to check if each letter of a given word (Abecadrian word) is less than the one before it.Input:Input a word:  ABCD\r\nIs Abecadrian word? true", "exercise_solution_code": "import java.util.*;\r\npublic class solution {\t\r\n public static boolean is_abecedarian_word(String word) {\r\n        int index = word.length() - 1;\r\n\r\n        for (int i = 0; i < index; i++) {\r\n\r\n            if (word.charAt(i) <= word.charAt(i + 1)) {\r\n            }\r\n\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n     \r\n\r\n   public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Input a word: \");\r\n\t\tString word1 = scanner.nextLine();\r\n\t\tSystem.out.println(\"Is Abecadrian word? \"+is_abecedarian_word(word1));\t\t\r\n\t\t}\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-248.php"}, {"exercise_number": 249, "exercise_content": "249. From Wikipedia,\nThe Hamming weight of a string is the number of symbols that are different from the zero-symbol of the alphabet used. It is thus equivalent to the Hamming distance from the all-zero string of the same length. For the most typical case, a string of bits, this is the number of 1's in the string, or the digit sum of the binary representation of a given number and the \u2113\u2081 norm of a bit vector. In this binary case, it is also called the population count, popcount, sideways sum, or bit summation.Example:String\nHamming weight\n\n\n11101\n4\n\n\n11101000\n4\n\n\n00000000\n0\n\n\n789012340567\n10\n\n\nWrite a Java program to count the number of set bits in a 32-bit integer.Input:Input a number:  1427\r\n6", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class solution {\r\n\r\n    static int count_Set_Bits(int num) {\r\n        int ctr = 0;\r\n        while (num != 0) {\r\n            num = num & (num - 1);\r\n            ctr++;\r\n        }\r\n        return ctr;\r\n    }\r\n    public static void main(String args[]) {\r\n        Scanner sc = new Scanner(System.in);\r\n\t\tSystem.out.print(\"Input a number: \");\r\n        int num = sc.nextInt();\r\n        System.out.println(count_Set_Bits(num));\r\n        sc.close();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-249.php"}, {"exercise_number": 250, "exercise_content": "250. From Wikipedia,\nA cyclic redundancy check (CRC) is an error-detecting code commonly used in digital networks and storage devices to detect accidental changes to raw data. Blocks of data entering these systems get a short check value attached, based on the remainder of a polynomial division of their contents. On retrieval, the calculation is repeated and, in the event the check values do not match, corrective action can be taken against data corruption. CRCs can be used for error correction.Example:\nWrite a Java program to generate a crc32 checksum of a given string or byte array.Input:Input a string:  The quick brown fox\r\ncrc32 checksum of the string: b74574de", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.util.BitSet;\r\n\r\npublic class solution {\r\n    public static int convert_crc32(byte[] data) {\r\n        BitSet bitSet = BitSet.valueOf(data);\r\n        int crc32 = 0xFFFFFFFF; \r\n        for (int i = 0; i < data.length * 8; i++) {\r\n            if (((crc32 >>> 31) & 1) != (bitSet.get(i) ? 1 : 0))\r\n                crc32 = (crc32 << 1) ^ 0x04C11DB7;  \r\n            else\r\n                crc32 = (crc32 << 1);\r\n        }\r\n        crc32 = Integer.reverse(crc32);  \r\n        return crc32 ^ 0xFFFFFFFF;  \r\n    }\r\n    \r\n   public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Input a string: \");\r\n\t\tString str1 = scanner.nextLine();\r\n\t\tSystem.out.println(\"crc32 checksum of the string: \"+Integer.toHexString(convert_crc32(str1.getBytes())));\t\t\r\n\t\t}           \r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/basic/java-basic-exercise-250.php"}], "Data Types": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to convert temperature from Fahrenheit to Celsius degree. \nTest Data\nInput a degree in Fahrenheit: 212\nExpected Output:\n212.0 degree Fahrenheit is equal to 100.0 in Celsius", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise1 {\r\n\r\n    public static void main(String[] Strings) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input a degree in Fahrenheit: \");\r\n        double fahrenheit = input.nextDouble();\r\n\r\n        double  celsius =(( 5 *(fahrenheit - 32.0)) / 9.0);\r\n        System.out.println(fahrenheit + \" degree Fahrenheit is equal to \" + celsius + \" in Celsius\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program that reads a number in inches, converts it to meters. \nNote: One inch is 0.0254 meter.\nTest Data\nInput a value for inch: 1000\nExpected Output :\n1000.0 inch is 25.4 meters", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise2 {\r\n\r\n    public static void main(String[] Strings) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input a value for inch: \");\r\n        double inch = input.nextDouble();\r\n        double meters = inch * 0.0254;\r\n        System.out.println(inch + \" inch is \" + meters + \" meters\");\r\n\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program that reads an integer between 0 and 1000 and adds all the digits in the integer.Test Data\nInput an integer between 0 and 1000: 565\nExpected Output :\nThe sum of all digits in 565 is 16", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main {\r\n\r\n    public static void main(String[] Strings) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input an integer between 0 and 1000: \");\r\n        int num = input.nextInt();\r\n\r\n        int firstDigit = num % 10;\r\n        int remainingNumber = num / 10;\r\n        int SecondDigit = remainingNumber % 10;\r\n        remainingNumber = remainingNumber / 10;\r\n        int thirdDigit = remainingNumber % 10;\r\n        remainingNumber = remainingNumber / 10;\r\n        int fourthDigit = remainingNumber % 10;\r\n        int sum = thirdDigit + SecondDigit + firstDigit + fourthDigit;\r\n        System.out.println(\"The sum of all digits in \" + num + \" is \" + sum);\r\n\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to convert minutes into a number of years and days.Test Data\nInput the number of minutes: 3456789\nExpected Output :\n3456789 minutes is approximately 6 years and 210 days", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise4 {\r\n\r\n    public static void main(String[] Strings) {\r\n\r\n\r\n        double minutesInYear = 60 * 24 * 365;\r\n\r\n        Scanner input = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input the number of minutes: \");\r\n\r\n        double min = input.nextDouble();\r\n\r\n        long years = (long) (min / minutesInYear);\r\n        int days = (int) (min / 60 / 24) % 365;\r\n\r\n        System.out.println((int) min + \" minutes is approximately \" + years + \" years and \" + days + \" days\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program that prints the current time in GMT.Test Data\nInput the time zone offset to GMT: 256\nExpected Output:\nCurrent time is 23:40:24", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise5 {\r\n\r\n    public static void main(String[] Strings) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input the time zone offset to GMT: \");\r\n        long timeZoneChange = input.nextInt();\r\n\r\n        long totalMilliseconds = System.currentTimeMillis();\r\n\r\n        long totalSeconds = totalMilliseconds / 1000;\r\n\r\n        long currentSecond = totalSeconds % 60;\r\n\r\n        long totalMinutes = totalSeconds / 60;\r\n\r\n        long currentMinute = totalMinutes % 60;\r\n\r\n        long totalHours = totalMinutes / 60;\r\n\r\n        long currentHour = ((totalHours + timeZoneChange) % 24);\r\n\r\n        System.out.println(\"Current time is \" + currentHour + \":\" + currentMinute + \":\" + currentSecond);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to compute body mass index (BMI).Test Data\nInput weight in pounds: 452\nInput height in inches: 72\nExpected Output:\nBody Mass Index is 61.30159143458721", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise6 {\r\n\r\n    public static void main(String[] Strings) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input weight in pounds: \");\r\n        double weight = input.nextDouble();\r\n\r\n        System.out.print(\"Input height in inches: \");\r\n        double inches = input.nextDouble();\r\n\r\n        double BMI = weight * 0.45359237 / (inches * 0.0254 * inches * 0.0254);\r\n        System.out.print(\"Body Mass Index is \" + BMI+\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to takes the user for a distance (in meters) and the time was taken (as three numbers: hours, minutes, seconds), and display the speed, in meters per second, kilometers per hour and miles per hour (hint: 1 mile = 1609 meters).Test Data\nInput distance in meters: 2500 \nInput hour: 5 \nInput minutes: 56\nInput seconds: 23\nExpected Output :\nYour speed in meters/second is 0.11691531 \nYour speed in km/h is 0.42089513 \nYour speed in miles/h is 0.26158804", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise7 {\r\n\r\n    public static void main(String[] args) {\r\n\t\tScanner scanner = new Scanner(System.in); \r\n\r\n\t\tfloat timeSeconds;\r\n\t\tfloat mps,kph, mph;\r\n\r\n\t\tSystem.out.print(\"Input distance in meters: \");\r\n\t\tfloat distance = scanner.nextFloat();\r\n\r\n\t\tSystem.out.print(\"Input hour: \");\r\n\t\tfloat hr = scanner.nextFloat();\r\n\r\n\t\tSystem.out.print(\"Input minutes: \");\r\n\t\tfloat min = scanner.nextFloat();\r\n\r\n\t\tSystem.out.print(\"Input seconds: \");\r\n\t\tfloat sec = scanner.nextFloat();\r\n\r\n\t\ttimeSeconds = (hr*3600) + (min*60) + sec;\r\n\t\tmps = distance / timeSeconds;\r\n\t\tkph = ( distance/1000.0f ) / ( timeSeconds/3600.0f );\r\n\t\tmph = kph / 1.609f;\r\n\r\n\t\tSystem.out.println(\"Your speed in meters/second is \"+mps);\r\n\t\tSystem.out.println(\"Your speed in km/h is \"+kph);\r\n\t\tSystem.out.println(\"Your speed in miles/h is \"+mph);\r\n\t\t\r\n\r\n\t\tscanner.close();\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program that reads a number and display the square, cube, and fourth power.Expected Output:Square: .2fCube: .2fFourth power: 50625.00", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise8 {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the side length value: \");\r\n        double val = in.nextDouble();\r\n\r\n        System.out.printf(\"Square: %12.2f\\n\", val * val);\r\n        System.out.printf(\"Cube: %14.2f\\n\", val * val * val);\r\n        System.out.printf(\"Fourth power: %6.2f\\n\", Math.pow(val, 4));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program that accepts two integers from the user and then prints the sum, the difference, the product, the average, the distance (the difference between integer), the maximum (the larger of the two integers), the minimum (smaller of the two\u00a0integers).Test Data\nInput 1st integer: 25 \nInput 2nd integer: 5\nExpected Output :\nSum of two integers: 30\nDifference of two integers: 20\nProduct of two integers: 125\nAverage of two integers: 15.00\nDistance of two integers: 20\nMax integer: 25 \nMin integer: 5", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise9 {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input 1st integer: \");\r\n        int firstInt = in.nextInt();\r\n        System.out.print(\"Input 2nd integer: \");\r\n        int secondInt = in.nextInt();\r\n\r\n        System.out.printf(\"Sum of two integers: %d%n\", firstInt + secondInt);\r\n        System.out.printf(\"Difference of two integers: %d%n\", firstInt - secondInt);\r\n        System.out.printf(\"Product of two integers: %d%n\", firstInt * secondInt);\r\n        System.out.printf(\"Average of two integers: %.2f%n\", (double) (firstInt + secondInt) / 2);\r\n        System.out.printf(\"Distance of two integers: %d%n\", Math.abs(firstInt - secondInt));\r\n        System.out.printf(\"Max integer: %d%n\", Math.max(firstInt, secondInt));\r\n        System.out.printf(\"Min integer: %d%n\", Math.min(firstInt, secondInt));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to break an integer into a sequence of individual digits.Test Data\nInput six non-negative digits: 123456\nExpected Output :\n1 2 3 4 5 6", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise11 {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input six non-negative digits: \");\r\n        int input = in.nextInt();\r\n        int n1 = input / 100000 % 10;\r\n        int n2 = input / 10000 % 10;\r\n        int n3 = input / 1000 % 10;\r\n        int n4 = input / 100 % 10;\r\n        int n5 = input / 10 % 10;\r\n        int n6 = input % 10;\r\n      System.out.println(n1 + \" \" + n2 + \" \" + n3 + \" \" + n4 + \" \" + n5 + \" \" + n6);\r\n\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to test whether a given double/float value is a finite floating-point value or not.", "exercise_solution_code": "public class Main {\r\n    public static void main(String[] args) {\r\n        Double dn1 = 0.000213456321d;\r\n        boolean d1f = Double.isFinite(dn1);\r\n        Double dn2 = dn1 / 0;\r\n        boolean d2f = Double.isFinite(dn2);\r\n        Double dn3 = Double.POSITIVE_INFINITY * 0;\r\n        boolean d3f = Double.isFinite(dn3);\r\n        System.out.println(\"\\nFinite doubles\\n--------------\");\r\n        System.out.println(\"Is \"+dn1 + \" is finite? \" + d1f);\r\n        System.out.println(\"Is \"+dn2 + \" (dn1/0) is finite? \" + d2f);\r\n        System.out.println(\"Is \"+dn3 + \" is finite? \" + d3f);\r\n\t\tFloat fn1 = 5.3f;\r\n        boolean f1f = Float.isFinite(fn1);\r\n        Float fn2 = fn1 / 0;\r\n        boolean f2f = Float.isFinite(fn2);\r\n        Float fn3 = 0f / 0f;\r\n        boolean f3f = Float.isFinite(fn3);\r\n        System.out.println(\"\\n\\nFinite floats\\n-------------\");\r\n        System.out.println(\"Is \"+fn1 + \" is finite? \" + f1f);\r\n        System.out.println(\"Is \"+fn2 + \" (fn1/0) is finite? \" + f2f);\r\n        System.out.println(\"Is \"+fn3 + \" is finite? \" + f3f);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to compare two given signed and unsigned numbers.", "exercise_solution_code": "public class Main {\r\n    public static void main(String[] args) {\r\n        int in1 = Integer.MIN_VALUE;\r\n\t\tint in2 = Integer.MAX_VALUE;\r\n\t\tSystem.out.println(\"Signed integers: \" + in1 + \", \" + in2);\r\n\t\tSystem.out.println(\"-----------------------------------------\");\r\n\t\tint compare_Signed_num = Integer.compare(in1, in2);\r\n\t\tSystem.out.println(\"Result of comparing signed numbers: \" + compare_Signed_num);\r\n\t\tint compare_Unsigned_num = Integer.compareUnsigned(in1, in2);\r\n        System.out.println(\"Result of comparing unsigned numbers: \" + compare_Unsigned_num);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to compute the floor division and the floor modulus of the given dividend and divisor.", "exercise_solution_code": "public class Main {\r\n    public static void main(String[] args) {\r\n        int x = -2365;\r\n        int y = 125;\r\n        System.out.println();\r\n        System.out.println(\"Floor division using '/' operator: \" + (x / y));\r\n        System.out.println(\"Floor division using floorDiv() method is: \" + Math.floorDiv(x, y));\r\n        System.out.println();\r\n        System.out.println(\"Floor modulus using '%' operator: \" + (x % y));\r\n        System.out.println(\"Floor modulus using floorMod() method is: \" + Math.floorMod(x, y));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to extract the primitive type value from a given BigInteger value. \nA primitive type is predefined by the language and is named by a reserved keyword. Primitive values do not share state with other primitive values. The eight primitive data types supported by the Java programming language are byte, short, int, long, float, double, Boolean and char.\nBigInteger() translates the sign-magnitude representation of a BigInteger into a BigInteger. The sign is represented as an integer signum value: -1 for negative, 0 for zero, or 1 for positive. The magnitude is a byte array in big-endian byte-order: the most significant byte is in the zeroth element. A zero-length magnitude array is permissible, and will result in a BigInteger value of 0, whether signum is -1, 0 or 1.", "exercise_solution_code": "import java.math.BigInteger;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        BigInteger bigval = BigInteger.valueOf(Long.MAX_VALUE);\r\n        System.out.println(\"\\nBigInteger value: \"+bigval);\r\n\t\tlong val_Long = bigval.longValue();\r\n\t\tSystem.out.println(\"\\nConvert the said BigInteger to an long value: \"+val_Long);\r\n        int val_Int = bigval.intValue();\r\n\t\tSystem.out.println(\"\\nConvert the said BigInteger to an int value: \"+val_Int);\r\n        short val_Short = bigval.shortValue();\r\n        System.out.println(\"\\nConvert the said BigInteger to an short value: \"+val_Short);\r\n        byte val_Byte = bigval.byteValue();\r\n        System.out.println(\"\\nConvert the said BigInteger to byte: \"+val_Byte);\r\n        long val_ExactLong = bigval.longValueExact();\r\n\t\tSystem.out.println(\"\\nConvert the said BigInteger to exact long: \"+val_ExactLong);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to get the next floating-point adjacent in the direction of positive and negative infinity from a given float/double number.", "exercise_solution_code": "public class Main {\r\n    public static void main(String[] args) {\r\n        float fn = 0.2f;\r\n        System.out.println(\"\\nInitial floating number: \" + fn);\t\t\r\n        float next_down_fn = Math.nextDown(fn);\r\n        float next_up_fn = Math.nextUp(fn);\r\n        System.out.println(\"Float \" + fn + \" next down is \" + next_down_fn);\r\n        System.out.println(\"Float \" + fn + \" next up is \" + next_up_fn);\r\n        double dn = 0.2d;\r\n       System.out.println(\"\\nInitial double number: \" + dn);\t\t\r\n        double next_down_dn = Math.nextDown(dn);\r\n        double next_up_dn = Math.nextUp(dn);\r\n        System.out.println(\"Double \" + dn + \" next down is \" + next_down_dn);\r\n        System.out.println(\"Double \" + dn + \" next up is \" + next_up_dn);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datatypes/java-datatype-exercise-15.php"}], "Conditional Statement": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to get a number from the user and print whether it is positive or negative.Test Data\nInput number: 35\nExpected Output :\nNumber is positive", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise1 {\r\n\r\n    \r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input number: \");\r\n        int input = in.nextInt();\r\n\r\n        if (input > 0)\r\n        {\r\n            System.out.println(\"Number is positive\");\r\n        }\r\n        else if (input < 0)\r\n        {\r\n            System.out.println(\"Number is negative\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Number is zero\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to solve quadratic equations (use if, else if and else).Test Data\nInput a: 1 \nInput b: 5 \nInput c: 1\nExpected Output :\nThe roots are -0.20871215252208009 and -4.7912878474779195", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise2 {\r\n\r\n    \r\n  public static void main(String[] Strings) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n\r\n            System.out.print(\"Input a: \");\r\n            double a = input.nextDouble();\r\n            System.out.print(\"Input b: \");\r\n            double b = input.nextDouble();\r\n            System.out.print(\"Input c: \");\r\n            double c = input.nextDouble();\r\n\r\n            double result = b * b - 4.0 * a * c;\r\n\r\n            if (result > 0.0) {\r\n                double r1 = (-b + Math.pow(result, 0.5)) / (2.0 * a);\r\n                double r2 = (-b - Math.pow(result, 0.5)) / (2.0 * a);\r\n                System.out.println(\"The roots are \" + r1 + \" and \" + r2);\r\n            } else if (result == 0.0) {\r\n                double r1 = -b / (2.0 * a);\r\n                System.out.println(\"The root is \" + r1);\r\n            } else {\r\n                System.out.println(\"The equation has no real roots.\");\r\n            }\r\n\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Take three numbers from the user and print the greatest number.Test Data\nInput the 1st number: 25 \nInput the 2nd number: 78 \nInput the 3rd number: 87\nExpected Output :\nThe greatest: 87", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise3 {\r\n\r\n    \r\n  public static void main(String[] args) {\r\n  Scanner in = new Scanner(System.in);\r\n   \r\n  System.out.print(\"Input the 1st number: \");\r\n  int num1 = in.nextInt();\r\n   \r\n  System.out.print(\"Input the 2nd number: \");\r\n  int num2 = in.nextInt();\r\n   \r\n  System.out.print(\"Input the 3rd number: \");\r\n  int num3 = in.nextInt();\r\n   \r\n   \r\n  if (num1 > num2)\r\n   if (num1 > num3)\r\n    System.out.println(\"The greatest: \" + num1);\r\n   \r\n  if (num2 > num1)\r\n   if (num2 > num3)\r\n    System.out.println(\"The greatest: \" + num2);\r\n   \r\n  if (num3 > num1)\r\n   if (num3 > num2)\r\n    System.out.println(\"The greatest: \" + num3);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program that reads a floating-point number and prints \"zero\" if the number is zero. Otherwise, print \"positive\" or \"negative\". Add \"small\" if the absolute value of the number is less than 1, or \"large\" if it exceeds 1,000,000.Test Data\nInput a number: 25\n\nExpected Output :\nInput value: 25 \nPositive number", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise4 {\r\n\r\n    \r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input value: \");\r\n        double input = in.nextDouble();\r\n\r\n        if (input > 0)\r\n        {\r\n            if (input < 1)\r\n            {\r\n                System.out.println(\"Positive small number\");\r\n            }\r\n            else if (input > 1000000)\r\n            {\r\n                System.out.println(\"Positive large number\");\r\n            }\r\n            else\r\n            {\r\n                System.out.println(\"Positive number\");\r\n            }\r\n        }\r\n        else if (input < 0)\r\n        {\r\n            if (Math.abs(input) < 1)\r\n            {\r\n                System.out.println(\"Negative small number\");\r\n            }\r\n            else if (Math.abs(input) > 1000000)\r\n            {\r\n                System.out.println(\"Negative large number\");\r\n            }\r\n            else\r\n            {\r\n                System.out.println(\"Negative number\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Zero\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program that keeps a number from the user and generates an integer between 1 and 7 and displays the name of the weekday.Test Data\nInput number: 3 \nExpected Output :\nWednesday", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise5 {\r\n\r\n    \r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input number: \");\r\n        int day = in.nextInt();\r\n\r\n        System.out.println(getDayName(day));\r\n    }\r\n\r\n    // Get the name for the Week\r\n    public static String getDayName(int day) {\r\n        String dayName = \"\";\r\n        switch (day) {\r\n            case 1: dayName = \"Monday\"; break;\r\n            case 2: dayName = \"Tuesday\"; break;\r\n            case 3: dayName = \"Wednesday\"; break;\r\n            case 4: dayName = \"Thursday\"; break;\r\n            case 5: dayName = \"Friday\"; break;\r\n            case 6: dayName = \"Saturday\"; break;\r\n            case 7: dayName = \"Sunday\"; break;\r\n            default:dayName = \"Invalid day range\";\r\n        }\r\n\r\n        return dayName;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program that reads in two floating-point numbers and tests whether they are the same up to three decimal places.Test Data\nInput floating-point number: 25.586 \nInput floating-point another number: 25.589 \nExpected Output :\nThey are different", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise6 {\r\n\r\n    \r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input floating-point number: \");\r\n        double x = in.nextDouble();\r\n        System.out.print(\"Input floating-point another number: \");\r\n        double y = in.nextDouble();\r\n\r\n        x = Math.round(x * 1000);\r\n        x = x / 1000;\r\n\r\n        y = Math.round(y * 1000);\r\n        y = y / 1000;\r\n\r\n        if (x == y)\r\n        {\r\n            System.out.println(\"They are the same up to three decimal places\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"They are different\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to find the number of days in a month.Test Data\nInput a month number: 2\nInput a year: 2016\nExpected Output :\nFebruary 2016 has 29 days", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise7 {\r\n\r\n    \r\n  public static void main(String[] strings) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n\r\n        int number_Of_DaysInMonth = 0; \r\n        String MonthOfName = \"Unknown\";\r\n\r\n        System.out.print(\"Input a month number: \");\r\n        int month = input.nextInt();\r\n\r\n        System.out.print(\"Input a year: \");\r\n        int year = input.nextInt();\r\n\r\n        switch (month) {\r\n            case 1:\r\n                MonthOfName = \"January\";\r\n                number_Of_DaysInMonth = 31;\r\n                break;\r\n            case 2:\r\n                MonthOfName = \"February\";\r\n                if ((year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0))) {\r\n                    number_Of_DaysInMonth = 29;\r\n                } else {\r\n                    number_Of_DaysInMonth = 28;\r\n                }\r\n                break;\r\n            case 3:\r\n                MonthOfName = \"March\";\r\n                number_Of_DaysInMonth = 31;\r\n                break;\r\n            case 4:\r\n                MonthOfName = \"April\";\r\n                number_Of_DaysInMonth = 30;\r\n                break;\r\n            case 5:\r\n                MonthOfName = \"May\";\r\n                number_Of_DaysInMonth = 31;\r\n                break;\r\n            case 6:\r\n                MonthOfName = \"June\";\r\n                number_Of_DaysInMonth = 30;\r\n                break;\r\n            case 7:\r\n                MonthOfName = \"July\";\r\n                number_Of_DaysInMonth = 31;\r\n                break;\r\n            case 8:\r\n                MonthOfName = \"August\";\r\n                number_Of_DaysInMonth = 31;\r\n                break;\r\n            case 9:\r\n                MonthOfName = \"September\";\r\n                number_Of_DaysInMonth = 30;\r\n                break;\r\n            case 10:\r\n                MonthOfName = \"October\";\r\n                number_Of_DaysInMonth = 31;\r\n                break;\r\n            case 11:\r\n                MonthOfName = \"November\";\r\n                number_Of_DaysInMonth = 30;\r\n                break;\r\n            case 12:\r\n                MonthOfName = \"December\";\r\n                number_Of_DaysInMonth = 31;\r\n        }\r\n        System.out.print(MonthOfName + \" \" + year + \" has \" + number_Of_DaysInMonth + \" days\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program that takes the user to provide a single character from the alphabet. Print Vowel or Consonant, depending on the user input. If the user input is not a letter (between a and z or A and Z), or is a string of length > 1, print an error message.Test Data\nInput an alphabet: p\nExpected Output :\nInput letter is Consonant", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise8 {\r\n\r\n    \r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input an alphabet: \");\r\n        String input = in.next().toLowerCase();\r\n\r\n        boolean uppercase = input.charAt(0) >= 65 && input.charAt(0) <= 90;\r\n        boolean lowercase = input.charAt(0) >= 97 && input.charAt(0) <= 122;\r\n        boolean vowels = input.equals(\"a\") || input.equals(\"e\") || input.equals(\"i\")\r\n                || input.equals(\"o\") || input.equals(\"u\");\r\n\r\n        if (input.length() > 1)\r\n        {\r\n            System.out.println(\"Error. Not a single character.\");\r\n        }\r\n        else if (!(uppercase || lowercase))\r\n        {\r\n            System.out.println(\"Error. Not a letter. Enter uppercase or lowercase letter.\");\r\n        }\r\n        else if (vowels)\r\n        {\r\n            System.out.println(\"Input letter is Vowel\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Input letter is Consonant\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program that takes a year from user and print whether that year is a leap year or not.Test Data\nInput the year: 2016\nExpected Output :\n2016 is a leap year", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise9 {\r\n\r\n    \r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input the year: \");\r\n        int year = in.nextInt();\r\n\r\n        boolean x = (year % 4) == 0;\r\n        boolean y = (year % 100) != 0;\r\n        boolean z = ((year % 100 == 0) && (year % 400 == 0));\r\n\r\n        if (x && (y || z))\r\n        {\r\n            System.out.println(year + \" is a leap year\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(year + \" is not a leap year\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a program in Java to display the first 10 natural numbers.Expected Output :The first 10 natural numbers are:                                                \r\n                                                                                 \r\n1                                                                                \r\n2                                                                                \r\n3                                                                                \r\n4                                                                                \r\n5                                                                                \r\n6                                                                                \r\n7                                                                                \r\n8                                                                                \r\n9                                                                                \r\n10", "exercise_solution_code": "public class Exercise10 {\r\n    \r\n  public static void main(String[] args)\r\n    {     \r\n    int i;\r\n\tSystem.out.println (\"The first 10 natural numbers are:\\n\");\r\n\tfor (i=1;i<=10;i++)\r\n\t{      \r\n\t\tSystem.out.println (i);\r\n\t}\r\nSystem.out.println (\"\\n\");\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a program in Java to display n terms of natural numbers and their sum.Test Data\nInput the number: 2\nExpected Output :Input number:                                                                    \r\n2                                                                                \r\nThe first n natural numbers are :                                                \r\n2                                                                                \r\n1                                                                                \r\n2                                                                                \r\nThe Sum of Natural Number upto n terms :                                         \r\n23.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise11 {\r\n\r\n    \r\n  public static void main(String[] args)\r\n\r\n{\r\n   int i, n, sum=0;\r\n   {\r\n   Scanner in = new Scanner(System.in);  \r\n        System.out.print(\"Input number: \");  \r\n         n = in.nextInt();\r\n}\r\n  System.out.println(\"The first n natural numbers are : \"+n);\r\n  \r\n for(i=1;i<=n;i++)\r\n   {\r\n     System.out.println(i);\r\n     sum+=i;\r\n   }\r\nSystem.out.println(\"The Sum of Natural Number upto \"+n+ \" terms : \" +sum);\r\n\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a program in Java to input 5 numbers from keyboard and find their sum and average.Test Data\nInput the 5 numbers :\n1\n2\n3\n4\n5 \nExpected Output :Input the 5 numbers :                                                            \r\n1                                                                                \r\n2                                                                                \r\n3                                                                                \r\n4                                                                                \r\n5                                                                                \r\nThe sum of 5 no is : 15                                                          \r\nThe Average is : 3.0", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise12 {\r\n\r\n    \r\n  public static void main(String[] args)\r\n\r\n{       \r\n    int i,n=0,s=0;\r\n\tdouble avg;\r\n\t{\r\n\t   \r\n        System.out.println(\"Input the 5 numbers : \");  \r\n         \r\n\t}\r\n\t\tfor (i=0;i<5;i++)\r\n\t\t{\r\n\t\t    Scanner in = new Scanner(System.in);\r\n\t\t    n = in.nextInt();\r\n\t\t    \r\n  \t\ts +=n;\r\n\t}\r\n\tavg=s/5;\r\n\tSystem.out.println(\"The sum of 5 no is : \" +s+\"\\nThe Average is : \" +avg);\r\n \r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a program in Java to display the cube of the number upto given an integer.Test Data\nInput number of terms : 4\nExpected Output :Number is : 1 and cube of 1 is : 1                                               \r\nNumber is : 2 and cube of 2 is : 8                                               \r\nNumber is : 3 and cube of 3 is : 27                                              \r\nNumber is : 4 and cube of 4 is : 64", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise13 {\r\n\r\n   public static void main(String[] args)\r\n\r\n{\r\n    int i,n;\r\n\r\n    System.out.print(\"Input number of terms : \");\r\n    Scanner in = new Scanner(System.in);\r\n\t\t    n = in.nextInt();\r\n\r\n     for(i=1;i<=n;i++)\r\n     {\r\n     System.out.println(\"Number is : \" +i+\" and cube of \" +i+\" is : \"+(i*i*i));     \r\n    }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a program in Java to display the multiplication table of a given integer.Test Data\nInput the number (Table to be calculated) : Input number of terms : 5\nExpected Output :5 X 0 = 0                                                                        \r\n5 X 1 = 5                                                                        \r\n5 X 2 = 10                                                                       \r\n5 X 3 = 15                                                                       \r\n5 X 4 = 20                                                                       \r\n5 X 5 = 25", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise14 {\r\n\r\n   public static void main(String[] args)\r\n\r\n{\r\n   int j,n;\r\n\r\n   System.out.print(\"Input the number(Table to be calculated): \");\r\n{\r\n   System.out.print(\"Input number of terms : \");\r\n    Scanner in = new Scanner(System.in);\r\n\t\t    n = in.nextInt();\r\n\r\n   System.out.println (\"\\n\");\r\n   for(j=0;j<=n;j++)\r\n  \r\n     System.out.println(n+\" X \"+j+\" = \" +n*j);\r\n   }\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a program in Java to display the n terms of odd natural number and their sum.Test Data\nInput number of terms is: 5 \nExpected Output :The odd numbers are :                                                            \r\n1                                                                                \r\n3                                                                                \r\n5                                                                                \r\n7                                                                                \r\n9                                                                                \r\nThe Sum of odd Natural Number upto 5 terms is: 25", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise15 {\r\n\r\n   public static void main(String[] args)\r\n\r\n{\r\n   int i,n,sum=0;\r\n\r\n   System.out.print(\"Input number of terms is: \");\r\n{\r\n   Scanner in = new Scanner(System.in);\r\n\t\t    n = in.nextInt();\r\n  System.out.println (\"\\nThe odd numbers are :\");\r\n   for(i=1;i<=n;i++)\r\n\r\n   {\r\n     System.out.println (2*i-1);\r\n     sum+=2*i-1;\r\n   }\r\n   System.out.println (\"The Sum of odd Natural Number upto \" +n+\" terms is: \" +sum);\r\n\r\n}\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a program in Java to display the pattern like right angle triangle with a number.Test Data\nInput number of rows : 10 \nExpected Output :1                                                                                \r\n12                                                                               \r\n123                                                                              \r\n1234                                                                             \r\n12345                                                                            \r\n123456                                                                           \r\n1234567                                                                          \r\n12345678                                                                         \r\n123456789                                                                        \r\n12345678910", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise16 {\r\n\r\n   public static void main(String[] args)\r\n\r\n{\r\n   int i,j,n;\r\n   System.out.print(\"Input number of rows : \");\r\n Scanner in = new Scanner(System.in);\r\n\t\t    n = in.nextInt();\r\n\r\n   for(i=1;i<=n;i++)\r\n   {\r\n\tfor(j=1;j<=i;j++)\r\n\t  System.out.print(j);\r\n\r\n    System.out.println(\"\");\r\n    }\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a program in Java to make such a pattern like right angle triangle with a number which will repeat a number in a row.The pattern is as follows :1\r\n22\r\n333\r\n4444", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise17 {\r\n\r\n  public static void main(String[] args)\r\n\r\n\t\t\t{\r\n   \t          int i,j,n;\r\n\r\n               System.out.print(\"Input number of n : \");\r\n            \tScanner in = new Scanner(System.in);\r\n\t\t    n = in.nextInt();\r\n  \r\n               for(i=1;i<=n;i++)\r\n               {\r\n\t           for(j=1;j<=i;j++)\r\n\t            System.out.print(i);\r\n\t          System.out.println(\"\");\r\n              }\r\n            }\r\n            } \r\n\t\t\t \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a program in Java to make such a pattern like right angle triangle with number increased by 1.The pattern like :1\r\n2 3\r\n4 5 6\r\n7 8 9 10", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise18 {\r\n\r\n  public static void main(String[] args)\r\n\r\n{\r\n   \t\tint i,j,n,k=1;\r\n\r\n   \t\tSystem.out.print(\"Input number of rows : \");\r\n\r\n   \t\tScanner in = new Scanner(System.in);\r\n\t\t    n = in.nextInt();\r\n\r\n   \t\tfor(i=1;i<=n;i++)\r\n   \t\t{\r\n\t\tfor(j=1;j<=i;j++)\r\n\t   \tSystem.out.print(k++);\r\n\t   \tSystem.out.println(\"\");\r\n\t   \t}  \t\t\r\n\t}\r\n\t}\r\n\t\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a program in Java to make such a pattern like a pyramid with a number which will repeat the number in the same row.1\r\n      2 2\r\n     3 3 3\r\n    4 4 4 4", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise19 {\r\n\r\n  public static void main(String[] args)\r\n{\r\n   int i,j,n,s,x;\r\n   System.out.print (\"Input number of rows : \");\r\n   Scanner in = new Scanner(System.in);\r\n\t\t    n = in.nextInt();\r\n\r\n   s=n+4-1;\r\n    for(i=1;i<=n;i++)\r\n   {\r\n   for(x=s;x!=0;x--)\r\n    {\r\n   System.out.print(\" \");\r\n    }\r\n    for(j=1;j<=i;j++)\r\n    {\r\n     System.out.print(i+\" \");\r\n     }\r\n\tSystem.out.println();\r\n    s--;\r\n   }\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a program in Java to print the Floyd's Triangle.Test Data\nInput number of rows : 5 \nExpected Output :Input number of rows :  5\r\n1 \r\n2 3 \r\n4 5 6 \r\n7 8 9 10 \r\n11 12 13 14 15", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main {\r\npublic static void main(String[] args)\r\n {\r\n   int numberOfRows;\r\n   System.out.print(\"Input number of rows : \");\r\n   Scanner in = new Scanner(System.in);\r\n\t\t    numberOfRows = in.nextInt();\r\n   int number = 1;\r\n   for (int row = 1; row <= numberOfRows; row++)\r\n    {\r\n   for (int column = 1; column <= row; column++)\r\n     {\r\n       System.out.print(number + \" \");\r\n       number++;\r\n     }\r\n     System.out.println();\r\n    }\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a program in Java to display the pattern like a diamond.Test Data\nInput number of rows (half of the diamond) : 7 \nExpected Output :*                                                                          \r\n     ***                                                                         \r\n    *****                                                                        \r\n   *******                                                                       \r\n  *********                                                                      \r\n ***********                                                                     \r\n*************                                                                    \r\n ***********                                                                     \r\n  *********                                                                      \r\n   *******                                                                       \r\n    *****                                                                        \r\n     ***                                                                         \r\n      *", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise21 {\r\n\r\n  public static void main(String[] args)\r\n\t  \r\n\t  \r\n{\r\n   int i,j,r;\r\n   System.out.print(\"Input number of rows (half of the diamond) : \");\r\n   Scanner in = new Scanner(System.in);\r\n\t\t    r = in.nextInt();\r\n   for(i=0;i<=r;i++)\r\n   {\r\n     for(j=1;j<=r-i;j++)\r\n     System.out.print(\" \");\r\n     for(j=1;j<=2*i-1;j++)\r\n       System.out.print(\"*\");\r\n     System.out.print(\"\\n\");\r\n   }\r\n \r\n   for(i=r-1;i>=1;i--)\r\n   {\r\n     for(j=1;j<=r-i;j++)\r\n     System.out.print(\" \");\r\n     for(j=1;j<=2*i-1;j++)\r\n       System.out.print(\"*\");\r\n     System.out.print(\"\\n\");\r\n   }\r\n \r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to display Pascal's triangle.Test Data\nInput number of rows: 5 \nExpected Output :Input number of rows: 5                                                          \r\n      1                                                                          \r\n     1 1                                                                         \r\n    1 2 1                                                                        \r\n   1 3 3 1                                                                       \r\n  1 4 6 4 1", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise22 {\r\n\r\n  public static void main(String[] args)\r\n{\r\n    int no_row,c=1,blk,i,j;\r\n    System.out.print(\"Input number of rows: \");\r\n    Scanner in = new Scanner(System.in);\r\n\t\t    no_row = in.nextInt();\r\n    for(i=0;i<no_row;i++)\r\n    {\r\n        for(blk=1;blk<=no_row-i;blk++)\r\n        System.out.print(\" \");\r\n        for(j=0;j<=i;j++)\r\n        {\r\n            if (j==0||i==0)\r\n                c=1;\r\n            else\r\n               c=c*(i-j+1)/j;\r\n            System.out.print(\" \"+c);\r\n        }\r\n        System.out.print(\"\\n\");\r\n    }\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a java program to generate a following *'s triangle.Test Data\nInput the number: 6 \nExpected Output :******                                                   \r\n *****                                                   \r\n  ****                                                   \r\n   ***                                                   \r\n    **                                                   \r\n     *", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise23 {\r\n   public static void main(String args[]) \r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the number: \");\r\n        int n = in.nextInt();\r\n        for (int i = n; i > 0; i--) \r\n        {\r\n            for (int spc = n - i; spc > 0; spc--) \r\n            {\r\n                System.out.print(\" \");\r\n            }\r\n            for (int j = 0; j < i; j++) \r\n            {\r\n                System.out.print(\"*\");\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a java program to generate a following @'s triangle.Test Data\nInput the number: 6 \nExpected Output :@                                                  \r\n     @@                                                  \r\n    @@@                                                  \r\n   @@@@                                                  \r\n  @@@@@                                                  \r\n @@@@@@", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise24 {\r\n   public static void main(String args[]) \r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the number: \");\r\n        int n = in.nextInt();\r\n\r\n        for (int i = 0; i < n; i++) \r\n        {\r\n            for (int spc = n - i; spc > 0; spc--) \r\n            {\r\n                System.out.print(\" \");\r\n            }\r\n            for (int j = 0; j <= i; j++) \r\n            {\r\n                System.out.print(\"@\");\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to display the number rhombus structure.Test Data\nInput the number: 7 \nExpected Output :1                                                  \r\n     212                                                 \r\n    32123                                                \r\n   4321234                                               \r\n  543212345                                              \r\n 65432123456                                             \r\n7654321234567                                            \r\n 65432123456                                             \r\n  543212345                                              \r\n   4321234                                               \r\n    32123                                                \r\n     212                                                 \r\n      1", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise25 {\r\n  public static void main(String args[]) \r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the number:  \");\r\n        int n = in.nextInt();\r\n        int count = 1;\r\n        int no_of_spaces = 1;\r\n        int start = 0;\r\n\r\n        for (int i = 1; i < (n * 2); i++) \r\n        {\r\n\r\n            for (int spc = n - no_of_spaces; spc > 0; spc--) \r\n            {\r\n                System.out.print(\" \");\r\n            }\r\n            if (i < n) \r\n            {\r\n                start = i;          //for number\r\n                no_of_spaces++;    //for spaces\r\n            } else \r\n            {\r\n                start = n * 2 - i;   //for number\r\n                no_of_spaces--;      //for space\r\n            }\r\n            for (int j = 0; j < count; j++) \r\n            {\r\n                System.out.print(start);\r\n                if (j < count / 2) \r\n                {\r\n                    start--;\r\n                } else \r\n                {\r\n                    start++;\r\n                }\r\n            }\r\n            if (i < n)\r\n            {\r\n                count = count + 2;\r\n            } else {\r\n                count = count - 2;\r\n            }\r\n\r\n            System.out.println();\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to display the following character rhombus structure.Test Data\nInput the number: 7 \nExpected Output :A                                                  \r\n     ABA                                                 \r\n    ABCBA                                                \r\n   ABCDCBA                                               \r\n  ABCDEDCBA                                              \r\n ABCDEFEDCBA                                             \r\nABCDEFGFEDCBA                                            \r\n ABCDEFEDCBA                                             \r\n  ABCDEDCBA                                              \r\n   ABCDCBA                                               \r\n    ABCBA                                                \r\n     ABA                                                 \r\n      A", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise26 {\r\n    public static void main(String args[])\r\n    {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"Input the number: \");\r\n        int n = sc.nextInt();\r\n        int count = 1;\r\n        int count2 = 1;\r\n        char c = 'A';\r\n\r\n        for (int i = 1; i < (n * 2); i++) \r\n        {\r\n            for (int spc = n - count2; spc > 0; spc--)   \r\n            //print space\r\n            {\r\n                System.out.print(\" \");\r\n            }\r\n            if (i < n) \r\n            {\r\n                count2++;\r\n            } \r\n            else \r\n            {\r\n                count2--;\r\n            }\r\n            for (int j = 0; j < count; j++) \r\n            {\r\n                System.out.print(c);//print Character\r\n                if (j < count / 2) \r\n                {\r\n                    c++;\r\n                } else \r\n                {\r\n                    c--;\r\n                }\r\n            }\r\n            if (i < n)\r\n            {\r\n                count = count + 2;\r\n            } \r\n            else\r\n            {\r\n                count = count - 2;\r\n            }\r\n            c = 'A';\r\n\r\n            System.out.println();\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-26.php"}, {"exercise_number": 27, "exercise_content": "27. Write a Java program that reads an integer and check whether it is negative, zero, or positive.Test Data\nInput a number: 7 \nExpected Output :Number is positive", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise27 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a number: \");\r\n        int n = in.nextInt();\r\n\r\n        if (n > 0)\r\n        {\r\n            System.out.println(\"Number is positive\");\r\n        }\r\n        else if (n < 0)\r\n        {\r\n            System.out.println(\"Number is negative\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Number is zero\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-27.php"}, {"exercise_number": 28, "exercise_content": "28. Write a Java program that reads a floating-point number. If the number is zero it prints \"zero\", otherwise, print \"positive\" or \"negative\". Add \"small\" if the absolute value of the number is less than 1, or \"large\" if it exceeds 1,000,000.Test Data\nInput a number: -2534 \nExpected Output :Negative", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise28 {\r\n\r\n   public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a number: \");\r\n        double n = in.nextDouble();\r\n\r\n        if (n > 0)\r\n        {\r\n            if (n < 1)\r\n            {\r\n                System.out.println(\"Positive small\");\r\n            }\r\n            else if (n > 1000000)\r\n            {\r\n                System.out.println(\"Positive large\");\r\n            }\r\n            else\r\n            {\r\n                System.out.println(\"Positive\");\r\n            }\r\n        }\r\n        else if (n < 0)\r\n        {\r\n            if (Math.abs(n) < 1)\r\n            {\r\n                System.out.println(\"Negative small\");\r\n            }\r\n            else if (Math.abs(n) > 1000000)\r\n            {\r\n                System.out.println(\"Negative large\");\r\n            }\r\n            else\r\n            {\r\n                System.out.println(\"Negative\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Zero\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-28.php"}, {"exercise_number": 29, "exercise_content": "29. Write a Java program that reads an positive integer and count the number of digits the number (less than ten billion) has.Test Data\nInput an integer number less than ten billion: 125463\nExpected Output :Number of digits in the number: 6", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise29 {\r\n\r\n   public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input an integer number less than ten billion: \");\r\n\r\n        if (in.hasNextLong())\r\n        {\r\n\r\n            long n = in.nextLong();\r\n\r\n            if (n < 0)\r\n            {\r\n                n *= -1;\r\n            }\r\n            if (n >= 10000000000L)\r\n            {\r\n                System.out.println(\"Number is greater or equals 10,000,000,000!\");\r\n            }\r\n            else\r\n            {\r\n                int digits = 1;\r\n                if (n >= 10 && n < 100)\r\n                {\r\n                    digits = 2;\r\n                }\r\n                else if (n >= 100 && n < 1000)\r\n                {\r\n                    digits = 3;\r\n                }\r\n                else if (n >= 1000 && n < 10000)\r\n                {\r\n                    digits = 4;\r\n                }\r\n                else if (n >= 10000 && n < 100000)\r\n                {\r\n                    digits = 5;\r\n                }\r\n                else if (n >= 100000 && n < 1000000)\r\n                {\r\n                    digits = 6;\r\n                }\r\n                else if (n >= 1000000 && n < 10000000)\r\n                {\r\n                    digits = 7;\r\n                }\r\n                else if (n >= 10000000 && n < 100000000)\r\n                {\r\n                    digits = 8;\r\n                }\r\n                else if (n >= 100000000 && n < 1000000000)\r\n                {\r\n                    digits = 9;\r\n                }\r\n                else if (n >= 1000000000 && n < 10000000000L)\r\n                {\r\n                    digits = 10;\r\n                }\r\n                System.out.println(\"Number of digits in the number: \" + digits);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"The number is not an integer\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-29.php"}, {"exercise_number": 30, "exercise_content": "30. Write a Java program that accepts three numbers and prints \"All numbers are equal\" if all three numbers are equal, \"All numbers are different\" if all three numbers are different and \"Neither all are equal or different\" otherwise.Test Data\nInput first number: 2564\nInput second number: 3526 \nInput third number: 2456\nExpected Output :All numbers are different", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise30 {\r\n\r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n\r\n        System.out.print(\"Input first number: \");\r\n        int x = in.nextInt();\r\n        System.out.print(\"Input second number: \");\r\n        int y = in.nextInt();\r\n        System.out.print(\"Input third number: \");\r\n        int z = in.nextInt();\r\n\r\n        if (x == y && x == z)\r\n        {\r\n            System.out.println(\"All numbers are equal\");\r\n        }\r\n        else if ((x == y) || (x == z) || (z == y))\r\n        {\r\n            System.out.println(\"Neither all are equal or different\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"All numbers are different\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-30.php"}, {"exercise_number": 31, "exercise_content": "31. Write a program that accepts three numbers from the user and prints \"increasing\" if the numbers are in increasing order, \"decreasing\" if the numbers are in decreasing order, and \"Neither increasing or decreasing order\" otherwise.Test Data\nInput first number: 1524 \nInput second number: 2345\nInput third number: 3321\nExpected Output :Increasing order", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise31 {\r\n   public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input first number: \");\r\n        double x = in.nextDouble();\r\n        System.out.print(\"Input second number: \");\r\n        double y = in.nextDouble();\r\n       System.out.print(\"Input third number: \");\r\n        double z = in.nextDouble();\r\n        if (x < y && y < z)\r\n        {\r\n            System.out.println(\"Increasing order\");\r\n        }\r\n        else if (x > y && y > z)\r\n        {\r\n            System.out.println(\"Decreasing order\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Neither increasing or decreasing order\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-31.php"}, {"exercise_number": 32, "exercise_content": "32. Write a Java program that accepts two floating\u00adpoint numbers and checks whether they are\nthe same up to two decimal places.Test Data\nInput first floating\u00adpoint number: 1235\nInput second floating\u00adpoint number: 2534 \nExpected Output :These numbers are different.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise32 {\r\n\r\npublic static void main(String[] args) { \r\n Scanner input = new Scanner(System.in); \r\n System.out.print(\"Input first floating\u00adpoint number: \"); \r\n double num1 = input.nextDouble(); \r\n System.out.print(\"Input second floating\u00adpoint number: \"); \r\n double num2 = input.nextDouble(); \r\n input.close(); \r\n  \r\n if (Math.abs(num1 - num2) <= 0.01) { \r\n     System.out.println(\"These numbers are the same.\"); \r\n } \r\n else { \r\n     System.out.println(\"These numbers are different.\"); \r\n } \r\n    } \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/conditional-statement/java-conditional-statement-exercise-32.php"}], "Array": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to sort a numeric array and a string array.", "exercise_solution_code": "import java.util.Arrays; \r\npublic class Exercise1 {\r\npublic static void main(String[] args){   \r\n    \r\n    int[] my_array1 = {\r\n            1789, 2035, 1899, 1456, 2013, \r\n            1458, 2458, 1254, 1472, 2365, \r\n            1456, 2165, 1457, 2456};\r\n            \r\n    String[] my_array2 = {\r\n            \"Java\",\r\n\t\t\t\r\n            \"Python\",\r\n            \"PHP\",\r\n            \"C#\",\r\n            \"C Programming\",\r\n            \"C++\"\r\n        };        \r\n    System.out.println(\"Original numeric array : \"+Arrays.toString(my_array1));\r\n    Arrays.sort(my_array1);\r\n    System.out.println(\"Sorted numeric array : \"+Arrays.toString(my_array1));\r\n    \r\n    System.out.println(\"Original string array : \"+Arrays.toString(my_array2));\r\n    Arrays.sort(my_array2);\r\n    System.out.println(\"Sorted string array : \"+Arrays.toString(my_array2));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to sum values of an array.", "exercise_solution_code": "public class Exercise2 {\r\npublic static void main(String[] args) {      \r\nint my_array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\r\nint sum = 0;\r\n\r\nfor (int i : my_array)\r\n    sum += i;\r\nSystem.out.println(\"The sum is \" + sum);\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to print the following grid.Expected Output :- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -                                                                                           \r\n- - - - - - - - - -", "exercise_solution_code": "public class Main {\r\npublic static void main(String[] args) {   \r\n int [][]a = new int[10][10];    \r\n for(int i = 0; i < 10; i++)\r\n   {\r\n      for(int j = 0; j < 10; j++)\r\n      {\r\n         System.out.printf(\"%2d \", a[i][j]);\r\n      }\r\n      System.out.println();\r\n   }\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to calculate the average value of array elements.", "exercise_solution_code": "public class Exercise4 {\r\npublic static void main(String[] args) {   \r\n \r\n       int[] numbers = new int[]{20, 30, 25, 35, -16, 60, -100};\r\n       //calculate sum of all array elements\r\n       int sum = 0;\r\n       for(int i=0; i < numbers.length ; i++)\r\n        sum = sum + numbers[i];\r\n       //calculate average value\r\n        double average = sum / numbers.length;\r\n        System.out.println(\"Average value of the array elements is : \" + average); \r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to test if an array contains a specific value.", "exercise_solution_code": "public class Exercise5 {\r\n  public static boolean contains(int[] arr, int item) {\r\n      for (int n : arr) {\r\n         if (item == n) {\r\n            return true;\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n   public static void main(String[] args) {\r\n          int[] my_array1 = {\r\n            1789, 2035, 1899, 1456, 2013, \r\n            1458, 2458, 1254, 1472, 2365, \r\n            1456, 2265, 1457, 2456};\r\n      System.out.println(contains(my_array1, 2013));\r\n      System.out.println(contains(my_array1, 2015));\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to find the index of an array element.", "exercise_solution_code": "public class Exercise6 {\r\n       public static int  findIndex (int[] my_array, int t) {\r\n        if (my_array == null) return -1;\r\n        int len = my_array.length;\r\n        int i = 0;\r\n        while (i < len) {\r\n            if (my_array[i] == t) return i;\r\n            else i=i+1;\r\n        }\r\n        return -1;\r\n    }\r\n    public static void main(String[] args) {\r\n      int[] my_array = {25, 14, 56, 15, 36, 56, 77, 18, 29, 49};\r\n      System.out.println(\"Index position of 25 is: \" + findIndex(my_array, 25));\r\n      System.out.println(\"Index position of 77 is: \" + findIndex(my_array, 77));\r\n       }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to remove a specific element from an array.", "exercise_solution_code": "import java.util.Arrays; \r\npublic class Exercise7 {\r\n \r\npublic static void main(String[] args) {\r\n   int[] my_array = {25, 14, 56, 15, 36, 56, 77, 18, 29, 49};\r\n   \r\n   System.out.println(\"Original Array : \"+Arrays.toString(my_array));     \r\n   \r\n  // Remove the second element (index->1, value->14) of the array\r\n   int removeIndex = 1;\r\n\r\n   for(int i = removeIndex; i < my_array.length -1; i++){\r\n        my_array[i] = my_array[i + 1];\r\n      }\r\n// We cannot alter the size of an array , after the removal, the last and second last element in the array will exist twice\r\n    System.out.println(\"After removing the second element: \"+Arrays.toString(my_array));\r\n }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to copy an array by iterating the array.", "exercise_solution_code": "import java.util.Arrays; \r\npublic class Exercise8 {\r\n public static void main(String[] args) {\r\n   int[] my_array = {25, 14, 56, 15, 36, 56, 77, 18, 29, 49};\r\n   int[] new_array = new int[10];     \r\n \r\n   System.out.println(\"Source Array : \"+Arrays.toString(my_array));     \r\n   \r\n   for(int i=0; i < my_array.length; i++) {\r\n    new_array[i] = my_array[i];\r\n}\r\n   System.out.println(\"New Array: \"+Arrays.toString(new_array));\r\n }\r\n }\r\n \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to insert an element (specific position) into an array.", "exercise_solution_code": "import java.util.Arrays; \r\npublic class Exercise9 {\r\n \r\npublic static void main(String[] args) {\r\n\r\n   int[] my_array = {25, 14, 56, 15, 36, 56, 77, 18, 29, 49};\r\n\r\n    // Insert an element in 3rd position of the array (index->2, value->5)\r\n   \r\n   int Index_position = 2;\r\n   int newValue    = 5;\r\n\r\n  System.out.println(\"Original Array : \"+Arrays.toString(my_array));     \r\n   \r\n  for(int i=my_array.length-1; i > Index_position; i--){\r\n    my_array[i] = my_array[i-1];\r\n   }\r\n   my_array[Index_position] = newValue;\r\n   System.out.println(\"New Array: \"+Arrays.toString(my_array));\r\n }\r\n }\r\n \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to find the maximum and minimum value of an array.", "exercise_solution_code": "import java.util.Arrays; \r\npublic class Exercise10 {\r\n \r\n  static int max;\r\n  static int min;\r\n\r\n    public static void max_min(int my_array[]) {\r\n        max = my_array[0];\r\n        min = my_array[0];\r\n        int len = my_array.length;\r\n        for (int i = 1; i < len - 1; i = i + 2) {\r\n            if (i + 1 > len) {\r\n                if (my_array[i] > max) max = my_array[i];\r\n                if (my_array[i] < min) min = my_array[i];\r\n            }\r\n            if (my_array[i] > my_array[i + 1]) {\r\n                if (my_array[i] > max) max = my_array[i];\r\n                if (my_array[i + 1] < min) min = my_array[i + 1];\r\n            }\r\n            if (my_array[i] < my_array[i + 1]) {\r\n                if (my_array[i] < min) min = my_array[i];\r\n                if (my_array[i + 1] > max) max = my_array[i + 1];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n           int[] my_array = {25, 14, 56, 15, 36, 56, 77, 18, 29, 49};\r\n        max_min(my_array);\r\n        System.out.println(\" Original Array: \"+Arrays.toString(my_array));\r\n        System.out.println(\" Maximum value for the above array = \" + max);\r\n        System.out.println(\" Minimum value for the above array = \" + min);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to reverse an array of integer values.", "exercise_solution_code": "import java.util.Arrays; \r\npublic class Exercise11 {\r\npublic static void main(String[] args){   \r\n    int[] my_array1 = {\r\n            1789, 2035, 1899, 1456, 2013, \r\n            1458, 2458, 1254, 1472, 2365, \r\n            1456, 2165, 1457, 2456};\r\n  System.out.println(\"Original array : \"+Arrays.toString(my_array1));  \r\n   for(int i = 0; i < my_array1.length / 2; i++)\r\n  {\r\n    int temp = my_array1[i];\r\n    my_array1[i] = my_array1[my_array1.length - i - 1];\r\n    my_array1[my_array1.length - i - 1] = temp;\r\n  }\r\n    System.out.println(\"Reverse array : \"+Arrays.toString(my_array1));\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to find the duplicate values of an array of integer values.", "exercise_solution_code": "import java.util.Arrays; \r\npublic class Exercise12 {\r\n  public static void main(String[] args) \r\n    {\r\n        int[] my_array = {1, 2, 5, 5, 6, 6, 7, 2};\r\n \r\n        for (int i = 0; i < my_array.length-1; i++)\r\n        {\r\n            for (int j = i+1; j < my_array.length; j++)\r\n            {\r\n                if ((my_array[i] == my_array[j]) && (i != j))\r\n                {\r\n                    System.out.println(\"Duplicate Element : \"+my_array[j]);\r\n                }\r\n            }\r\n        }\r\n    }    \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to find the duplicate values of an array of string values.", "exercise_solution_code": "public class Exercise13 {\r\npublic static void main(String[] args) \r\n    {\r\n        String[] my_array = {\"bcd\", \"abd\", \"jude\", \"bcd\", \"oiu\", \"gzw\", \"oiu\"};\r\n \r\n        for (int i = 0; i < my_array.length-1; i++)\r\n        {\r\n            for (int j = i+1; j < my_array.length; j++)\r\n            {\r\n                if( (my_array[i].equals(my_array[j])) && (i != j) )\r\n                {\r\n                    System.out.println(\"Duplicate Element is : \"+my_array[j]);\r\n                }\r\n            }\r\n        }\r\n    }    \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to find the common elements between two arrays (string values).", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise14 {\r\npublic static void main(String[] args) \r\n    {\r\n       String[] array1 = {\"Python\", \"JAVA\", \"PHP\", \"C#\", \"C++\", \"SQL\"};\r\n \r\n       String[] array2 = {\"MySQL\", \"SQL\", \"SQLite\", \"Oracle\", \"PostgreSQL\", \"DB2\", \"JAVA\"};\r\n       \r\n       System.out.println(\"Array1 : \"+Arrays.toString(array1));\r\n       System.out.println(\"Array2 : \"+Arrays.toString(array2));\r\n \r\n       HashSet<String> set = new HashSet<String>();\r\n \r\n        for (int i = 0; i < array1.length; i++)\r\n        {\r\n            for (int j = 0; j < array2.length; j++)\r\n            {\r\n                if(array1[i].equals(array2[j]))\r\n                {\r\n                    set.add(array1[i]);\r\n                }\r\n            }\r\n        }\r\n \r\n        System.out.println(\"Common element : \"+(set));     //OUTPUT : [THREE, FOUR, FIVE]\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to find the common elements between two arrays of integers.", "exercise_solution_code": "import java.util.Arrays; \r\npublic class Exercise15 {\r\npublic static void main(String[] args) \r\n    {\r\n      int[] array1 = {1, 2, 5, 5, 8, 9, 7, 10};\r\n      int[] array2 = {1, 0, 6, 15, 6, 4, 7, 0};\r\n \r\n       System.out.println(\"Array1 : \"+Arrays.toString(array1));\r\n       System.out.println(\"Array2 : \"+Arrays.toString(array2));\r\n \r\n      \r\n        for (int i = 0; i < array1.length; i++)\r\n        {\r\n            for (int j = 0; j < array2.length; j++)\r\n            {\r\n                if(array1[i] == (array2[j]))\r\n                {\r\n                 \r\n                 System.out.println(\"Common element is : \"+(array1[i]));\r\n                 }\r\n            }\r\n        }\r\n \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to remove duplicate elements from an array.", "exercise_solution_code": "import java.util.Arrays;\r\n \r\npublic class Exercise16 {\r\n   static void unique_array(int[] my_array)\r\n    {\r\n        System.out.println(\"Original Array : \");\r\n         \r\n        for (int i = 0; i < my_array.length; i++)\r\n        {\r\n            System.out.print(my_array[i]+\"\\t\");\r\n        }\r\n         \r\n        //Assuming all elements in input array are unique\r\n         \r\n        int no_unique_elements = my_array.length;\r\n         \r\n        //Comparing each element with all other elements\r\n         \r\n        for (int i = 0; i < no_unique_elements; i++) \r\n        {\r\n            for (int j = i+1; j < no_unique_elements; j++)\r\n            {\r\n                //If any two elements are found equal\r\n                 \r\n                if(my_array[i] == my_array[j])\r\n                {\r\n                    //Replace duplicate element with last unique element\r\n                     \r\n                    my_array[j] = my_array[no_unique_elements-1];\r\n                     \r\n                    no_unique_elements--;\r\n                     \r\n                    j--;\r\n                }\r\n            }\r\n        }\r\n         \r\n        //Copying only unique elements of my_array into array1\r\n         \r\n        int[] array1 = Arrays.copyOf(my_array, no_unique_elements);\r\n         \r\n        //Printing arrayWithoutDuplicates\r\n         \r\n        System.out.println();\r\n         \r\n        System.out.println(\"Array with unique values : \");\r\n         \r\n        for (int i = 0; i < array1.length; i++)\r\n        {\r\n            System.out.print(array1[i]+\"\\t\");\r\n        }\r\n         \r\n        System.out.println();\r\n         \r\n        System.out.println(\"---------------------------\");\r\n    }\r\n     \r\n    public static void main(String[] args) \r\n    {        \r\n        unique_array(new int[] {0, 3, -2, 4, 3, 2});\r\n         \r\n        unique_array(new int[] {10, 22, 10, 20, 11, 22});\r\n         \r\n      }    \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to find the second largest element in an array.", "exercise_solution_code": "import java.util.Arrays;\r\npublic class Main {\r\npublic static void main(String[] args) {\r\nint[] my_array = {\r\n            10789, 2035, 1899, 1456, 2013, \r\n            1458, 2458, 1254, 1472, 2365, \r\n            1456, 2165, 1457, 2456};\r\nSystem.out.println(\"Original numeric array : \"+Arrays.toString(my_array));            \r\nArrays.sort(my_array);\r\nint index = my_array.length-1;\r\nwhile(my_array[index]==my_array[my_array.length-1]){\r\nindex--;\r\n}\r\nSystem.out.println(\"Second largest value: \" + my_array[index]);\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to find the second smallest element in an array.", "exercise_solution_code": "import java.util.Arrays;\r\npublic class Exercise18 {\r\n  public static void main(String[] args) {\r\n\r\n    int[] my_array = {-1, 4, 0, 2, 7, -3};\r\n    System.out.println(\"Original numeric array : \"+Arrays.toString(my_array));\r\n    int min = Integer.MAX_VALUE;\r\n    int second_min = Integer.MAX_VALUE;\r\n    for (int i = 0; i < my_array.length; i++) {\r\n        if(my_array[i]==min){\r\n          second_min=min;\r\n        } else if (my_array[i] < min) {\r\n            second_min = min;\r\n            min = my_array[i];\r\n        } else if (my_array[i] < second_min) {\r\n            second_min = my_array[i];\r\n        }\r\n\r\n    }\r\n    System.out.println(\"Second lowest number is : \" + second_min);\r\n    }\r\n}\r\n \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to add two matrices of the same size.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise19 {\r\n public static void main(String args[])\r\n   {\r\n      int m, n, c, d;\r\n      Scanner in = new Scanner(System.in);\r\n \r\n      System.out.println(\"Input number of rows of matrix\");\r\n      m = in.nextInt();\r\n      System.out.println(\"Input number of columns of matrix\");\r\n      n  = in.nextInt();\r\n \r\n      int array1[][] = new int[m][n];\r\n      int array2[][] = new int[m][n];\r\n      int sum[][] = new int[m][n];\r\n \r\n      System.out.println(\"Input elements of first matrix\");\r\n \r\n      for (  c = 0 ; c < m ; c++ )\r\n         for ( d = 0 ; d < n ; d++ )\r\n            array1[c][d] = in.nextInt();\r\n \r\n      System.out.println(\"Input the elements of second matrix\");\r\n \r\n      for ( c = 0 ; c < m ; c++ )\r\n         for ( d = 0 ; d < n ; d++ )\r\n            array2[c][d] = in.nextInt();\r\n \r\n      for ( c = 0 ; c < m ; c++ )\r\n         for ( d = 0 ; d < n ; d++ )\r\n             sum[c][d] = array1[c][d] + array2[c][d]; \r\n \r\n      System.out.println(\"Sum of the matrices:-\");\r\n \r\n      for ( c = 0 ; c < m ; c++ )\r\n      {\r\n         for ( d = 0 ; d < n ; d++ )\r\n            System.out.print(sum[c][d]+\"\\t\");\r\n \r\n         System.out.println();\r\n      }\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program to convert an array to ArrayList.", "exercise_solution_code": "import java.util.ArrayList;\r\n  import java.util.Arrays;\r\npublic class Exercise20 {\r\n  public static void  main(String[] args) \r\n  {\r\n  String[]  my_array = new String[] {\"Python\", \"JAVA\", \"PHP\",  \"Perl\", \"C#\", \"C++\"};\r\n  ArrayList<String>  list = new ArrayList<String>(Arrays.asList(my_array));\r\n  \r\n  System.out.println(list);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to convert an ArrayList to an array.", "exercise_solution_code": "import java.util.ArrayList;\r\n  import java.util.Arrays;\r\n  public class Exercise21 {\r\n  public static void  main(String[] args)\r\n  {\r\n  ArrayList<String> list = new ArrayList<String>();\r\n\r\n  list.add(\"Python\");\r\n \r\n  list.add(\"Java\");\r\n \r\n  list.add(\"PHP\");\r\n  \r\n  list.add(\"C#\");\r\n \r\n  list.add(\"C++\");\r\n  \r\n  list.add(\"Perl\");\r\n \r\n  String[]  my_array = new String[list.size()];\r\n  \r\n  list.toArray(my_array);\r\n  \r\n  for (String  string : my_array)\r\n  {\r\n  System.out.println(string);\r\n  }\r\n  }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to find all pairs of elements in an array whose sum is equal to a specified number.", "exercise_solution_code": "public class Exercise22 {\r\nstatic void  pairs_value(int inputArray[], int inputNumber)\r\n  {\r\n  System.out.println(\"Pairs of elements and their sum : \");\r\n \r\n  for (int i =  0; i < inputArray.length; i++)\r\n  {\r\n  for (int j  = i+1; j < inputArray.length; j++)\r\n  {\r\n  if(inputArray[i]+inputArray[j] == inputNumber)\r\n  {\r\n  System.out.println(inputArray[i]+\" + \"+inputArray[j]+\" =  \"+inputNumber);\r\n  }\r\n  }\r\n  }\r\n  }\r\n  \r\n  public static void  main(String[] args)\r\n  {\r\n  pairs_value(new int[] {2, 7, 4, -5, 11, 5, 20}, 15);\r\n  \r\n  pairs_value(new int[] {14, -15, 9, 16, 25, 45, 12, 8}, 30);\r\n  \r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java program to test the equality of two arrays.", "exercise_solution_code": "public class Exercise23 {\r\nstatic void  equality_checking_two_arrays(int[] my_array1, int[] my_array2)\r\n  {\r\n  boolean  equalOrNot = true;\r\n  \r\n  if(my_array1.length == my_array2.length)\r\n  {\r\n  for (int i  = 0; i < my_array1.length; i++)\r\n  {\r\n  if(my_array1[i] != my_array2[i])\r\n  {\r\n  equalOrNot = false;\r\n  }\r\n  }\r\n  }\r\n  else\r\n  {\r\n  equalOrNot  = false;\r\n  }\r\n  \r\n  if  (equalOrNot)\r\n  {\r\n  System.out.println(\"Two arrays are equal.\");\r\n  }\r\n  else\r\n  {\r\n  System.out.println(\"Two  arrays are not equal.\");\r\n  }\r\n  }\r\n  \r\n  public static void  main(String[] args)\r\n  {\r\n  int[] array1 =  {2, 5, 7, 9, 11};\r\n  int[] array2 =  {2, 5, 7, 8, 11};\r\n  int[] array3 =  {2, 5, 7, 9, 11};\r\n  \r\n  equality_checking_two_arrays(array1,  array2);\r\n  equality_checking_two_arrays(array1, array3);\r\n  }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to find a missing number in an array.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise24 {\r\n public static void main(String[] args) {\r\n\r\n   int total_num;\r\n   int[] numbers = new int[]{1,2,3,4,6,7};\r\n   total_num = 7;\r\n   int expected_num_sum = total_num * ((total_num + 1) / 2);\r\n   int num_sum = 0;\r\n   for (int i: numbers) {\r\n    num_sum += i;\r\n   }\r\n       System.out.print( expected_num_sum - num_sum);\r\n\t   System.out.print(\"\\n\");\r\n  }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to find common elements from three sorted (in non-decreasing order) arrays.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise25 {\r\npublic static void main(String[] args) {\r\n\tArrayList<Integer> common = new ArrayList<Integer>();\r\n   int array1[] = {2, 4, 8};\r\n   int array2[] = {2, 3, 4, 8, 10, 16};\r\n   int array3[] = {4, 8, 14, 40};\r\n\tint x = 0, y = 0, z = 0;\r\n\twhile (x < array1.length && y < array2.length && z < array3.length){\r\n\t\tif (array1[x] == array2[y] && array2[y] == array3[z]){\r\n\t\t\tcommon.add(array1[x]);\r\n\t\t\tx++;\r\n\t\t\ty++;\r\n\t\t\tz++;\r\n\t\t}\r\n\t\telse if (array1[x] < array2[y])\r\n\t\t\tx++;\r\n\t\telse if (array2[y] < array3[z])\r\n\t\t\ty++;\r\n\t\telse\r\n\t\t\tz++;\r\n\t}\r\n\tSystem.out.println(\"Common elements from three sorted (in non-decreasing order ) arrays: \");\r\nSystem.out.println(common);\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to move all 0's to the end of an array. Maintain the relative order of the other (non-zero) array elements.", "exercise_solution_code": "import java.util.*;\r\n public class Exercise26 {\r\n     public static void main(String[] args) throws Exception {\r\n        int[] array_nums = {0,0,1,0,3,0,5,0,6};\r\n         int i = 0;\r\n\t\tSystem.out.print(\"\\nOriginal array: \\n\");\r\n\t\tfor (int n : array_nums)\r\n            System.out.print(n+\"  \");\r\n\t\t\r\n        for(int j = 0, l = array_nums.length; j < l;) {\r\n            if(array_nums[j] == 0)\r\n                j++;\r\n            else {\r\n                int temp = array_nums[i];\r\n                array_nums[i] = array_nums[j];\r\n                array_nums[j] = temp;\r\n                i ++;\r\n                j ++;\r\n            }\r\n        }\r\n        while (i < array_nums.length)\r\n            array_nums[i++] = 0;\r\n\t\tSystem.out.print(\"\\nAfter moving 0's to the end of the array: \\n\");\r\n        for (int n : array_nums)\r\n            System.out.print(n+\"  \");\r\n\t\t\tSystem.out.print(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-26.php"}, {"exercise_number": 27, "exercise_content": "27. Write a Java program to find the number of even and odd integers in a given array of integers.", "exercise_solution_code": "import java.util.Arrays; \r\n public class Exercise27 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {5, 7, 2, 4, 9};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint ctr = 0;\r\n\tfor(int i = 0; i < array_nums.length; i++)\r\n\t{\r\n\t\tif(array_nums[i] % 2 == 0)\r\n\t\t\tctr++;\r\n\t}\r\n\tSystem.out.println(\"Number of even numbers : \"+ctr);\r\n\tSystem.out.println(\"Number of odd numbers  : \"+(array_nums.length-ctr));\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-27.php"}, {"exercise_number": 28, "exercise_content": "28. Write a Java program to get the difference between the largest and smallest values in an array of integers. The length of the array must be 1 and above.", "exercise_solution_code": "import java.util.Arrays; \r\n public class Exercise28 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {5, 7, 2, 4, 9};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint max_val = array_nums[0];\r\n\tint min = array_nums[0];\r\n\tfor(int i = 1; i < array_nums.length; i++)\r\n\t{\r\n\t\tif(array_nums[i] > max_val)\r\n\t\t\tmax_val = array_nums[i];\r\n\t\telse if(array_nums[i] < min)\r\n\t\t\tmin = array_nums[i];\r\n\t}\r\n\tSystem.out.println(\"Difference between the largest and smallest values of the said array: \"+(max_val-min));\t\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-28.php"}, {"exercise_number": 29, "exercise_content": "29. Write a Java program to compute the average value of an array of integers except the largest and smallest values.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise29 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {5, 7, 2, 4, 9};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint max = array_nums[0];\r\n\tint min = array_nums[0];\r\n\tfloat sum = array_nums[0];\r\n\tfor(int i = 1; i < array_nums.length; i++)\r\n\t{\r\n\t\tsum  += array_nums[i];\r\n\t\tif(array_nums[i] > max)\r\n\t\t\tmax = array_nums[i];\r\n\t\telse if(array_nums[i] < min)\r\n\t\t\tmin = array_nums[i];\r\n\t}\r\n\tfloat x = ((sum-max-min) / (array_nums.length - 2));\r\n\tSystem.out.printf(\"Compute the average value of an array of integers except the largest and smallest values: %.2f\",x);\r\n\tSystem.out.print(\"\\n\");\t\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-29.php"}, {"exercise_number": 30, "exercise_content": "30. Write a Java program to check if an array of integers without 0 and -1.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise30 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {50, 77, 12, 54, -11};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tSystem.out.println(\"Result: \"+test(array_nums));\r\n    }\t\r\n    public static boolean test(int[] numbers) {\r\n    for (int number : numbers) {\r\n      if (number == 0 || number == -1) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-30.php"}, {"exercise_number": 31, "exercise_content": "31. Write a Java program to check if the sum of all the 10's in the array is exactly 30. Return false if the condition does not satisfy, otherwise true.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise31 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {10, 77, 10, 54, -11, 10};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint search_num = 10;\r\n    int fixed_sum = 30;\r\n\t\r\n\tSystem.out.println(\"Result: \"+result(array_nums, search_num, fixed_sum));\r\n    }\t\r\n  \r\n  public static boolean result(int[] numbers, int search_num, int fixed_sum) {\r\n   int temp_sum = 0;\r\n   for (int number : numbers) {\r\n      if (number == search_num) {\r\n        temp_sum += search_num;\r\n      }\r\n\r\n      if (temp_sum > fixed_sum) {\r\n        break;\r\n      }\r\n    }\r\n    return temp_sum == fixed_sum;\r\n  }  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-31.php"}, {"exercise_number": 32, "exercise_content": "32. Write a Java program to check if an array of integers contains two specified elements 65 and 77.", "exercise_solution_code": "import java.util.*; \r\nimport java.io.*; \r\n public class Exercise32 {\r\n public static void main(String[] args)\r\n {\r\n    int[] array_nums = {77, 77, 65, 65, 65, 77};\r\n\tSystem.out.println(\"Original Array: \"+Arrays.toString(array_nums)); \r\n\tint num1 = 77;\r\n    int num2 = 65;\r\n\t\r\n\tSystem.out.println(\"Result: \"+result(array_nums, num1, num2));\r\n    }\t\r\n  \r\n  public static boolean result(int[] array_nums, int num1, int num2) {\r\n    for (int number : array_nums) {\r\n      boolean r = number != num1 && number != num2;\r\n      if (r) {\r\n        return false;\r\n        }\r\n     }\r\n        return true;\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-32.php"}, {"exercise_number": 33, "exercise_content": "33. Write a Java program to remove the duplicate elements of a given array and return the new length of the array.\nSample array: [20, 20, 30, 40, 50, 50, 50]\nAfter removing the duplicate elements the program should return 4 as the new length of the array.", "exercise_solution_code": "public class Exercise33 {    \r\n   public static void main(String[] args) {\r\n        int nums[] = {20, 20, 30, 40, 50, 50, 50};  \r\n\t\tSystem.out.println(\"Original array length: \"+nums.length);\r\n\t\tSystem.out.print(\"Array elements are: \");\r\n       for (int i = 0; i < nums.length; i++)\r\n        {\r\n            System.out.print(nums[i]+\" \");\r\n        }\r\n\t\tSystem.out.println(\"\\nThe new length of the array is: \"+array_sort(nums));\r\n\t\t\t\r\n    }\r\n    \r\n    public static int array_sort(int[] nums) {\r\n         int index = 1;\r\n        for (int i = 1; i < nums.length; i++) {\r\n            if (nums[i] != nums[index-1])\r\n                nums[index++] = nums[i];\r\n        }\r\n\t  return index;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-33.php"}, {"exercise_number": 34, "exercise_content": "34. Write a Java program to find the length of the longest consecutive elements sequence from a given unsorted array of integers.\nSample array: [49, 1, 3, 200, 2, 4, 70, 5] \nThe longest consecutive elements sequence is [1, 2, 3, 4, 5], therefore the program will return its length 5.", "exercise_solution_code": "import java.util.HashSet;\r\npublic class Exercise34 {    \r\n   public static void main(String[] args) {\r\n        int nums[] = {49, 1, 3, 200, 2, 4, 70, 5};  \r\n\t\tSystem.out.println(\"Original array length: \"+nums.length);\r\n\t\tSystem.out.print(\"Array elements are: \");\r\n       for (int i = 0; i < nums.length; i++)\r\n        {\r\n            System.out.print(nums[i]+\" \");\r\n        }\r\n\t\tSystem.out.println(\"\\nThe new length of the array is: \"+longest_sequence(nums));\r\n\t\t\t\r\n    }\r\n    \r\n    public static int longest_sequence(int[] nums) {\r\n      final HashSet<Integer> h_set = new HashSet<Integer>();\r\n        for (int i : nums) h_set.add(i);\r\n\r\n        int longest_sequence_len = 0;\r\n        for (int i : nums) {\r\n            int length = 1;\r\n            for (int j = i - 1; h_set.contains(j); --j) {\r\n                h_set.remove(j);\r\n                ++length;\r\n            }\r\n            for (int j = i + 1; h_set.contains(j); ++j) {\r\n                h_set.remove(j);\r\n                ++length;\r\n            }\r\n            longest_sequence_len = Math.max(longest_sequence_len, length);\r\n        }\r\n        return longest_sequence_len;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-34.php"}, {"exercise_number": 35, "exercise_content": "35. Write a Java program to find the sum of the two elements of a given array which is equal to a given integer.\nSample array: [1,2,4,5,6] \nTarget value: 6.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise35\r\n{\r\n        public static ArrayList<Integer> two_sum_array_target(final List<Integer> a, int b) {\r\n        \r\n        HashMap<Integer, Integer> my_map = new HashMap<Integer, Integer>();\r\n        ArrayList<Integer> result = new ArrayList<Integer>();\r\n        result.add(0);\r\n        result.add(1);\r\n        for(int i = 0; i < a.size(); i++){\r\n            if(my_map.containsKey(a.get(i))){\r\n                int index = my_map.get(a.get(i));\r\n                result.set(0, index );\r\n                result.set(1, i );\r\n                break;\r\n            }\r\n            else{\r\n                my_map.put(b - a.get(i), i);\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n  \r\n    public static void main(String[] args){\r\n        ArrayList<Integer> my_array = new ArrayList<Integer>();\r\n        my_array.add(1);\r\n        my_array.add(2);\r\n        my_array.add(4);\r\n        my_array.add(5);\r\n\t\tmy_array.add(6);\r\n\t\tint target = 6;\r\n        ArrayList<Integer> result = two_sum_array_target(my_array, target);\r\n        for(int i : result)\r\n            System.out.print(\"Index: \"+i + \" \");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-35.php"}, {"exercise_number": 36, "exercise_content": "36. Write a Java program to find all the unique triplets such that sum of all the three elements [x, y, z (x \u2264 y \u2264 z)] equal to a specified number.\nSample array: [1, -2, 0, 5, -1, -4]\nTarget value: 2.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.List;\r\npublic class Exercise36 {\r\n    public static void main(String[] args) {\r\n        int[] input = {1, -2, 0, 5, -1, -4};\r\n\t\tint target = 2;\r\n\t\tExercise36 r = new Exercise36();\r\n        System.out.println(r.threeSum(input,target));       \r\n    }\r\n    public List<List<Integer>> threeSum(int[] nums, int target) {\r\n        List<List<Integer>> my_List = new ArrayList<List<Integer>>();\r\n        \r\n        for(int i = 0; i < nums.length; i++){\r\n            for(int j = i; j < nums.length ;j++){\r\n                for(int k = j; k<nums.length;k++){\r\n                    if ( i != j && j != k && i != k && (nums[i] + nums[j] + nums[k] == target)){\r\n                        List<Integer> inner_List = new ArrayList<Integer>(3);\r\n                        inner_List.add(nums[i]);\r\n                        inner_List.add(nums[j]);\r\n                        inner_List.add(nums[k]);\r\n                        my_List.add(inner_List);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n       return my_List;\r\n    }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-36.php"}, {"exercise_number": 37, "exercise_content": "37. Write a Java program to create an array of its anti-diagonals from a given square matrix.Example:\nInput : \n1 2\n3 4\nOutput: \n[\n[1],\n[2, 3],\n[4]\n]", "exercise_solution_code": "//https://github.com/nagajyothi/Arrays/blob/master/Diagonal.java\r\nimport java.util.*;\r\npublic class Exercise37\r\n{\r\n    public static ArrayList<ArrayList<Integer>> Exercise37(ArrayList<ArrayList<Integer>> A) {\r\n        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();\r\n        int m = A.size();\r\n        int n = A.get(0).size();\r\n        ArrayList<Integer> temp = new ArrayList<Integer>();\r\n        temp.add(A.get(0).get(0));\r\n        result.add(new ArrayList<Integer>(temp));\r\n        int i = 0;\r\n        while(i < m){            \r\n            System.out.printf(\"For i : %d \\n\", i );\r\n            int j = i+1;\r\n            while(j < n){\r\n                int k = i;\r\n                int l = j;\r\n                temp.clear();\r\n                System.out.printf(\"\\t For j : %d \\n\", j );\r\n                while(l >= 0 && k < m){\r\n                    System.out.printf(\"\\t \\t For k : %d and l : %d  add \\n\", k, l, A.get(k).get(l) );\r\n                    temp.add(A.get(k).get(l));\r\n                    k++;\r\n                    l--;\r\n                }\r\n                System.out.println(\"\\t \\t Temp : \" + temp);\r\n                \r\n                result.add(new ArrayList<Integer>(temp));\r\n                j++;                                \r\n            }\r\n            \r\n            \r\n            i++;\r\n        }\r\n        temp.clear();\r\n        temp.add(A.get(m-1).get(n-1));\r\n        result.add(new ArrayList<Integer>(temp));\r\n        return result;\r\n    }\r\n    \r\n    public static ArrayList<ArrayList<Integer>> diagonalEfficient(ArrayList<ArrayList<Integer>> A) {\r\n        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();\r\n        int m = A.size();\r\n        int n = A.get(0).size();\r\n        ArrayList<Integer> temp = new ArrayList<Integer>();\r\n        temp.add(A.get(0).get(0));\r\n        result.add(new ArrayList<Integer>(temp));\r\n        \r\n        \r\n            int j;\r\n            int i = 0;\r\n            j = i+1;\r\n            while(j < n){\r\n                int k = i;\r\n                int l = j;\r\n                temp.clear();\r\n                while(k < m && l >= 0){\r\n                    temp.add(A.get(k).get(l));\r\n                    k++;\r\n                    l--;\r\n                }\r\n                result.add(new ArrayList<Integer>(temp));\r\n                j++;\r\n            }\r\n            \r\n            i = 1;\r\n            j = n-1;\r\n            while(i < m){\r\n                int k = i;\r\n                int l = j;\r\n                temp.clear();\r\n                while(k < m && l >= 0){\r\n                    temp.add(A.get(k).get(l));\r\n                    k++;\r\n                    l--;\r\n                }\r\n                result.add(new ArrayList<Integer>(temp));\r\n                i++;\r\n            }\r\n                \r\n        \r\n        \r\n        temp.clear();\r\n        return result;\r\n    }\r\n    public static void main(String[] args){\r\n        ArrayList<ArrayList<Integer>> A = new ArrayList<ArrayList<Integer>>();\r\n        ArrayList<Integer> temp = new ArrayList<Integer>();\r\n        temp.add(10);\r\n        temp.add(20);\r\n        temp.add(30);\r\n        A.add(new ArrayList<Integer>(temp));\r\n        temp.clear();\r\n        \r\n        temp.add(50);\r\n        temp.add(60);\r\n        temp.add(70);\r\n        A.add(new ArrayList<Integer>(temp));\r\n        temp.clear();\r\n        \r\n        temp.add(90);\r\n        temp.add(100);\r\n        temp.add(110);\r\n        A.add(new ArrayList<Integer>(temp));\r\n        temp.clear();\r\n        for(ArrayList<Integer> t : A)\r\n            System.out.println(t);\r\n        \r\n        ArrayList<ArrayList<Integer>> result  = diagonalEfficient(A);\r\n        for(ArrayList<Integer> t : result)\r\n            System.out.println(t);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-37.php"}, {"exercise_number": 38, "exercise_content": "38. Write a Java program to get the majority element from a given array of integers containing duplicates.\u00a0 \nMajority element: A majority element is an element that appears more than n/2 times where n is the size of the array.", "exercise_solution_code": "import java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Iterator;\r\nimport java.util.Arrays; \r\n\r\npublic class Main\r\n{\r\n  \tpublic static void main (String[] args)\r\n\t{\r\n\t\t// Array - test majority element\r\n\t\tint nums[] = { 1, 6, 6, 5, 7, 4, 1, 7, 7, 7, 7, 7, 7, 7, 2 };\r\n                                 System.out.println(\"Original Array : \"+Arrays.toString(nums));  \r\n\t\tint result = MajorityElement(nums);\r\n\t\tif (result != -1)\r\n\t\t\tSystem.out.println(\"Majority element is \" + result);\r\n\t\telse\r\n\t\t\tSystem.out.println(\"Majority element does not exist\");\r\n\t}\r\n  \r\n  \r\n\tpublic static int MajorityElement(int arra1[])\r\n\t{\r\n\t\tint n = arra1.length;\r\n\r\n\t\t// Hash Map\r\n\t\tMap<Integer, Integer> map = new HashMap<Integer, Integer>();\r\n\t \r\n\t\t// Element's frequency in a map\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tif (map.get(arra1[i]) == null)\r\n\t\t\t\tmap.put(arra1[i], 0);\r\n\t\t\t\r\n\t\t\tmap.put(arra1[i], map.get(arra1[i]) + 1);\r\n\t\t}\r\n\r\n\t\t// Return the element if its count is more than n/2\r\n\t\tIterator it = map.entrySet().iterator();\r\n\t\twhile (it.hasNext()) \r\n\t\t{\r\n\t\t\tMap.Entry pair = (Map.Entry)it.next();\r\n\t\t\tif ((int)pair.getValue() > n/2)\r\n\t\t\t\treturn (int)pair.getKey();\r\n\r\n\t\t\tit.remove(); \r\n\t\t}\r\n\r\n\t\t// no majority element\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-38.php"}, {"exercise_number": 39, "exercise_content": "39. Write a Java program to print all the LEADERS in the array. \u00a0 \nNote: An element is leader if it is greater than all the elements to its right side.", "exercise_solution_code": "import java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Iterator;\r\nimport java.util.Arrays; \r\n\r\npublic class Main\r\n{\r\n public static void main(String[] args)\r\n    {\r\n      int arr[] = {10, 9, 14, 23, 15, 0, 9};\r\n      int size = arr.length;\r\n        for (int i = 0; i < size; i++) \r\n        {\r\n            int j;\r\n            for (j = i + 1; j < size; j++) \r\n            {\r\n                if (arr[i] <= arr[j])\r\n                    break;\r\n            }\r\n            if (j == size) \r\n                System.out.print(arr[i] + \" \");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-39.php"}, {"exercise_number": 40, "exercise_content": "40. Write a Java program to find the two elements from a given array of positive and negative numbers such that their sum is closest to zero.", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\npublic class Main\r\n{\r\n   public static void main (String[] args) \r\n    {\r\n      int arr[] = {1, 5, -4, 7, 8, -6};\r\n      int size = arr.length;\r\n      int l, r, min_sum, sum, min_l_num, min_r_num;\r\n    \r\n      if(size < 2)\r\n      {\r\n        System.out.println(\"Invalid Input\");\r\n        return;\r\n      }\r\n      \r\n      min_l_num = 0;\r\n      min_r_num = 1;\r\n      min_sum = arr[0] + arr[1];\r\n      \r\n      for(l = 0; l < size - 1; l++)\r\n      {\r\n        for(r = l+1; r < size; r++)\r\n        {\r\n          sum = arr[l] + arr[r];\r\n          if(Math.abs(min_sum) > Math.abs(sum))\r\n          {\r\n            min_sum = sum;\r\n            min_l_num = l;\r\n            min_r_num = r;\r\n          }\r\n        }\r\n      }\r\n      \r\n      System.out.println(\"Two elements whose sum is minimum are \"+\r\n                        arr[min_l_num]+ \" and \"+arr[min_r_num]);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-40.php"}, {"exercise_number": 41, "exercise_content": "41. Write a Java program to find smallest and second smallest elements of a given array.", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\npublic class Main\r\n{\r\n   public static void main (String[] args) \r\n    {\r\n      int arr[] = {5, 7, -8, 5, 14, 1};\r\n      \r\n      int first_element, second_element, arr_size = arr.length;\r\n \r\n        /* Return if the array size less than two */\r\n        if (arr_size < 2)\r\n        {\r\n            System.out.println(\"Array size less than two.\");\r\n            return;\r\n        }\r\n \r\n        first_element = second_element = Integer.MAX_VALUE;\r\n        for (int i = 0; i < arr_size ; i ++)\r\n        {\r\n            /* Update both first and second if current element is smaller than first. */\r\n            if (arr[i] < first_element)\r\n            {\r\n                second_element = first_element;\r\n                first_element = arr[i];\r\n            }\r\n \r\n            /* Update second if arr[i] is between first and second\r\n               elements.*/\r\n            else if (arr[i] < second_element && arr[i] != first_element)\r\n                second_element = arr[i];\r\n        }\r\n        if (second_element == Integer.MAX_VALUE)\r\n            System.out.println(\"No second smallest element.\");\r\n        else\r\n            System.out.println(\"The smallest element is \" +\r\n                               first_element + \" and second Smallest  element is \" + second_element +\".\");\r\n      \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-41.php"}, {"exercise_number": 42, "exercise_content": "42. Write a Java program to segregate all 0s on left side and all 1s on right side of a given array of 0s and 1s.", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\npublic class Main\r\n{\r\n   public static void main (String[] args) \r\n    {  \r\n        int nums[] = {0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1};\r\n        int i,  nums_size = nums.length;\r\n        int left = 0, right = nums_size - 1;\r\n        \r\n        System.out.println(\"Original Array : \"+Arrays.toString(nums));  \r\n \r\n        while (left < right) \r\n        {\r\n            /* While  0 at left increment left index  */\r\n            while (nums[left] == 0 && left < right)\r\n               left++;\r\n \r\n            /* While we see 1 at right decrement right index*/\r\n            while (nums[right] == 1 && left < right)\r\n                right--;\r\n \r\n           \r\n            if (left < right) \r\n            {\r\n                nums[left] = 0;\r\n                nums[right] = 1;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n        \r\n       System.out.println(\"Array after segregation is : \"+Arrays.toString(nums));  \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-42.php"}, {"exercise_number": 43, "exercise_content": "43. Write a Java program to find all combination of four elements of a given array whose sum is equal to a given value.", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\npublic class Main\r\n{\r\n   public static void main (String[] args) \r\n    {  \r\n      int nums[] = {10, 20, 30, 40, 1, 2};\r\n      int n = nums.length;\r\n      // given value\r\n      int s = 53;\r\n       System.out.println(\"Given value: \"+s);\r\n        System.out.print(\"Combination of four elements:\");  \r\n        // Find other three elements after fixing first element\r\n        for (int i = 0; i < n - 3; i++) \r\n        {\r\n          // Find other two elements after fixing second element\r\n            for (int j = i + 1; j < n - 2; j++) \r\n            {\r\n           // Find the fourth element after fixing third element    \r\n              for (int k = j + 1; k < n - 1; k++) \r\n                {\r\n            // find the fourth\r\n                    for (int l = k + 1; l < n; l++) \r\n                    {\r\n                        if (nums[i] + nums[j] + nums[k] + nums[l] == s) \r\n                            System.out.print(\"\\n\"+nums[i]+\" \"+nums[j]+\" \"+nums[k] \r\n                                                                 +\" \"+nums[l]);\r\n                    }\r\n                }\r\n            }\r\n    }\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-43.php"}, {"exercise_number": 44, "exercise_content": "44. Write a Java program to count the number of possible triangles from a given unsorted array of positive integers. \u00a0 \nNote: The triangle inequality states that the sum of the lengths of any two sides of a triangle must be greater than or equal to the length of the third side.", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\npublic class Main\r\n{\r\n   public static void main (String[] args) \r\n    {  \r\n        int nums[] = {6, 7, 9, 16, 25, 12, 30, 40};\r\n        int n = nums.length;\r\n        System.out.println(\"Original Array : \"+Arrays.toString(nums));  \r\n\r\n        // Sort the array elements in non-decreasing order\r\n        Arrays.sort(nums);\r\n        \r\n        // Initialize count of triangles\r\n        int ctr = 0;\r\n \r\n        for (int i = 0; i < n-2; ++i)\r\n        {\r\n          int x = i + 2;\r\n \r\n          for (int j = i+1; j < n; ++j)\r\n            {\r\n               while (x < n && nums[i] + nums[j] > nums[x])\r\n               ++x;\r\n                 ctr += x - j - 1;\r\n            }\r\n        }\r\n    System.out.println(\"Total number of triangles:  \" +ctr);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-44.php"}, {"exercise_number": 45, "exercise_content": "45. Write a Java program to cyclically rotate a given array clockwise by one.", "exercise_solution_code": "import java.util.Arrays;\r\n public class Main\r\n{\r\n    static int arra[] = new int[]{10, 20, 30, 40, 50, 60};\r\n     \r\n    static void rotate_array()\r\n    {\r\n       int a = arra[arra.length-1], i;\r\n       for (i = arra.length-1; i > 0; i--)\r\n          arra[i] = arra[i-1];\r\n       arra[0] = a;\r\n    }\r\n     \r\n   public static void main(String[] args) \r\n    {\r\n        System.out.println(\"Original arraay:\");\r\n        System.out.println(Arrays.toString(arra));\r\n         \r\n        rotate_array();\r\n         \r\n        System.out.println(\"Rotated arraay:\");\r\n        System.out.println(Arrays.toString(arra));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-45.php"}, {"exercise_number": 46, "exercise_content": "46. Write a Java program to check whether there is a pair with a specified sum of a given sorted and rotated array.", "exercise_solution_code": "public class Main\r\n{\r\n     static boolean sum_pair(int arr_int[], \r\n                                    int n, int x)\r\n    {\r\n        int k;\r\n        for (k = 0; k < n - 1; k++)\r\n            if (arr_int[k] > arr_int[k+1])\r\n                break;\r\n                 \r\n        int l = (k + 1) % n;                           \r\n                       \r\n        int r = k;                          \r\n      \r\n       while (l != r)\r\n        {\r\n             if (arr_int[l] + arr_int[r] == x)\r\n                  return true;\r\n             if (arr_int[l] + arr_int[r] < x)\r\n                  l = (l + 1) % n;\r\n                   \r\n             else\r\n                  r = (n + r - 1) % n;\r\n        }\r\n        return false;\r\n    }\r\n \r\n public static void main (String[] args)\r\n    {\r\n        int arr_int[] = {22, 25, 17, 18, 19, 20};\r\n        int sum = 42;\r\n        int n = arr_int.length;\r\n      \r\n        if (sum_pair(arr_int, n, sum))\r\n            System.out.print(\"Array has a pair of elements with sum 42.\");\r\n        else\r\n            System.out.print(\"Array has no pair with sum 42.\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-46.php"}, {"exercise_number": 47, "exercise_content": "47. Write a Java program to find the rotation count in a given rotated sorted array of integers.", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n \r\npublic class Main\r\n{\r\n  static int count_rotations(int arr_int[], int n)\r\n    {\r\n       int min_val = arr_int[0], min_index = -1;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (min_val > arr_int[i])\r\n            {\r\n                min_val = arr_int[i];\r\n                min_index = i;\r\n            }\r\n        } \r\n        return min_index;\r\n    }\r\n    public static void main (String[] args) \r\n    {\r\n          int arr_int[] = {35, 32, 30, 14, 18, 21, 27};\r\n      // int arr_int[] = {35, 32, 14, 18, 21, 27};\r\n      // int arr_int[] = {35, 14, 18, 21, 27};\r\n           int n = arr_int.length;\r\n            System.out.println(count_rotations(arr_int, n));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-47.php"}, {"exercise_number": 48, "exercise_content": "48. Write a Java program to arrange the elements of a given array of integers where all negative integers appear before all the positive integers.", "exercise_solution_code": "import java.util.Arrays;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n        int[] nums = {-4, 8, 6, -5, 6, -2, 1, 2, 3, -11};\r\n\t\tSystem.out.println(\"Original Array: \"+Arrays.toString(nums)); \r\n        sort_nums(nums);\r\n        System.out.println(\"New Array: \"+Arrays.toString(nums)); \r\n    }\r\n    public static void sort_nums(int[] nums){\r\n        int pos_num = 0;\r\n        int neg_num = 0;\r\n        int i,j;\r\n        int max = Integer.MIN_VALUE;\r\n        for(i=0; i<nums.length; i++){\r\n            if(nums[i]<0) neg_num++;\r\n            else pos_num++;\r\n            if(nums[i]>max) max = nums[i];\r\n        }\r\n        max++;\r\n        if(neg_num==0 || pos_num == 0) return;\r\n        i=0;\r\n        j=1;\r\n        while(true){\r\n            while(i<=neg_num && nums[i]<0) i++;\r\n            while(j<nums.length && nums[j]>=0) j++;\r\n            if(i>neg_num || j>=nums.length) break;\r\n            nums[i]+= max*(i+1);\r\n            swap_nums(nums,i,j);\r\n        }\r\n\r\n        i = nums.length-1;\r\n        while(i>=neg_num){\r\n            int div = nums[i]/max;\r\n            if(div == 0) i--;\r\n            else{\r\n                nums[i]%=max;\r\n                swap_nums(nums,i,neg_num+div-2); \r\n            }\r\n        }\r\n\r\n    }\r\n    private static void swap_nums(int[] nums, int i , int j){\r\n        int t = nums[i];\r\n        nums[i] = nums[j];\r\n        nums[j] = t;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-48.php"}, {"exercise_number": 49, "exercise_content": "49. Write a Java program to arrange the elements of a given array of integers where all positive integers appear before all the negative integers.", "exercise_solution_code": "import java.util.Arrays;\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n       int arra_nums[] = {-4, 8, 6, -5, 6, -2, 1, 2, 3, -11};\r\n       System.out.println(\"Original array : \"+Arrays.toString(arra_nums)); \r\n       int j,temp,arr_size;\r\n\r\n        arr_size = arra_nums.length;\r\n        for (int i = 0; i <arr_size; i++){\r\n            j = i;  \r\n            \r\n           //Shift positive numbers left, negative numbers right\r\n         \r\n            while ((j > 0) && (arra_nums[j] >0) && (arra_nums[j-1] < 0)){\r\n                  temp = arra_nums[j];\r\n                  arra_nums[j] = arra_nums[j-1];\r\n                  arra_nums[j-1] = temp;\r\n                  j--;\r\n            }\r\n        }\r\n       System.out.println(\"New array : \"+Arrays.toString(arra_nums)); \r\n    }       \r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-49.php"}, {"exercise_number": 50, "exercise_content": "50. Write a Java program to sort an array of positive integers of a given array, in the sorted array the value of the first element should be maximum, second value should be minimum value, third should be second maximum, fourth second be second minimum and so on.", "exercise_solution_code": "import java.util.Arrays;\r\n \r\npublic class Main\r\n{\r\n     static int[] rearrange(int[] new_arra, int n)\r\n    {\r\n        int temp[] = new int[n];\r\n     \r\n         int small_num = 0, large_num = n-1;\r\n         boolean flag = true;\r\n     \r\n        for (int i=0; i < n; i++)\r\n        {\r\n            if (flag)\r\n                temp[i] = new_arra[large_num--];\r\n            else\r\n                temp[i] = new_arra[small_num++];\r\n     \r\n            flag = !flag;\r\n        }\r\n     \r\n        return temp;\r\n    }\r\n \r\n    public static void main(String[] args) \r\n    {\r\n        int nums[] = new int[]{10, 20, 30, 40, 50, 60, 70, 80, 90, 100};\r\n        int result[];\r\n         \r\n        System.out.println(\"Original Array \");\r\n        System.out.println(Arrays.toString(nums));\r\n         \r\n        result = rearrange(nums,nums.length);\r\n         \r\n        System.out.println(\"New Array \");\r\n        System.out.println(Arrays.toString(result));\r\n     \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-50.php"}, {"exercise_number": 51, "exercise_content": "51. Write a Java program to separate 0s on left side and 1s on right side of an array of 0s and 1s in random order.", "exercise_solution_code": "import java.util.Arrays;\r\n\r\npublic class Main {\r\n    public static void main(String[] args)\r\n    {\r\n        int arr[] = new int[]{ 0, 0, 1, 1, 0, 1, 1, 1,0 };\r\n        int result[];\r\n        System.out.println(\"Original Array \");\r\n        System.out.println(Arrays.toString(arr));\r\n\r\n        int n = arr.length;\r\n \r\n        result = separate_0_1(arr, n);\r\n        System.out.println(\"New Array \");\r\n        System.out.println(Arrays.toString(result));\r\n      }\r\n    \r\n    static int [] separate_0_1(int arr[], int n)\r\n     {\r\n        int count = 0;   \r\n     \r\n        for (int i = 0; i < n; i++) {\r\n            if (arr[i] == 0)\r\n                count++;\r\n        }\r\n \r\n        for (int i = 0; i < count; i++)\r\n            arr[i] = 0;\r\n \r\n        for (int i = count; i < n; i++)\r\n            arr[i] = 1;\r\n    \r\n         return arr;\r\n     }       \r\n   }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-51.php"}, {"exercise_number": 52, "exercise_content": "52. Write a Java program to separate even and odd numbers of a given array of integers. Put all even numbers first, and then odd numbers.", "exercise_solution_code": "import java.util.Arrays;\r\npublic class Main\r\n{\r\n\t\r\n\t public static void main (String[] args)\r\n     {\r\n        int nums[] = {20, 12, 23, 17, 7, 8, 10, 2, 1, 0};\r\n        int result[];\r\n        System.out.println(\"Original Array \");\r\n        System.out.println(Arrays.toString(nums));\r\n\r\n        result = separate_odd_even(nums);\r\n \r\n        System.out.print(\"Array after separation \");\r\n        System.out.println(Arrays.toString(result));\r\n    }\r\n\t\r\n    static int [] separate_odd_even(int arr[])\r\n    {\r\n        int left_side = 0, right_side = arr.length - 1;\r\n        while (left_side < right_side)\r\n        {\r\n            while (arr[left_side]%2 == 0 && left_side < right_side)\r\n                left_side++;\r\n \r\n            while (arr[right_side]%2 == 1 && left_side < right_side)\r\n                right_side--;\r\n \r\n            if (left_side < right_side)\r\n            {\r\n                int temp = arr[left_side];\r\n                arr[left_side] = arr[right_side];\r\n                arr[right_side] = temp;\r\n                left_side++;\r\n                right_side--;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-52.php"}, {"exercise_number": 53, "exercise_content": "53. Write a Java program to replace every element with the next greatest element (from right side) in a given array of integers. There is no element next to the last element, therefore replace it with -1.", "exercise_solution_code": "import java.io.*;\r\nimport java.util.Arrays;\r\npublic class Main \r\n{\r\n   public static void main (String[] args)\r\n    {\r\n        int nums[] = {45, 20, 100, 23, -5, 2, -6};\r\n\t\tint result[];\r\n\t\tSystem.out.println(\"Original Array \");\r\n        System.out.println(Arrays.toString(nums));\r\n\r\n        result = next_greatest_num(nums);\r\n        System.out.println(\"The modified array:\");\r\n        System.out.println(Arrays.toString(result));\r\n    }\r\n \r\n    static int [] next_greatest_num(int arr_nums[])\r\n    {\r\n        int size = arr_nums.length;\r\n        int max_from_right_num =  arr_nums[size-1];\r\n        arr_nums[size-1] = -1;\r\n \r\n        for (int i = size-2; i >= 0; i--)\r\n        {\r\n            int temp = arr_nums[i];\r\n            arr_nums[i] = max_from_right_num;\r\n            if(max_from_right_num < temp)\r\n            max_from_right_num = temp;\r\n        }\r\n\t\treturn arr_nums;\r\n    } \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-53.php"}, {"exercise_number": 54, "exercise_content": "54. Write a Java program to check if a given array contains a subarray with 0 sum.Example:\nInput : \nnums1= { 1, 2, -2, 3, 4, 5, 6 }\nnums2 = { 1, 2, 3, 4, 5, 6 }\nnums3 = { 1, 2, -3, 4, 5, 6 }\nOutput: \nDoes the said array contain a subarray with 0 sum: true\nDoes the said array contain a subarray with 0 sum: false\nDoes the said array contain a subarray with 0 sum: true", "exercise_solution_code": "import java.util.Set;\r\nimport java.util.HashSet;\r\nimport java.util.Arrays;\r\n\r\nclass solution\r\n{\r\n\tpublic static Boolean find_subarray_sum_zero(int[] nums)\r\n\t{\r\n\t\tSet<Integer> set = new HashSet<>();\r\n\t\tset.add(0);\r\n\t\tint suba_sum = 0;\r\n\t\tfor (int i = 0; i < nums.length; i++)\r\n\t\t{\t\t\t\r\n\t\t\tsuba_sum += nums[i];\r\n\r\n     \t\tif (set.contains(suba_sum)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\tset.add(suba_sum);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic static void main (String[] args)\r\n\t{\r\n\t\tint[] nums1= { 1, 2, -2, 3, 4, 5, 6 };\r\n\t\tSystem.out.println(\"Original array: \"+Arrays.toString(nums1));\r\n\t\tSystem.out.println(\"Does the said array contain a subarray with 0 sum: \"+find_subarray_sum_zero(nums1));\t\t\r\n\t\tint[] nums2 = { 1, 2, 3, 4, 5, 6 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums2));\r\n\t\tSystem.out.println(\"Does the said array contain a subarray with 0 sum: \"+find_subarray_sum_zero(nums2));\t\r\n        int[] nums3 = { 1, 2, -3, 4, 5, 6 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums3));\r\n\t\tSystem.out.println(\"Does the said array contain a subarray with 0 sum: \"+find_subarray_sum_zero(nums3));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-54.php"}, {"exercise_number": 55, "exercise_content": "55. Write a Java program to print all sub-arrays with 0 sum present in a given array of integers.Example:\nInput : \nnums1 = { 1, 3, -7, 3, 2, 3, 1, -3, -2, -2 }\nnums2 = { 1, 2, -3, 4, 5, 6 }\nnums3= { 1, 2, -2, 3, 4, 5, 6 }\nOutput: \nSub-arrays with 0 sum : [1, 3, -7, 3]\nSub-arrays with 0 sum : [3, -7, 3, 2, 3, 1, -3, -2]\n\nSub-arrays with 0 sum : [1, 2, -3]\nSub-arrays with 0 sum : [2, -2]", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\nclass solution\r\n{\r\n\tpublic static void print_all_Subarrays(int[] A)\r\n\t{\r\n\t\t\r\n\t\tList<Integer> llist = new ArrayList<Integer>();\r\n\t\tfor (int i = 0; i < A.length; i++)\r\n\t\t{\r\n\t\t\tint sum = 0;\r\n\t\t\tllist.removeAll(llist);\r\n\t\t\tfor (int j = i; j < A.length; j++)\r\n\t\t\t{\r\n\t\t\t\tsum += A[j];\r\n\t\t\t\tllist.add(A[j]); \r\n\t\t\t\tif (sum == 0) {\r\n\t\t\t\t\tSystem.out.println(\"Sub-arrays with 0 sum : \" + llist.toString()); \r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main (String[] args)\r\n\t{\r\n\t\tint[] nums1 = { 1, 3, -7, 3, 2, 3, 1, -3, -2, -2 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums1));\r\n\t\tprint_all_Subarrays(nums1);\r\n\t\t\r\n\t              int[] nums2 = { 1, 2, -3, 4, 5, 6 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums2));\r\n\t\tprint_all_Subarrays(nums2);\r\n\t\t\r\n\t\tint[] nums3= { 1, 2, -2, 3, 4, 5, 6 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums3));\r\n\t\tprint_all_Subarrays(nums3);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-55.php"}, {"exercise_number": 56, "exercise_content": "56. Write a Java program to sort a given binary array in linear times. \u00a0 \nFrom Wikipedia,\nLinear time: An algorithm is said to take linear time, or O(n) time, if its time complexity is O(n). Informally, this means that the running time increases at most linearly with the size of the input. More precisely, this means that there is a constant c such that the running time is at most cn for every input of size n. For example, a procedure that adds up all elements of a list requires time proportional to the length of the list, if the adding time is constant, or, at least, bounded by a constant.\nLinear time is the best possible time complexity in situations where the algorithm has to sequentially read its entire input. Therefore, much research has been invested into discovering algorithms exhibiting linear time or, at least, nearly linear time. This research includes both software and hardware methods. There are several hardware technologies which exploit parallelism to provide this. An example is content-addressable memory. This concept of linear time is used in string matching algorithms such as the Boyer\u2013Moore algorithm and Ukkonen's algorithm.Example:\nInput : \nb_nums[] = { 0, 1, 1, 0, 1, 1, 0, 1, 0, 0 }\nOutput: \nAfter sorting: [0, 0, 0, 0, 0, 1, 1, 1, 1, 1]", "exercise_solution_code": "import java.util.Arrays;\r\n\r\nclass solution\r\n{\r\n\r\n\tpublic static void sort_binary_nums(int[] b_nums)\r\n\t{\r\n\t\tint k = 0;\r\n\r\n\t\tfor (int i = 0; i < b_nums.length; i++)\r\n\t\t{\r\n\t\t\tif (b_nums[i] == 0) {\r\n\t\t\t\tb_nums[k++] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (int i = k; i < b_nums.length; i++) {\r\n\t\t\tb_nums[k++] = 1;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main (String[] args)\r\n\t{\r\n\t\tint b_nums[] = { 0, 1, 1, 0, 1, 1, 0, 1, 0, 0 };\r\n        System.out.println(\"Original array: \"+Arrays.toString(b_nums)); \r\n\t\tsort_binary_nums(b_nums);\r\n\t\tSystem.out.println(\"After sorting: \"+Arrays.toString(b_nums));\r\n\t\t\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-56.php"}, {"exercise_number": 57, "exercise_content": "57. Write a Java program to check if a sub-array is formed by consecutive integers from a given array of integers.Example:\nInput : \nnums = { 2, 5, 0, 2, 1, 4, 3, 6, 1, 0 }\nOutput: \nThe largest sub-array is [1, 7]\nElements of the sub-array: 5 0 2 1 4 3 6", "exercise_solution_code": "import java.lang.Math;\r\nimport java.util.Arrays;\r\nclass solution\r\n{\r\n\tstatic boolean is_consecutive(int nums[], int i, int j, int min, int max)\r\n\t{\r\n\t\tif (max - min != j - i) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tboolean check[] = new boolean[j - i + 1];\r\n\r\n\t\tfor (int k = i; k <= j; k++)\r\n\t\t{\r\n\t\t\tif (check[nums[k] - min]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tcheck[nums[k] - min] = true;\r\n\t\t}\r\n\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic static void find_Max_SubArray(int[] nums)\r\n\t {\r\n\t\tint len = 1;\r\n\t\tint start = 0, end = 0;\r\n\r\n\t\tfor (int i = 0; i < nums.length - 1; i++)\r\n\t\t{\r\n\t\t\tint min_val = nums[i], max_val = nums[i];\r\n\t\r\n\t\t\tfor (int j = i + 1; j < nums.length; j++)\r\n\t\t\t{\r\n\t\t\t\tmin_val = Math.min(min_val, nums[j]);\r\n\t\t\t\tmax_val = Math.max(max_val, nums[j]);\r\n\t\r\n\t\t\t\tif (is_consecutive(nums, i, j, min_val, max_val))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (len < max_val - min_val + 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlen = max_val - min_val + 1;\r\n\t\t\t\t\t\tstart = i;\r\n\t\t\t\t\t\tend = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tSystem.out.println(\"The largest sub-array is [\" + start + \", \"\r\n\t\t\t\t\t\t\t+ end + \"]\");\r\n\t\tSystem.out.print(\"Elements of the sub-array: \");\r\n\t    for (int x = start; x <= end; x++)\r\n\t     {\r\n\t\t\t\r\n\t\t  System.out.print(nums[x]+\" \");\t\t\t\r\n\t\t }\t\r\n\t}\r\n\r\n\tpublic static void main (String[] args)\r\n\t{\r\n\t\tint[] nums = { 2, 5, 0, 2, 1, 4, 3, 6, 1, 0 };\r\n        System.out.println(\"Original array: \"+Arrays.toString(nums)); \r\n\t\tfind_Max_SubArray(nums);\r\n\t}\r\n} \r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-57.php"}, {"exercise_number": 58, "exercise_content": "58. Given two sorted arrays A and B of size p and q, write a Java program to merge elements of A with B by maintaining the sorted order i.e. fill A with first p smallest elements and fill B with remaining elements.Example:\nInput : \nint[] A = { 1, 5, 6, 7, 8, 10 }\nint[] B = { 2, 4, 9 }\nOutput: \nSorted Arrays:\nA: [1, 2, 4, 5, 6, 7]\nB: [8, 9, 10]", "exercise_solution_code": "import java.util.Arrays;\r\n\r\nclass solution\r\n{\r\n\tpublic static void merge_sorted_arrays(int[] A, int p, int[] B, int q)\r\n\t{\r\n\t\t\r\n\t\tfor (int i = 0; i < p; i++)\r\n\t\t{\r\n\t\t\tif (A[i] > B[0])\r\n\t\t\t{\r\n\t\t\t\tint temp = A[i];\r\n\t\t\t\tA[i] = B[0];\r\n\t\t\t\tB[0] = temp;\r\n\r\n\t\t\t\tint first_arr = B[0];\r\n\t\t\t\tint k;\r\n\t\t\t\tfor (k = 1; k < q && B[k] < first_arr; k++) {\r\n\t\t\t\t\tB[k - 1] = B[k];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tB[k - 1] = first_arr;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main (String[] args)\r\n\t{\r\n\t\tint[] A = { 1, 5, 6, 7, 8, 10 };\r\n\t\tint[] B = { 2, 4, 9 };\r\n\t\tint p = A.length;\r\n\t\tint q = B.length;\r\n\r\n\t\tSystem.out.println(\"Original Arrays:\");\r\n\t\tSystem.out.println(\"A: \" + Arrays.toString(A));\r\n\t\tSystem.out.println(\"B: \" + Arrays.toString(B));\r\n\t\t\r\n\t\tmerge_sorted_arrays(A, p, B, q);\r\n        \r\n\t\tSystem.out.println(\"\\nSorted Arrays:\");\r\n\t\tSystem.out.println(\"A: \" + Arrays.toString(A));\r\n\t\tSystem.out.println(\"B: \" + Arrays.toString(B));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-58.php"}, {"exercise_number": 59, "exercise_content": "59. Write a Java program to find maximum product of two integers in a given array of integers.Example:\nInput : \nnums = { 2, 3, 5, 7, -7, 5, 8, -5 }\nOutput: \nPair is (7, 8), Maximum Product: 56", "exercise_solution_code": "import java.util.*;\r\nclass solution\r\n{\r\n\tpublic static void find_max_product(int[] nums)\r\n\t{\r\n\t\tint max_pair_product = Integer.MIN_VALUE;\r\n\t\tint max_i = -1, max_j = -1;\r\n\r\n\t\tfor (int i = 0; i < nums.length - 1; i++)\r\n\t\t{\r\n\t\t\tfor (int j = i + 1; j < nums.length; j++)\r\n\t\t\t{\r\n\t\t\t\tif (max_pair_product < nums[i] * nums[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tmax_pair_product = nums[i] * nums[j];\r\n\t\t\t\t\tmax_i = i;\r\n\t\t\t\t\tmax_j = j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tSystem.out.print(\"Pair is (\" + nums[max_i] + \", \" + nums[max_j] + \"), Maximum Product: \" + (nums[max_i]*nums[max_j]));\r\n\t}\r\n\r\n\tpublic static void main (String[] args)\r\n\t{\r\n\t\tint[] nums = { 2, 3, 5, 7, -7, 5, 8, -5 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums));\r\n\t\tfind_max_product(nums);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-59.php"}, {"exercise_number": 60, "exercise_content": "60. Write a Java program to shuffle a given array of integers.Example:\nInput : \nnums = { 1, 2, 3, 4, 5, 6 }\nOutput: \nShuffle Array: [4, 2, 6, 5, 1, 3]", "exercise_solution_code": "import java.util.Arrays;\r\nimport java.util.Random;\r\n\r\nclass solution\r\n{\r\n\tpublic static void shuffle(int nums[])\r\n\t{\r\n\t\tfor (int i = nums.length - 1; i >= 1; i--)\r\n\t\t{\r\n\t\t\tRandom rand = new Random();\r\n\r\n\t\t\tint j = rand.nextInt(i + 1);\r\n\r\n\t\t\tswap_elements(nums, i, j);\r\n\t\t}\r\n\t}\r\n        private static void swap_elements(int[] nums, int i, int j) {\r\n\t\tint temp = nums[i];\r\n\t\tnums[i] = nums[j];\r\n\t\tnums[j] = temp;\r\n\t}\r\n\tpublic static void main (String[] args)\r\n\t{\r\n\t\tint[] nums = { 1, 2, 3, 4, 5, 6 };\r\n        System.out.println(\"Original Array: \"+Arrays.toString(nums));\r\n\t\tshuffle(nums);\r\n\t\tSystem.out.println(\"Shuffle Array: \"+Arrays.toString(nums));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-60.php"}, {"exercise_number": 61, "exercise_content": "61. Write a Java program to rearrange a given array of unique elements such that every second element of the array is greater than its left and right elements.Example:\nInput : \nnums= { 1, 2, 4, 9, 5, 3, 8, 7, 10, 12, 14 }\nOutput: \nArray with every second element is greater than its left and right elements:\n[1, 4, 2, 9, 3, 8, 5, 10, 7, 14, 12]", "exercise_solution_code": "import java.util.Arrays;\r\n\r\nclass solution\r\n{\r\n\tprivate static void swap_nums(int[] nums, int i, int j) {\r\n\t\tint t_nums = nums[i];\r\n\t\tnums[i] = nums[j];\r\n\t\tnums[j] = t_nums;\r\n\t}\r\n\r\n\tpublic static void rearrange_Array_nums(int[] nums)\r\n\t{\r\n\t\tfor (int i = 1; i < nums.length; i += 2)\r\n\t\t{\r\n\t\t\tif (nums[i - 1] > nums[i]) {\r\n\t\t\t\tswap_nums(nums, i - 1, i);\r\n\t\t\t}\r\n\r\n\t\t\tif (i + 1 < nums.length && nums[i + 1] > nums[i]) {\r\n\t\t\t\tswap_nums(nums, i + 1, i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main (String[] args)\r\n\t{\r\n\t\tint[] nums= { 1, 2, 4, 9, 5, 3, 8, 7, 10, 12, 14 };\r\n        System.out.println(\"Original array:\\n\"+Arrays.toString(nums));\r\n\t\trearrange_Array_nums(nums);\r\n\t\tSystem.out.println(\"\\nArray with every second element is greater than its left and right elements:\\n\"+Arrays.toString(nums));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-61.php"}, {"exercise_number": 62, "exercise_content": "62. Write a Java program to find the equilibrium indices from a given array of integers.Example:\nInput : \nnums = {-7, 1, 5, 2, -4, 3, 0}\nOutput: \nEquilibrium indices found at : 3\nEquilibrium indices found at : 6", "exercise_solution_code": "import java.util.Arrays; \r\npublic class solution {\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] nums = {-7, 1, 5, 2, -4, 3, 0};\r\n\t\tSystem.out.println(\"Original array: \"+Arrays.toString(nums));\r\n\t\tequlibrium_indices(nums);\r\n\t}\r\n \r\n\tpublic static void equlibrium_indices(int[] nums){\r\n\t\t//find total sum\r\n\t\tint totalSum = 0;\r\n\t\tfor (int n : nums) {\r\n\t\t\ttotalSum += n;\r\n\t\t}\r\n\t\t//compare running sum to remaining sum to find equlibrium indices\r\n\t\tint runningSum = 0;\r\n\t\tfor (int i = 0; i < nums.length; i++) {\r\n\t\t\tint n = nums[i];\r\n\t\t\tif (totalSum - runningSum - n == runningSum) {\r\n\t\t\t\tSystem.out.println(\"Equilibrium indices found at : \"+i);\r\n\t\t\t}\r\n\t\t\trunningSum += n;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-62.php"}, {"exercise_number": 63, "exercise_content": "63. Write a Java program to replace each element of the array with product of every other element in a given array of integers.Example:\nInput : \nnums1 = { 1, 2, 3, 4, 5, 6, 7}\nnums2 = {0, 1, 2, 3, 4, 5, 6, 7}\nOutput: \nArray with product of every other element:\n[5040, 2520, 1680, 1260, 1008, 840, 720]\nArray with product of every other element:\n[5040, 0, 0, 0, 0, 0, 0, 0]", "exercise_solution_code": "import java.util.Arrays;\r\n\r\nclass solution\r\n{\r\n\tpublic static int[] find_Product_in_array(int[] nums)\r\n\t{\r\n\t\tint n = nums.length;\r\n\r\n\t\tint[] left_element = new int[n];\r\n\t\tint[] right_element = new int[n];\r\n\r\n\t\tleft_element[0] = 1;\r\n\t\tfor (int i = 1; i < n; i++) {\r\n\t\t\tleft_element[i] = nums[i - 1] * left_element[i - 1];\r\n\t\t}\r\n\r\n\t\tright_element[n - 1] = 1;\r\n\t\tfor (int j = n - 2; j >= 0; j--) {\r\n\t\t\tright_element[j] = nums[j + 1] * right_element[j + 1];\r\n\t\t}\r\n\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tnums[i] = left_element[i] * right_element[i];\r\n\t\t}\r\n\treturn nums;\t\r\n\t}\r\n\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tint[] nums1 = { 1, 2, 3, 4, 5, 6, 7};\r\n\t\tSystem.out.println(\"Original array:\\n\"+Arrays.toString(nums1));\r\n\t\tint[] result1 = find_Product_in_array(nums1);\r\n\t\tSystem.out.println(\"Array with product of every other element:\\n\" + Arrays.toString(result1));\r\n\r\n\t\tint[] nums2 = {0, 1, 2, 3, 4, 5, 6, 7};\r\n\t\tSystem.out.println(\"\\nOriginal array:\\n\"+Arrays.toString(nums2));\r\n\t\tint[] result2 = find_Product_in_array(nums2);\r\n\t\tSystem.out.println(\"Array with product of every other element:\\n\" + Arrays.toString(result2));\r\n\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-63.php"}, {"exercise_number": 64, "exercise_content": "64. Write a Java program to find Longest Bitonic Subarray in a given array.A bitonic subarray is a subarray of a given array where elements are first sorted in increasing order, then in decreasing order. A strictly increasing or strictly decreasing subarray is also accepted as bitonic subarray.Example:\nInput : \nnums = { 4, 5, 9, 5, 6, 10, 11, 9, 6, 4, 5 }\nOutput: \nThe longest bitonic subarray is [3,9]\nElements of the said sub-array: 5 6 10 11 9 6 4\nThe length of longest bitonic subarray is 7", "exercise_solution_code": "import java.util.Arrays;\r\nclass solution\r\n{\r\n\tpublic static int find_Bitonic_Subarray(int[] nums)\r\n\t{\r\n\t\tint[] incre_array = new int[nums.length];\r\n\t\tincre_array[0] = 1;\r\n\t\tfor (int i = 1; i < nums.length; i++) {\r\n\t\t\tincre_array[i] = 1;\r\n\t\t\tif (nums[i - 1] < nums[i]) {\r\n\t\t\t\tincre_array[i] = incre_array[i - 1] + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tint[] decre_array = new int[nums.length];\r\n\t\tdecre_array[nums.length - 1] = 1;\r\n\t\tfor (int i = nums.length - 2; i >= 0; i--) {\r\n\t\t\tdecre_array[i] = 1;\r\n\t\t\tif (nums[i] > nums[i + 1]) {\r\n\t\t\t\tdecre_array[i] = decre_array[i + 1] + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tint lbs_len = 1;\r\n\t\tint start = 0, end = 0;\r\n\r\n\t\tfor (int i = 0; i < nums.length; i++)\r\n\t\t{\r\n\t\t\tif (lbs_len < incre_array[i] + decre_array[i] - 1)\r\n\t\t\t{\r\n\t\t\t\tlbs_len = incre_array[i] + decre_array[i] - 1;\r\n\t\t\t\tstart = i - incre_array[i] + 1;\r\n\t\t\t\tend = i + decre_array[i] - 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// print longest bitonic sub-array\r\n\t\tSystem.out.println(\"The longest bitonic subarray is [\" + start + \",\" + end + \"]\");\r\n\t\tSystem.out.print(\"Elements of the said sub-array: \");\r\n\t    for (int x = start; x <= end; x++)\r\n\t     {\r\n\t\t\t\r\n\t\t  System.out.print(nums[x]+\" \");\t\t\t\r\n\t\t }\t\r\n\r\n\t\tSystem.out.println(\"\\nThe length of longest bitonic subarray is \" + lbs_len);\r\n\r\n\t\treturn lbs_len;\r\n\t}\r\n\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tint[] nums = { 4, 5, 9, 5, 6, 10, 11, 9, 6, 4, 5 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums));\r\n\t\tfind_Bitonic_Subarray(nums);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-64.php"}, {"exercise_number": 65, "exercise_content": "65. Write a Java program to find maximum difference between two elements in a given array of integers such that smaller element appears before larger element.Example:\nInput : \nnums = { 2, 3, 1, 7, 9, 5, 11, 3, 5 }\nOutput: \nThe maximum difference between two elements of the said array elements\n10", "exercise_solution_code": "import java.util.Arrays;\r\nclass solution\r\n{\r\n  public static int diff_between_two_elemnts(int[] nums)\r\n\t{\r\n\t\tint diff_two_elemnts = Integer.MIN_VALUE;\r\n\r\n\t\tfor (int i = 0; i < nums.length - 1; i++) {\r\n\t\t\tfor (int j = i + 1; j < nums.length; j++) {\r\n\t\t\t\tdiff_two_elemnts = Integer.max(diff_two_elemnts,nums[j] - nums[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn diff_two_elemnts;\r\n\t}\r\n\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tint[] nums = { 2, 3, 1, 7, 9, 5, 11, 3, 5 };\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums));\r\n\r\n\t\tSystem.out.print(\"The maximum difference between two elements of the said array elements\\n\" + diff_between_two_elemnts(nums));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-65.php"}, {"exercise_number": 66, "exercise_content": "66. Write a Java program to find contiguous subarray within a given array of integers which has the largest sum.In computer science, the maximum sum subarray problem is the task of finding a contiguous subarray with the largest sum, within a given one-dimensional array A[1...n] of numbers. Formally, the task is to find indices and with, such that the sum is as large as possible.Example:\nInput : \nint[] A = {1, 2, -3, -4, 0, 6, 7, 8, 9}\nOutput: \nThe largest sum of contiguous sub-array: 30", "exercise_solution_code": "import java.util.Arrays;\r\nclass solution\t\r\n{\r\n\tpublic static int largest_sum(int[] A)\r\n\t{\r\n\t\tint max_ele_val = 0;\r\n\t\tint max_end = 0;\r\n\t\tfor (int i: A)\r\n\t\t{\r\n\t\t\tmax_end = max_end + i;\r\n\t\t\tmax_end = Integer.max(max_end, 0);\r\n\r\n\t\t\tmax_ele_val = Integer.max(max_ele_val, max_end);\r\n\t\t}\r\n\t\treturn max_ele_val;\r\n\t}\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tint[] A = {1, 2, -3, -4, 0, 6, 7, 8, 9};\r\n\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(A));\r\n\t\tSystem.out.println(\"The largest sum of contiguous sub-array: \" + largest_sum(A));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-66.php"}, {"exercise_number": 67, "exercise_content": "67. Write a Java program to find subarray which has the largest sum in a given circular array of integers.Example:\nInput : \nnums1 = { 2, 1, -5, 4, -3, 1, -3, 4, -1 }\nnums2 = { 1, -2, 3, 0, 7, 8, 1, 2, -3 }\nOutput: \nThe sum of subarray with the largest sum is 6\nThe sum of subarray with the largest sum is 21", "exercise_solution_code": "import java.util.Arrays;\r\nclass solution {\r\n    public static int max_Subarray_Sum_Circular(int[] nums) {\r\n        int n = nums.length;\r\n        int result = nums[0];\r\n        int sum = nums[0];\r\n        for (int i = 1; i < n; i++) {\r\n            sum = Math.max(sum + nums[i], nums[i]);\r\n            result = Math.max(result, sum);\r\n        }\r\n        \r\n        int[] right_Sum = new int[n];\r\n        int[] right_Max = new int[n];\r\n        right_Sum[n - 1] = nums[n - 1];\r\n        right_Max[n - 1] = nums[n - 1];\r\n        for (int i = n - 2; i >= 0; i--) {\r\n            right_Sum[i] = right_Sum[i + 1] + nums[i];\r\n            right_Max[i] = Math.max(right_Sum[i], right_Max[i + 1]);\r\n        }\r\n        \r\n        int left_Sum = 0;\r\n        for (int i = 0; i < n - 2; i++) {\r\n            left_Sum += nums[i];\r\n            result = Math.max(result, left_Sum + right_Max[i + 2]);\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\t\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tint[] nums1 = { 2, 1, -5, 4, -3, 1, -3, 4, -1 };\r\n\t\tSystem.out.println(\"\\nOriginal circular array: \"+Arrays.toString(nums1));\r\n\t\tSystem.out.println(\"The sum of subarray with the largest sum is \" + max_Subarray_Sum_Circular(nums1));\r\n\t\t\r\n\t\tint[] nums2 = { 1, -2, 3, 0, 7, 8, 1, 2, -3 };\r\n\t\tSystem.out.println(\"\\nOriginal circular array: \"+Arrays.toString(nums2));\r\n\t\tSystem.out.println(\"The sum of subarray with the largest sum is \" + max_Subarray_Sum_Circular(nums2));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-67.php"}, {"exercise_number": 68, "exercise_content": "68. Write a Java program to create all possible permutations of a given array of distinct integers.Example:\nInput : \nnums1 = {1, 2, 3, 4}\nnums2 = {1, 2, 3}\nOutput: \nPossible permutations of the said array:\n[1, 2, 3, 4]\n[1, 2, 4, 3]\n....\n[4, 1, 3, 2]\n[4, 1, 2, 3]\nPossible permutations of the said array:\n[1, 2, 3]\n[1, 3, 2]\n...\n[3, 2, 1]\n[3, 1, 2]", "exercise_solution_code": "import java.util.*;\r\nimport java.util.List;\r\n\r\n public class solution {\r\n public static void main(String[] args) throws Exception {\r\n    int[] nums1 = {1, 2, 3, 4};\r\n\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums1));\r\n    List<List<Integer>> result1 = new solution().permute(nums1);\r\n\tSystem.out.println(\"\\nPossible permutations of the said array:\");\r\n\tresult1.forEach(System.out::println);\r\n    int[] nums2 = {1, 2, 3};\r\n\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums2));\r\n    List<List<Integer>> result2 = new solution().permute(nums2);\r\n\tSystem.out.println(\"\\nPossible permutations of the said array:\");\r\n\tresult2.forEach(System.out::println);\t\r\n\t  }\r\n\r\n  public List<List<Integer>> permute(int[] nums) {\r\n    List<List<Integer>> result = new ArrayList<>();\r\n    Permutation(0, nums, result);\r\n    return result;\r\n  }\r\n\r\n  private void Permutation(int i, int[] nums, List<List<Integer>> result) {\r\n    if (i == nums.length - 1) {\r\n      List<Integer> list = new ArrayList<>();\r\n      for (int n : nums) list.add(n);\r\n      result.add(list);\r\n    } else {\r\n      for (int j = i, l = nums.length; j < l; j++) {\r\n        int temp = nums[j];\r\n        nums[j] = nums[i];\r\n        nums[i] = temp;\r\n        Permutation(i + 1, nums, result);\r\n        temp = nums[j];\r\n        nums[j] = nums[i];\r\n        nums[i] = temp;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-68.php"}, {"exercise_number": 69, "exercise_content": "69. Write a Java program to find minimum subarray sum of specified size in a given array of integers.Example:\nInput : \nnums = { 1, 2, 3, 4, 5, 6, 7, 8, 9,10}\nOutput: \nSub-array size: 4\nSub-array from 0 to 3 and sum is: 10", "exercise_solution_code": "import java.util.*;\r\nclass solution {\r\n\r\n\tpublic static int [] find_min_subarray_sum(int[] nums, int k)\r\n\t{\r\n\t\tint sub_arr_sum = 0;\r\n\t\tint min_sub_arr = Integer.MAX_VALUE;\r\n\t\tint last = 0;\r\n\t\tint[] result = new int[3];\r\n\r\n\t\tfor (int i = 0; i < nums.length; i++)\r\n\t\t{\r\n\t\t\tsub_arr_sum += nums[i];\r\n\r\n\t\t\tif (i + 1 >= k)\r\n\t\t\t{\r\n\t\t\t\tif (min_sub_arr > sub_arr_sum)\r\n\t\t\t\t{\r\n\t\t\t\t\tmin_sub_arr = sub_arr_sum;\r\n\t\t\t\t\tlast = i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsub_arr_sum -= nums[i + 1 - k];\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult[0] = last - k + 1;\r\n\t\tresult[1] = last;\r\n\t\tresult[2] = min_sub_arr;\r\n\t\treturn result;\t\t\r\n\t}\r\n\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tint[] nums = { 1, 2, 3, 4, 5, 6, 7, 8, 9,10};\r\n\t\tint k = 4;\r\n        System.out.printf(\"\\nOriginal array: \"+Arrays.toString(nums));\r\n\t\tSystem.out.printf(\"\\nSub-array size: %d\", k);\r\n\t\tint [] result = find_min_subarray_sum(nums, k);\r\n\t\tSystem.out.printf(\"\\nSub-array from %d to %d and sum is: %d\", result[0], result[1], result[2]);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-69.php"}, {"exercise_number": 70, "exercise_content": "70. Write a Java program to find the smallest length of a contiguous subarray of which the sum is greater than or equal to specified value. Return 0 instead.Example:\nInput : \nnums = {1, 2, 3, 4, 6}\nOutput: \nMinimum length of a contiguous subarray of which the sum is 8, 2", "exercise_solution_code": "import java.util.Arrays;\r\npublic class solution {\r\n  public static void main(String[] args)\r\n  {\r\n    int[] nums = {1, 2, 3, 4, 6};\r\n\tint m_len = 8;\r\n    int result = min_SubArray_length(8, nums);\r\n\tSystem.out.printf(\"\\nOriginal array: \"+Arrays.toString(nums));\r\n\tSystem.out.printf(\"\\nMinimum length of a contiguous subarray of which the sum is %d, %d \",m_len, result);\r\n  }\r\n\r\n  public static int min_SubArray_length(int s, int[] nums) {\r\n    int sum = 0, ctr = 0, min_len = Integer.MAX_VALUE;\r\n    for (int i = 0, j = 0; j < nums.length; ) {\r\n      if (nums[j] >= s) {\r\n        return 1;\r\n      } else {\r\n        sum += nums[j];\r\n        ctr++;\r\n        if (sum >= s) {\r\n          min_len = Math.min(min_len, ctr);\r\n          while (j > i) {\r\n            sum -= nums[i];\r\n            ctr--;\r\n            i++;\r\n            if (sum < s) break;\r\n            min_len = Math.min(min_len, ctr);\r\n          }\r\n        }\r\n      }\r\n      j++;\r\n    }\r\n    if (min_len == Integer.MAX_VALUE) {\r\n      return 0;\r\n    }\r\n    return min_len;\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-70.php"}, {"exercise_number": 71, "exercise_content": "71. Write a Java program to form the largest number from a given list of non negative integers.Example:\nInput : \nnums = {1, 2, 3, 0, 4, 6}\nOutput: \nLargest number using the said array numbers: 643210", "exercise_solution_code": "import java.util.*;\r\npublic class solution {\r\n\t\r\n public static String  largest_Numbers(int[] num) {\r\n        String[] array_nums = Arrays.stream(num).mapToObj(String::valueOf).toArray(String[]::new);\r\n        Arrays.sort(array_nums, (String str1, String str2) -> (str2 + str1).compareTo(str1 + str2));\r\n        return Arrays.stream(array_nums).reduce((a, b) -> a.equals(\"0\") ? b : a + b).get();\r\n    }\t\r\n\t\r\n  public static void main(String[] args)\r\n  {\r\n    int[] nums = {1, 2, 3, 0, 4, 6};\r\n\tSystem.out.printf(\"\\nOriginal array: \"+Arrays.toString(nums));\t\r\n\tSystem.out.printf(\"\\nLargest number using the said array numbers: \"+largest_Numbers(nums));\r\n   }  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-71.php"}, {"exercise_number": 72, "exercise_content": "72. Write a Java program to find and print one continuous subarray (from a given array of integers) that if you only sort the said subarray in ascending order then the entire array will be sorted in ascending order.Example:\nInput : \nnums1 = {1, 2, 3, 0, 4, 6}\nnums2 = { 1, 3, 2, 7, 5, 6, 4, 8}\nOutput: \nContinuous subarray:\n1 2 3 0 \nContinuous subarray:\n3 2 7 5 6 4", "exercise_solution_code": "import java.util.Arrays;\r\npublic class solution {\r\npublic static int[] findUnsortedSubarray(int[] nums) {\r\n\t\t\tint[] result = new int[3];\r\n            int n = nums.length;\r\n            int start = -1;\r\n            int end = -2;\r\n            int min = nums[n - 1];\r\n            int max = nums[0];\r\n            for (int i = 1; i < n; i++) {\r\n                max = Math.max(max, nums[i]);\r\n                min = Math.min(min, nums[n - 1 - i]);\r\n                if (nums[i] < max) {\r\n                    end = i;\r\n                }\r\n                if (nums[n - 1 - i] > min) {\r\n                    start = n - 1 - i;\r\n                }\r\n            }\r\n           \t\tresult[0] = start;\r\n\t\t    result[1] = end;\r\n\r\n\t\t\treturn result;\r\n        }\r\n    \r\n  public static void main(String[] args)\r\n  {\r\n    int[] nums1 = {1, 2, 3, 0, 4, 6};\r\n\tSystem.out.printf(\"\\nOriginal array: \"+Arrays.toString(nums1));\t\r\n\r\n\tint[] result1 = findUnsortedSubarray(nums1);\r\n\tSystem.out.printf(\"\\nContinuous subarray:\\n\");\r\n\tfor(int i=result1[0]; i<=result1[1]; i++){\r\n        System.out.print(nums1[i] +\" \");\r\n        }\r\n\t\r\n\tint[] nums2 = { 1, 3, 2, 7, 5, 6, 4, 8};\r\n\tSystem.out.printf(\"\\n\\nOriginal array: \"+Arrays.toString(nums2));\t\r\n    System.out.printf(\"\\nContinuous subarray:\\n\"); \r\n\tint[] result2 = findUnsortedSubarray(nums2);\r\n\t\r\n\tfor(int i=result2[0]; i<=result2[1]; i++){\r\n        System.out.print(nums2[i] +\" \");\r\n        }\r\n   }  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-72.php"}, {"exercise_number": 73, "exercise_content": "73. Write a Java program to sort a given array of distinct integers where all its numbers are sorted except two numbers.Example:\nInput : \nnums1 = { 3, 5, 6, 9, 8, 7 }\nnums2 = { 5, 0, 1, 2, 3, 4, -2 }\nOutput: \nAfter sorting new array becomes: [3, 5, 6, 7, 8, 9]\nAfter sorting new array becomes: [-2, 0, 1, 2, 3, 4, 5]", "exercise_solution_code": "import java.util.Arrays;\r\n\r\nclass solution\r\n{\r\n\tprivate static int [] sort_Array(int[] nums)\r\n\t{\r\n\t\tint x = -1, y = -1;\r\n\t\tint prev = nums[0];\r\n\r\n\t\tfor (int i = 1; i < nums.length; i++)\r\n\t\t{\r\n\t\t\tif (prev > nums[i])\r\n\t\t\t{\r\n\t\t\t\tif (x == -1) {\r\n\t\t\t\t\tx = i - 1;\r\n\t\t\t\t\ty = i;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ty = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprev = nums[i];\r\n\t\t}\r\n\r\n\t\tswap_nums(nums, x, y);\r\n\t\treturn nums;\r\n\t}\r\n\r\n\tprivate static void swap_nums(int[] a, int i, int j) {\r\n\t\tint temp_val = a[i];\r\n\t\ta[i] = a[j];\r\n\t\ta[j] = temp_val;\r\n\t}\r\n\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tint[] nums1 = { 3, 5, 6, 9, 8, 7 };\r\n        System.out.println(\"\\nOriginal array: \"+Arrays.toString(nums1));\r\n\t\tint[] result1 = sort_Array(nums1);\r\n\t\tSystem.out.println(\"\\nAfter sorting new array becomes: \"+Arrays.toString(result1));\r\n\t\tint[] nums2 = { 5, 0, 1, 2, 3, 4, -2 };\r\n        System.out.println(\"\\nOriginal array: \"+Arrays.toString(nums2));\r\n\t\tint[] result2 = sort_Array(nums2);\r\n\t\tSystem.out.println(\"\\nAfter sorting new array becomes: \"+Arrays.toString(result2));\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-73.php"}, {"exercise_number": 74, "exercise_content": "74. Write a Java program to find all triplets equal to a given sum in a unsorted array of integers.Example:\nInput : \nnums = { 1, 6, 3, 0, 8, 4, 1, 7 }\nOutput: \nTriplets of sum 7\n(0 1 6)\n(0 3 4)", "exercise_solution_code": "import java.util.Arrays;\r\n\r\n\tclass solution {\r\n\t\r\n\t\tpublic static void find_and_print_all_Triplets(int[] nums, int sum, int alen)\r\n\t\t{\r\n\t\tSystem.out.println(\"\\nTriplets of sum \"+sum);\r\n\t\tfor (int i = 0; i <= alen - 3; i++)\r\n\t\t\t{\r\n\t\t\t\tint k = sum - nums[i];\r\n\t\t\t\tint l_index = i + 1, h_index = nums.length - 1;\r\n\t\r\n\t\t\t\twhile (l_index < h_index)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (nums[l_index] + nums[h_index] < k) {\r\n\t\t\t\t\t\tl_index++;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\telse if (nums[l_index] + nums[h_index] > k) {\r\n\t\t\t\t\t\th_index--;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tSystem.out.println(\"(\" + nums[i] + \" \" + nums[l_index] + \" \" + nums[h_index] + \")\");\r\n\t\t\t\t\t\tl_index++;\r\n\t\t\t\t\t\th_index--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tpublic static void main(String[] args)\r\n\t\t{\r\n\t\t\tint[] nums = { 1, 6, 3, 0, 8, 4, 1, 7 };\r\n\t\t\tint alen = nums.length;\r\n\t\t\tSystem.out.println(\"\\nOriginal array: \"+Arrays.toString(nums));\r\n\t\t\t// sort the array in ascending order\r\n\t\t\tArrays.sort(nums);\r\n\t\t\tint sum = 7;\r\n\t\r\n\t\t\tfind_and_print_all_Triplets(nums, sum, alen);\r\n\t\t}\r\n\t}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-74.php"}, {"exercise_number": 75, "exercise_content": "75. Write a Java program to calculate the largest gap between sorted elements of an array of integers.Example:\nOriginal array: [23, -2, 45, 38, 12, 4, 6]\nLargest gap between sorted elements of the said array: 15", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.util.Arrays;\r\n\r\npublic class Main {\r\n\r\n  public static void main(String[] args) {\r\n    //int[] nums = {1, 2 ,9, 0, 4, 6};\r\n    int[] nums = {23, -2, 45, 38, 12, 4, 6};\r\n    System.out.printf(\"\\nOriginal array: \" + Arrays.toString(nums));\r\n\r\n    int result = test(nums);\r\n    System.out.printf(\"\\nLargest gap between sorted elements of the said array: \" + result);\r\n  }\r\n\r\n  public static int test(int[] nums) {\r\n    Arrays.sort(nums);\r\n    int max_val = 0;\r\n\r\n    for (int i = 0; i < nums.length - 1; i++) {\r\n      max_val = Math.max(nums[i + 1] - nums[i], max_val);\r\n    }\r\n    return max_val;\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-75.php"}, {"exercise_number": 76, "exercise_content": "76. Write a Java program to determine whether numbers in an array can be rearranged so that each number appears exactly once in a consecutive list of numbers. Return true otherwise false.Example:\nOriginal array: [1, 2, 5, 0, 4, 3, 6]\nCheck consecutive numbers in the said array!true", "exercise_solution_code": " import java.util.Scanner;\r\nimport java.util.Arrays;\r\n\r\npublic class Main {\r\n\r\n  public static void main(String[] args) {\r\n    int[] nums = {1, 2 ,5, 0, 4, 3, 6};\r\n   // int[] nums = {1, 2 ,5, 0, 3, 6, 7};\r\n    System.out.printf(\"\\nOriginal array: \" + Arrays.toString(nums));\r\n\r\n    boolean result = test(nums);\r\n    System.out.printf(\"\\nCheck consecutive numbers in the said array!\" + result);\r\n  }\r\n\r\n  public static boolean test(int[] nums) {\r\n\t\tArrays.sort(nums);\r\n\t\tfor (int i = 0; i < nums.length - 1; i++) {\r\n\t\t\t\tif (nums[i] + 1 != nums[i+1])\r\n\t\t\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-76.php"}, {"exercise_number": 77, "exercise_content": "77. Write a Java program that checks whether an array of integers alternates between positive and negative values.Example:\nOriginal array: [1, -2, 5, -4, 3, -6]\nCheck the said array of integers alternates between positive and negative values!true", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.util.Arrays;\r\n\r\npublic class Main {\r\n\r\n  public static void main(String[] args) {\r\n    int[] nums = {\r\n      1,\r\n      -2,\r\n      5,\r\n      -4,\r\n      3,\r\n      -6\r\n    };\r\n    //int[] nums = {1, 2 ,5, 4, 3, 6};\r\n    System.out.printf(\"\\nOriginal array: \" + Arrays.toString(nums));\r\n\r\n    boolean result = test(nums);\r\n    System.out.printf(\"\\nCheck the said array of integers alternates between positive and negative values!\" + result);\r\n  }\r\n\r\n  public static boolean test(int[] nums) {\r\n    for (int n: nums) {\r\n      if (n == 0)\r\n        return false;\r\n    }\r\n    for (int i = 1; i < nums.length; i++) {\r\n      if (nums[i - 1] > 0 && nums[i] > 0) {\r\n        return false;\r\n      } else if (nums[i - 1] < 0 && nums[i] < 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-77.php"}, {"exercise_number": 78, "exercise_content": "78. Write a Java program that checks an array is negative dominant or not. If the array is negative dominant return true otherwise false.Example:\nOriginal array of numbers:\n[1, -2, -5, -4, 3, -6]\nCheck Negative Dominance in the said array!true", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.util.Arrays;\r\n\r\npublic class Main {\r\n\r\n  public static void main(String[] args) {\r\n    int[] nums = {1,-2, -5,-4,3,-6};\r\n    //int[] nums = {1, 2, 5, -4, 3, -6};\r\n    //int[] nums = {1, 2, -5, -4, -3, 6};\r\n    System.out.printf(\"\\nOriginal array of numbers:\\n\" + Arrays.toString(nums));\r\n    boolean result = test(nums);\r\n    System.out.printf(\"\\nCheck Negative Dominance in the said array!\" + result);\r\n  }\r\n  public static boolean test(int[] nums) {\r\n    long count_negative, count_positive;\r\n    nums = Arrays.stream(nums).distinct().toArray();\r\n    count_negative = Arrays.stream(nums).filter(s -> s < 0).count();\r\n    count_positive = Arrays.stream(nums).filter(s -> s > 0).count();\r\n    return count_negative > count_positive;\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-78.php"}, {"exercise_number": 79, "exercise_content": "79. Write a Java program that returns the missing letter from an array of increasing letters (upper or lower). Assume there will always be one letter missing in the array.Example:\nOriginal array of elements:\n[p, r, s, t]\nMissing letter in the said array: q", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.util.Arrays;\r\n\r\npublic class Main {\r\n\r\n  public static void main(String[] args) {\r\n    //String[] str_arra = {\"A\", \"B\", \"D\", \"E\"};\r\n    //String[] str_arra = {\"a\", \"b\", \"c\", \"e\"};\r\n     String[] str_arra = {\"p\", \"r\", \"s\", \"t\"};\r\n    System.out.printf(\"Original array of elements:\\n\" + Arrays.toString(str_arra));\r\n    String result = test(str_arra);\r\n    System.out.printf(\"\\nMissing letter in the said array: \" + result);\r\n  }\r\n\r\n  public static String test(String[] str_arra) {\r\n    int c = str_arra[0].charAt(0) + 1;\r\n    for (int i = 1; i < str_arra.length; i++, c++)\r\n      if (str_arra[i].charAt(0) != c)\r\n        return String.valueOf((char) c);\r\n    return \"\";\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/array/java-array-exercise-79.php"}], "String": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to get the character at the given index within the String.Sample Output:Original String = Java Exercises!                                                                             \r\nThe character at position 0 is J                                                                              \r\nThe character at position 10 is i", "exercise_solution_code": "public class Exercise1 {\r\n   public static void main(String[] args)\r\n    {\r\n        String str = \"Java Exercises!\";\r\n        System.out.println(\"Original String = \" + str);\r\n        // Get the character at positions 0 and 10.\r\n        int index1 = str.charAt(0);\r\n        int index2 = str.charAt(10);\r\n\r\n        // Print out the results.\r\n        System.out.println(\"The character at position 0 is \" +\r\n            (char)index1);\r\n        System.out.println(\"The character at position 10 is \" +\r\n            (char)index2);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to get the character (Unicode code point) at the given index within the String.Sample Output:Original String : w3resource.com                                                                              \r\nCharacter(unicode point) = 51                                                                                 \r\nCharacter(unicode point) = 101", "exercise_solution_code": "public class Exercise2 {\r\n\r\n   public static void main(String[] args) {\r\n  \r\n    String str = \"w3resource.com\";\r\n    System.out.println(\"Original String : \" + str);\r\n        \r\n    // codepoint at index 1\r\n    int val1 = str.codePointAt(1);\r\n    \r\n    // codepoint at index 9\r\n    int val2 = str.codePointAt(9);\r\n        \r\n    // prints character at index1 in string\r\n    System.out.println(\"Character(unicode point) = \" + val1);\r\n    // prints character at index9 in string\r\n    System.out.println(\"Character(unicode point) = \" + val2);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to get the character (Unicode code point) before the specified index within the String.Sample Output:Original String : w3resource.com                                                                              \r\nCharacter(unicode point) = 119                                                                                \r\nCharacter(unicode point) = 99", "exercise_solution_code": "public class Exercise3 {\r\n\r\n   public static void main(String[] args) {\r\n  \r\n    String str = \"w3resource.com\";\r\n    System.out.println(\"Original String : \" + str);\r\n        \r\n    // codepoint before index 1\r\n    int val1 = str.codePointBefore(1);\r\n    \r\n   // codepoint before index 9\r\n    int val2 = str.codePointBefore(9);\r\n        \r\n    // prints character before index1 in string\r\n    System.out.println(\"Character(unicode point) = \" + val1);\r\n    // prints character before index9 in string\r\n    System.out.println(\"Character(unicode point) = \" + val2);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to count a number of Unicode code points in the specified text range of a String.Sample Output:Original String : w3rsource.com                                                                               \r\nCodepoint count = 9", "exercise_solution_code": "public class Exercise4 {\r\n\r\n public static void main(String[] args) {\r\n  \r\n    String str = \"w3rsource.com\";\r\n    System.out.println(\"Original String : \" + str);\r\n        \r\n    // codepoint from index 1 to index 10\r\n    int ctr = str.codePointCount(1, 10);\r\n        \r\n    // prints character from index 1 to index 10\r\n    System.out.println(\"Codepoint count = \" + ctr);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to compare two strings lexicographically. Two strings are lexicographically equal if they are the same length and contain the same characters in the same positions.Sample Output:String 1: This is Exercise 1                                                                                  \r\nString 2: This is Exercise 2                                                                                  \r\n\"This is Exercise 1\" is less than \"This is Exercise 2\"", "exercise_solution_code": "public class Exercise5 {\r\npublic static void main(String[] args)\r\n    {\r\n        String str1 = \"This is Exercise 1\";\r\n        String str2 = \"This is Exercise 2\";\r\n        \r\n        System.out.println(\"String 1: \" + str1);\r\n        System.out.println(\"String 2: \" + str2); \r\n       \r\n        // Compare the two strings.\r\n        int result = str1.compareTo(str2);\r\n\r\n        // Display the results of the comparison.\r\n        if (result < 0)\r\n        {\r\n            System.out.println(\"\\\"\" + str1 + \"\\\"\" +\r\n                \" is less than \" +\r\n                \"\\\"\" + str2 + \"\\\"\");\r\n        }\r\n        else if (result == 0)\r\n        {\r\n            System.out.println(\"\\\"\" + str1 + \"\\\"\" +\r\n                \" is equal to \" +\r\n                \"\\\"\" + str2 + \"\\\"\");\r\n        }\r\n        else // if (result > 0)\r\n        {\r\n            System.out.println(\"\\\"\" + str1 + \"\\\"\" +\r\n                \" is greater than \" +\r\n                \"\\\"\" + str2 + \"\\\"\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to compare two strings lexicographically, ignoring case differences.Sample Output:String 1: This is exercise 1                                                                                  \r\nString 2: This is Exercise 1                                                                                  \r\n\"This is exercise 1\" is equal to \"This is Exercise 1\"", "exercise_solution_code": "public class Exercise6 {\r\n\r\npublic static void main(String[] args)\r\n    {\r\n        String str1 = \"This is exercise 1\";\r\n        String str2 = \"This is Exercise 1\";\r\n        \r\n        System.out.println(\"String 1: \" + str1);\r\n        System.out.println(\"String 2: \" + str2); \r\n       \r\n        // Compare the two strings.\r\n        int result = str1.compareToIgnoreCase(str2);\r\n\r\n        // Display the results of the comparison.\r\n        if (result < 0)\r\n        {\r\n            System.out.println(\"\\\"\" + str1 + \"\\\"\" +\r\n                \" is less than \" +\r\n                \"\\\"\" + str2 + \"\\\"\");\r\n        }\r\n        else if (result == 0)\r\n        {\r\n            System.out.println(\"\\\"\" + str1 + \"\\\"\" +\r\n                \" is equal to \" +\r\n                \"\\\"\" + str2 + \"\\\"\");\r\n        }\r\n        else // if (result > 0)\r\n        {\r\n            System.out.println(\"\\\"\" + str1 + \"\\\"\" +\r\n                \" is greater than \" +\r\n                \"\\\"\" + str2 + \"\\\"\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to concatenate a given string to the end of another string.Sample Output:String 1: PHP Exercises and                                                                                   \r\nString 2: Python Exercises                                                                                    \r\nThe concatenated string: PHP Exercises and Python Exercises", "exercise_solution_code": "public class Exercise7 {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        String str1 = \"PHP Exercises and \";\r\n        String str2 = \"Python Exercises\";\r\n        \r\n        System.out.println(\"String 1: \" + str1);\r\n        System.out.println(\"String 2: \" + str2); \r\n       \r\n\r\n        // Concatenate the two strings together.\r\n        String str3 = str1.concat(str2);\r\n\r\n        // Display the new String.\r\n        System.out.println(\"The concatenated string: \" + str3);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to test if a given string contains the specified sequence of char values.Sample Output:Original String: PHP Exercises and Python Exercises                                                           \r\nSpecified sequence of char values: and                                                                        \r\ntrue", "exercise_solution_code": "public class Exercise8 {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        String str1 = \"PHP Exercises and Python Exercises\";\r\n        String str2 = \"and\";\r\n        System.out.println(\"Original String: \" + str1);\r\n        System.out.println(\"Specified sequence of char values: \" + str2);\r\n        System.out.println(str1.contains(str2));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to compare a given string to the specified character sequence.Sample Output:Comparing example.com and example.com: true                                                                   \r\nComparing Example.com and example.com: false", "exercise_solution_code": "public class Exercise9 {\r\npublic static void main(String[] args) {\r\n    String str1 = \"example.com\", str2 = \"Example.com\";\r\n    CharSequence cs = \"example.com\";\r\n     System.out.println(\"Comparing \"+str1+\" and \"+cs+\": \" + str1.contentEquals(cs));\r\n      System.out.println(\"Comparing \"+str2+\" and \"+cs+\": \" + str2.contentEquals(cs));\r\n          }\r\n}\r\n    \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to compare a given string to the specified string buffer.Sample Output:Comparing example.com and example.com: true                                                                   \r\nComparing Example.com and example.com: false", "exercise_solution_code": "public class Exercise10 {\r\n\r\npublic static void main(String[] args) {\r\n\r\n    String str1 = \"example.com\", str2 = \"Example.com\";\r\n    StringBuffer strbuf = new StringBuffer(str1);\r\n    \r\n    System.out.println(\"Comparing \"+str1+\" and \"+strbuf+\": \" + str1.contentEquals(strbuf));\r\n    \r\n    System.out.println(\"Comparing \"+str2+\" and \"+strbuf+\": \" + str2.contentEquals(strbuf));\r\n    \r\n      }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to create a new String object with the contents of a character array.Sample Output:The book contains 234 pages.", "exercise_solution_code": "public class Exercise11 {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        // Character array with data.\r\n        char[] arr_num = new char[] { '1', '2', '3', '4' };\r\n\r\n        // Create a String containig the contents of arr_num\r\n        // starting at index 1 for length 2.\r\n        String str = String.copyValueOf(arr_num, 1, 3);\r\n\r\n        // Display the results of the new String.\r\n        System.out.println(\"\\nThe book contains \" + str +\" pages.\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to check whether a given string ends with the contents of another string.Sample Output:\"Python Exercises\" ends with \"se\"? false                                                                      \r\n\"Python Exercise\" ends with \"se\"? true", "exercise_solution_code": "public class Exercise12 {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        String str1 = \"Python Exercises\";\r\n        String str2 = \"Python Exercise\";\r\n\r\n        // The String to check the above two Strings to see\r\n        // if they end with this value (se).\r\n        String end_str = \"se\";\r\n\r\n        // Check first two Strings end with end_str\r\n        boolean ends1 = str1.endsWith(end_str);\r\n        boolean ends2 = str2.endsWith(end_str);\r\n\r\n        // Display the results of the endsWith calls.\r\n        System.out.println(\"\\\"\" + str1 + \"\\\" ends with \" +\r\n            \"\\\"\" + end_str + \"\\\"? \" + ends1);\r\n        System.out.println(\"\\\"\" + str2 + \"\\\" ends with \" +\r\n            \"\\\"\" + end_str + \"\\\"? \" + ends2);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to check whether two String objects contain the same data.Sample Output:\"Stephen Edwin King\" equals \"Walter Winchell\"? false                                                          \r\n\"Stephen Edwin King\" equals \"Mike Royko\"? false", "exercise_solution_code": "public class Exercise13 {\r\n\r\n   public static void main(String[] args)\r\n    {\r\n        String columnist1 = \"Stephen Edwin King\";\r\n        String columnist2 = \"Walter Winchell\";\r\n        String columnist3 = \"Mike Royko\";\r\n\r\n        // Are any of the above Strings equal to one another?\r\n        boolean equals1 = columnist1.equals(columnist2);\r\n        boolean equals2 = columnist1.equals(columnist3);\r\n\r\n        // Display the results of the equality checks.\r\n        System.out.println(\"\\\"\" + columnist1 + \"\\\" equals \\\"\" +\r\n            columnist2 + \"\\\"? \" + equals1);\r\n        System.out.println(\"\\\"\" + columnist1 + \"\\\" equals \\\"\" +\r\n            columnist3 + \"\\\"? \" + equals2);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to compare a given string to another string, ignoring case considerations.Sample Output:\"Stephen Edwin King\" equals \"Walter Winchell\"? false                                                          \r\n\"Stephen Edwin King\" equals \"stephen edwin king\"? true", "exercise_solution_code": "public class Exercise14 {\r\n\r\n  public static void main(String[] args)\r\n    {\r\n        String columnist1 = \"Stephen Edwin King\";\r\n        String columnist2 = \"Walter Winchell\";\r\n        String columnist3 = \"stephen edwin king\";\r\n\r\n        // Test any of the above Strings equal to one another\r\n        boolean equals1 = columnist1.equalsIgnoreCase(columnist2);\r\n        boolean equals2 = columnist1.equalsIgnoreCase(columnist3);\r\n\r\n        // Display the results of the equality checks.\r\n        System.out.println(\"\\\"\" + columnist1 + \"\\\" equals \\\"\" +\r\n            columnist2 + \"\\\"? \" + equals1);\r\n        System.out.println(\"\\\"\" + columnist1 + \"\\\" equals \\\"\" +\r\n            columnist3 + \"\\\"? \" + equals2);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to print current date and time in the specified format.Sample Output:Current Date and Time :                                                                                       \r\nJune 19, 2017                                                                                                 \r\n3:13 pmN.B. : The current date and time will change according to your system date and time.", "exercise_solution_code": "import java.util.Calendar;\r\n\r\npublic class Exercise15 {\r\n \r\n public static void main(String[] args) { \r\n    Calendar c = Calendar.getInstance();\r\n      System.out.println(\"Current Date and Time :\"); \r\n      System.out.format(\"%tB %te, %tY%n\", c, c, c);\r\n      System.out.format(\"%tl:%tM %tp%n\", c, c, c); \r\n   }\r\n   }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to get the contents of a given string as a byte array.Sample Output:The new String equals This is a sample String.", "exercise_solution_code": "import java.util.Calendar;\r\n\r\npublic class Exercise16 {\r\n \r\n  public static void main(String[] args)\r\n    {\r\n        String str = \"This is a sample String.\";\r\n\r\n        // Copy the contents of the String to a byte array.\r\n        byte[] byte_arr = str.getBytes();\r\n\r\n        // Create a new String using the contents of the byte array.\r\n        String new_str = new String(byte_arr);\r\n\r\n        // Display the contents of the byte array.\r\n        System.out.println(\"\\nThe new String equals \" +\r\n            new_str + \"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to get the contents of a given string as a character array.Sample Output:The char array equals \"[[email\u00a0protected]\"", "exercise_solution_code": "public class Exercise17 {\r\n \r\n  public static void main(String[] args)\r\n    {\r\n        String str = \"This is a sample string.\";\r\n\r\n        // Copy the contents of the String to a byte array.\r\n        // Only copy characters 4 through 10 from str.\r\n        // Fill the source array starting at position 2.\r\n        char[] arr = new char[] { ' ', ' ', ' ', ' ',\r\n                                  ' ', ' ', ' ', ' ' };\r\n        str.getChars(4, 10, arr, 2);\r\n\r\n        // Display the contents of the byte array.\r\n        System.out.println(\"The char array equals \\\"\" +\r\n            arr + \"\\\"\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to create a unique identifier of a given string.Sample Output:The hash for Python Exercises. is 863132599", "exercise_solution_code": "public class Exercise18 {\r\n \r\n  public static void main(String[] args)\r\n    {\r\n        String str = \"Python Exercises.\";\r\n\r\n        // Get the hash code for the above string.\r\n        int hash_code = str.hashCode();\r\n\r\n        // Display the hash code.\r\n        System.out.println(\"The hash for \" + str +\r\n            \" is \" + hash_code);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to get the index of all the characters of the alphabet.Sample Output:a  b c  d e  f  g h i  j                                                                                     \r\n=========================                                                                                     \r\n36 10 7 40 2 16 42 1 6 20                                                                                     \r\n                                                                                                   \r\nk  l  m  n  o  p q  r  s  t                                                                                   \r\n===========================                                                                                   \r\n8 35 22 14 12 23 4 11 24 31                                                                                   \r\n\r\nu  v  w  x  y  z                                                                                              \r\n================                                                                                              \r\n5 27 13 18 38 37Sample string of all alphabet: \"The quick brown fox jumps over the lazy dog.\"", "exercise_solution_code": "public class Exercise19 {\r\n \r\n  public static void main(String[] args)\r\n    {\r\n        String str = \"The quick brown fox jumps over the lazy dog.\";\r\n\r\n        // Get the index of all the characters of the alphabet\r\n        // starting from the beginning of the String.\r\n        int a = str.indexOf(\"a\", 0);\r\n        int b = str.indexOf(\"b\", 0);\r\n        int c = str.indexOf(\"c\", 0);\r\n        int d = str.indexOf(\"d\", 0);\r\n        int e = str.indexOf(\"e\", 0);\r\n        int f = str.indexOf(\"f\", 0);\r\n        int g = str.indexOf(\"g\", 0);\r\n        int h = str.indexOf(\"h\", 0);\r\n        int i = str.indexOf(\"i\", 0);\r\n        int j = str.indexOf(\"j\", 0);\r\n        int k = str.indexOf(\"k\", 0);\r\n        int l = str.indexOf(\"l\", 0);\r\n        int m = str.indexOf(\"m\", 0);\r\n        int n = str.indexOf(\"n\", 0);\r\n        int o = str.indexOf(\"o\", 0);\r\n        int p = str.indexOf(\"p\", 0);\r\n        int q = str.indexOf(\"q\", 0);\r\n        int r = str.indexOf(\"r\", 0);\r\n        int s = str.indexOf(\"s\", 0);\r\n        int t = str.indexOf(\"t\", 0);\r\n        int u = str.indexOf(\"u\", 0);\r\n        int v = str.indexOf(\"v\", 0);\r\n        int w = str.indexOf(\"w\", 0);\r\n        int x = str.indexOf(\"x\", 0);\r\n        int y = str.indexOf(\"y\", 0);\r\n        int z = str.indexOf(\"z\", 0);\r\n\r\n        // Display the results of all the indexOf method calls.\r\n        System.out.println(\" a  b c  d e  f  g h i  j\");\r\n        System.out.println(\"=========================\");\r\n        System.out.println(a + \" \" + b + \" \" + c + \" \" + d + \" \" +\r\n                           e + \" \" + f + \" \" + g + \" \" + h + \" \" +\r\n                           i + \" \" + j + \"\\n\");\r\n\r\n        System.out.println(\"k  l  m  n  o  p q  r  s  t\");\r\n        System.out.println(\"===========================\");\r\n        System.out.println(k + \" \" + l + \" \" + m + \" \" + n + \" \" +\r\n                           o + \" \" + p + \" \" + q + \" \" + r + \" \" +\r\n                           s + \" \" + t + \"\\n\");\r\n\r\n        System.out.println(\"u  v  w  x  y  z\");\r\n        System.out.println(\"================\");\r\n        System.out.println(u + \" \" + v + \" \" + w + \" \" + x + \" \" +\r\n                           y + \" \" + z);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program to get the canonical representation of the string object.Sample Output:str1 == str2? false                                                                                           \r\nstr1 == str3? true", "exercise_solution_code": "public class Exercise20 {\r\npublic static void main(String[] args)\r\n    {\r\n        // Create three strings in three different ways.\r\n        String str1 = \"Java Exercises\";\r\n        String str2 = new StringBuffer(\"Java\").append(\" Exercises\").toString();\r\n        String str3 = str2.intern();\r\n\r\n        // Determine which strings are equivalent using the ==\r\n        // operator (as compared to calling equals(), which is\r\n        // a more expensive operation.\r\n        System.out.println(\"str1 == str2? \" + (str1 == str2));\r\n        System.out.println(\"str1 == str3? \" + (str1 == str3));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to get the last index of a string within a string.Sample Output:a  b c  d  e  f  g  h i  j                                                                                   \r\n===========================                                                                                   \r\n36 10 7 40 33 16 42 32 6 20                                                                                   \r\n                                                                                                              \r\nk  l  m  n  o  p q  r  s  t                                                                                   \r\n===========================                                                                                   \r\n8 35 22 14 41 23 4 29 24 31                                                                                   \r\n                                                                                                              \r\n u  v  w  x  y  z                                                                                             \r\n=================                                                                                             \r\n21 27 13 18 38 37Sample string of all alphabet: \"The quick brown fox jumps over the lazy dog.\"", "exercise_solution_code": "public class Exercise21 {\r\npublic static void main(String[] args)\r\n    {\r\n        String str = \"The quick brown fox jumps over the lazy dog.\";\r\n\r\n        // Get the index of all the characters of the alphabet\r\n        // starting from the beginning of the String.\r\n        int a = str.lastIndexOf(\"a\", str.length() - 1);\r\n        int b = str.lastIndexOf(\"b\", str.length() - 1);\r\n        int c = str.lastIndexOf(\"c\", str.length() - 1);\r\n        int d = str.lastIndexOf(\"d\", str.length() - 1);\r\n        int e = str.lastIndexOf(\"e\", str.length() - 1);\r\n        int f = str.lastIndexOf(\"f\", str.length() - 1);\r\n        int g = str.lastIndexOf(\"g\", str.length() - 1);\r\n        int h = str.lastIndexOf(\"h\", str.length() - 1);\r\n        int i = str.lastIndexOf(\"i\", str.length() - 1);\r\n        int j = str.lastIndexOf(\"j\", str.length() - 1);\r\n        int k = str.lastIndexOf(\"k\", str.length() - 1);\r\n        int l = str.lastIndexOf(\"l\", str.length() - 1);\r\n        int m = str.lastIndexOf(\"m\", str.length() - 1);\r\n        int n = str.lastIndexOf(\"n\", str.length() - 1);\r\n        int o = str.lastIndexOf(\"o\", str.length() - 1);\r\n        int p = str.lastIndexOf(\"p\", str.length() - 1);\r\n        int q = str.lastIndexOf(\"q\", str.length() - 1);\r\n        int r = str.lastIndexOf(\"r\", str.length() - 1);\r\n        int s = str.lastIndexOf(\"s\", str.length() - 1);\r\n        int t = str.lastIndexOf(\"t\", str.length() - 1);\r\n        int u = str.lastIndexOf(\"u\", str.length() - 1);\r\n        int v = str.lastIndexOf(\"v\", str.length() - 1);\r\n        int w = str.lastIndexOf(\"w\", str.length() - 1);\r\n        int x = str.lastIndexOf(\"x\", str.length() - 1);\r\n        int y = str.lastIndexOf(\"y\", str.length() - 1);\r\n        int z = str.lastIndexOf(\"z\", str.length() - 1);\r\n\r\n        // Display the results of all the lastIndexOf method calls.\r\n        System.out.println(\" a  b c  d  e  f  g  h i  j\");\r\n        System.out.println(\"===========================\");\r\n        System.out.println(a + \" \" + b + \" \" + c + \" \" + d + \" \" +\r\n                           e + \" \" + f + \" \" + g + \" \" + h + \" \" +\r\n                           i + \" \" + j + \"\\n\");\r\n\r\n        System.out.println(\"k  l  m  n  o  p q  r  s  t\");\r\n        System.out.println(\"===========================\");\r\n        System.out.println(k + \" \" + l + \" \" + m + \" \" + n + \" \" +\r\n                           o + \" \" + p + \" \" + q + \" \" + r + \" \" +\r\n                           s + \" \" + t + \"\\n\");\r\n\r\n        System.out.println(\" u  v  w  x  y  z\");\r\n        System.out.println(\"=================\");\r\n        System.out.println(u + \" \" + v + \" \" + w + \" \" + x + \" \" +\r\n                           y + \" \" + z);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to get the length of a given string.Sample Output:The string length of 'example.com' is: 11", "exercise_solution_code": "public class Exercise22 {\r\npublic static void main(String[] args)\r\n  {  \r\n    String str = \"example.com\";\r\n    // Get the length of str.\r\n    int len = str.length();\r\n    System.out.println(\"The string length of '\"+str+\"' is: \"+len);\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java program to find whether a region in the current string matches a region in another string.Sample Output:str1[0 - 7] == str2[28 - 35]? true                                                                            \r\nstr1[9 - 15] == str2[9 - 15]? false", "exercise_solution_code": "public class Exercise23 {\r\n    \r\n  public static void main(String[] args)\r\n    {\r\n       //String str1 = \"Red Green Orange Yellow\";\r\n        //String str2 = \"Yellow Orange Green Red\";\r\n        \r\n        String str1 = \"Shanghai Houston Colorado Alexandria\";\r\n        String str2 = \"Alexandria Colorado Houston Shanghai\";\r\n\r\n        // Determine whether characters 0 through 7 in str1 \r\n        // match characters 28 through 35 in str2.\r\n        boolean match1 = str1.regionMatches(0, str2, 28, 8);\r\n\r\n        // Determine whether characters 9 through 15 in str1 \r\n        // match characters 9 through 15 in str2.\r\n        boolean match2 = str1.regionMatches(9, str2, 9, 8);\r\n\r\n        // Display the results of the regionMatches method calls.\r\n        System.out.println(\"str1[0 - 7] == str2[28 - 35]? \" + match1);\r\n        System.out.println(\"str1[9 - 15] == str2[9 - 15]? \" + match2);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to replace a specified character with another character.Sample Output:Original string: The quick brown fox jumps over the lazy dog.                                                 \r\nNew String: The quick brown fox jumps over the lazy fog.", "exercise_solution_code": "public class Exercise24 {\r\n    \r\n   public static void main(String[] args)\r\n    {\r\n        String str = \"The quick brown fox jumps over the lazy dog.\";\r\n\r\n        // Replace all the 'd' characters with 'f' characters.\r\n        String new_str = str.replace('d', 'f');\r\n\r\n        // Display the strings for comparison.\r\n        System.out.println(\"Original string: \" + str);\r\n        System.out.println(\"New String: \" + new_str);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to replace each substring of a given string that matches the given regular expression with the given replacement.Sample string : \"The quick brown fox jumps over the lazy dog.\"In the above string replace all the fox with cat.Sample Output:Original string: The quick brown fox jumps over the lazy dog.                                                 \r\nNew String: The quick brown cat jumps over the lazy dog.", "exercise_solution_code": "public class Exercise25 {\r\n    \r\n   public static void main(String[] args)\r\n    {\r\n        String str = \"The quick brown fox jumps over the lazy dog.\";\r\n\r\n         // Replace all the 'dog' with 'cat'.\r\n        String new_str = str.replaceAll(\"fox\", \"cat\");\r\n       \r\n         // Display the strings for comparison.\r\n        System.out.println(\"Original string: \" + str);\r\n        System.out.println(\"New String: \" + new_str);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to check whether a given string starts with the contents of another string.Sample Output:Red is favorite color. starts with Red? true                                                                  \r\nOrange is also my favorite color. starts with Red? false", "exercise_solution_code": "public class Exercise26 {\r\n    \r\n   public static void main(String[] args)\r\n    {\r\n        String str1 = \"Red is favorite color.\";\r\n        String str2 = \"Orange is also my favorite color.\";\r\n\r\n        // The String to check the above two Strings to see\r\n        // if they start with this value (Red).\r\n        String startStr = \"Red\";\r\n\r\n        // Do either of the first two Strings start with startStr?\r\n        boolean starts1 = str1.startsWith(startStr);\r\n        boolean starts2 = str2.startsWith(startStr);\r\n\r\n        // Display the results of the startsWith calls.\r\n        System.out.println( str1 + \" starts with \" +\r\n             startStr + \"? \" + starts1);\r\n        System.out.println(str2 + \" starts with \" +\r\n             startStr + \"? \" + starts2);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-26.php"}, {"exercise_number": 27, "exercise_content": "27. Write a Java program to get a substring of a given string between two specified positions.Sample Output:old = The quick brown fox jumps over the lazy dog.                                                            \r\nnew = brown fox jumps", "exercise_solution_code": "public class Exercise27 {\r\n    \r\n   public static void main(String[] args)\r\n    {\r\n        String str = \"The quick brown fox jumps over the lazy dog.\";\r\n\r\n        // Get a substring of the above string starting from\r\n        // index 10 and ending at index 26.\r\n        String new_str = str.substring(10, 26);\r\n\r\n        // Display the two strings for comparison.\r\n        System.out.println(\"old = \" + str);\r\n        System.out.println(\"new = \" + new_str);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-27.php"}, {"exercise_number": 28, "exercise_content": "28. Write a Java program to create a character array containing the contents of a string.Sample Output:Java Exercises.", "exercise_solution_code": "public class Exercise28 {\r\n    \r\n  public static void main(String[] args)\r\n    {\r\n        String str = \"Java Exercises.\";\r\n\r\n        // Convert the above string to a char array.\r\n        char[] arr = str.toCharArray();\r\n\r\n        // Display the contents of the char array.\r\n        System.out.println(arr);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-28.php"}, {"exercise_number": 29, "exercise_content": "29. Write a Java program to convert all the characters in a string to lowercase.Sample Output:Original String: The Quick BroWn FoX!                                                                         \r\nString in lowercase: the quick brown fox!", "exercise_solution_code": "public class Exercise29 {\r\n       public static void main(String[] args)\r\n    {\r\n        String str = \"The Quick BroWn FoX!\";\r\n\r\n        // Convert the above string to all lowercase.\r\n        String lowerStr = str.toLowerCase();\r\n\r\n        // Display the two strings for comparison.\r\n        System.out.println(\"Original String: \" + str);\r\n        System.out.println(\"String in lowercase: \" + lowerStr);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-29.php"}, {"exercise_number": 30, "exercise_content": "30. Write a Java program to convert all the characters in a string to uppercase.Sample Output:Original String: The Quick BroWn FoX!                                                                         \r\nString in uppercase: THE QUICK BROWN FOX!", "exercise_solution_code": "public class Exercise30 {\r\n    \r\n   public static void main(String[] args)\r\n    {\r\n        String str = \"The Quick BroWn FoX!\";\r\n\r\n        // Convert the above string to all uppercase.\r\n        String upper_str = str.toUpperCase();\r\n\r\n        // Display the two strings for comparison.\r\n        System.out.println(\"Original String: \" + str);\r\n        System.out.println(\"String in uppercase: \" + upper_str);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-30.php"}, {"exercise_number": 31, "exercise_content": "31. Write a Java program to trim any leading or trailing whitespace from a given string.Sample Output:Original String:  Java Exercises                                                                              \r\nNew String: Java Exercises", "exercise_solution_code": "public class Exercise31 {\r\n\r\npublic static void main(String[] args)\r\n    {\r\n        String str = \" Java Exercises \";\r\n\r\n        // Trim the whitespace from the front and back of the\r\n        // String.\r\n        String new_str = str.trim();\r\n\r\n        // Display the strings for comparison.\r\nSystem.out.println(\"Original String: \" + str);\r\nSystem.out.println(\"New String: \" + new_str);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-31.php"}, {"exercise_number": 32, "exercise_content": "32. Write a Java program to find longest Palindromic Substring within a string.Sample Output:The given string is: thequickbrownfoxxofnworbquickthe\r\nThe longest palindrome substring in the giv\r\nen string is; brownfoxxofnworb\r\nThe length of the palindromic substring is: 16", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n static void printSubStr(String str1, int l, int h) {\r\n  System.out.println(str1.substring(l, h + 1));\r\n }\r\n\r\n static int longPalSubstr(String str1) {\r\n  int n = str1.length();\r\n  boolean table[][] = new boolean[n][n];\r\n  int mLength = 1;\r\n  for (int i = 0; i < n; ++i)\r\n   table[i][i] = true;\r\n  int strt = 0;\r\n  for (int i = 0; i < n - 1; ++i) {\r\n   if (str1.charAt(i) == str1.charAt(i + 1)) {\r\n    table[i][i + 1] = true;\r\n    strt = i;\r\n    mLength = 2;\r\n   }\r\n  }\r\n  for (int k = 3; k <= n; ++k) {\r\n   for (int i = 0; i < n - k + 1; ++i) {\r\n    int j = i + k - 1;\r\n    if (table[i + 1][j - 1] && str1.charAt(i) == str1.charAt(j)) {\r\n     table[i][j] = true;\r\n\r\n     if (k > mLength) {\r\n      strt = i;\r\n      mLength = k;\r\n     }\r\n    }\r\n   }\r\n  }\r\n  System.out.print(\"The longest palindrome substring in the given string is; \");\r\n  printSubStr(str1, strt, strt + mLength - 1);\r\n  return mLength;\r\n }\r\n public static void main(String[] args) {\r\n  String str1 = \"thequickbrownfoxxofnworbquickthe\";\r\n  System.out.println(\"The given string is: \" + str1);\r\n  System.out.println(\"The length of the palindromic substring is: \" + longPalSubstr(str1));\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-32.php"}, {"exercise_number": 33, "exercise_content": "33. Write a Java program to find all interleavings of given strings.Sample Output:The given strings are: WX  YZ\r\nThe interleavings strings are: \r\nYWZX\r\nWYZX\r\nYWXZ\r\nWXYZ\r\nYZWX\r\nWYXZ", "exercise_solution_code": "import java.util.HashSet;\r\nimport java.util.Set;\r\n\r\nclass Main {\r\n public static void allInterleavings(String res, String P, String Q, Set < String > out) {\r\n  if (P.length() == 0 && Q.length() == 0) {\r\n   out.add(res);\r\n   return;\r\n  }\r\n  if (P.length() > 0) {\r\n   allInterleavings(res + P.charAt(0), P.substring(1), Q, out);\r\n  }\r\n  if (Q.length() > 0) {\r\n   allInterleavings(res + Q.charAt(0), P, Q.substring(1), out);\r\n  }\r\n }\r\n\r\n public static void main(String[] args) {\r\n  String P = \"WX\";\r\n  String Q = \"YZ\";\r\n  System.out.println(\"The given strings are: \" + P + \"  \" + Q);\r\n  System.out.println(\"The interleavings strings are: \");\r\n  Set < String > out = new HashSet < > ();\r\n  allInterleavings(\"\", P, Q, out);\r\n\r\n  out.stream().forEach(System.out::println);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-33.php"}, {"exercise_number": 34, "exercise_content": "34. Write a Java program to find the second most frequent character in a given string.Sample Output:The given string is: successes\r\nThe second most frequent char in the string is: c", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n static final int NOOFCHARS = 256;\r\n static char get2ndMostFreq(String str1) {\r\n\r\n  int[] ctr = new int[NOOFCHARS];\r\n  int i;\r\n  for (i = 0; i < str1.length(); i++)\r\n   (ctr[str1.charAt(i)]) ++;\r\n\r\n  int ctr_first = 0, ctr_second = 0;\r\n  for (i = 0; i < NOOFCHARS; i++) {\r\n   if (ctr[i] > ctr[ctr_first]) {\r\n    ctr_second = ctr_first;\r\n    ctr_first = i;\r\n   } else if (ctr[i] > ctr[ctr_second] && ctr[i] != ctr[ctr_first])\r\n    ctr_second = i;\r\n  }\r\n  return (char) ctr_second;\r\n }\r\n public static void main(String args[]) {\r\n  String str1 = \"successes\";\r\n  System.out.println(\"The given string is: \" + str1);\r\n  char res = get2ndMostFreq(str1);\r\n  if (res != '\\0')\r\n   System.out.println(\"The second most frequent char in the string is: \" + res);\r\n  else\r\n   System.out.println(\"No second most frequent character found in the string.\");\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-34.php"}, {"exercise_number": 35, "exercise_content": "35. Write a Java program to print all permutations of a given string with repetition.Sample Output:The given string is: PQR\r\nThe permuted strings are:\r\nPPP\r\nPPQ\r\nPPR\r\n...\r\nRRP\r\nRRQ\r\nRRR", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n\r\n public static void main(String[] args) {\r\n  permutationWithRepeation(\"PQR\");\r\n\r\n }\r\n\r\n private static void permutationWithRepeation(String str1) {\r\n  System.out.println(\"The given string is: PQR\");\r\n  System.out.println(\"The permuted strings are:\");\r\n  showPermutation(str1, \"\");\r\n }\r\n\r\n private static void showPermutation(String str1, String NewStringToPrint) {\r\n\r\n  if (NewStringToPrint.length() == str1.length()) {\r\n   System.out.println(NewStringToPrint);\r\n   return;\r\n  }\r\n  for (int i = 0; i < str1.length(); i++) {\r\n\r\n   showPermutation(str1, NewStringToPrint + str1.charAt(i));\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-35.php"}, {"exercise_number": 36, "exercise_content": "36. Write a Java program to check whether two strings are interliving of a given string. Assuming that the unique characters in both strings.Sample Output:The given string is: PMQNO\r\nThe interleaving strings are MNO and PQ\r\nThe given string is interleaving: true\r\n\r\nThe given string is: PNQMO\r\nThe interleaving strings are MNO and PQ\r\nThe given string is interleaving: false", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n public static void main(String args[]) {\r\n  String str1 = \"MNO\";\r\n  String str2 = \"PQ\";\r\n  String str3 = \"PMQNO\";\r\n  System.out.println(\"The given string is: \" + str3);\r\n  System.out.println(\"The interleaving strings are \" + str1 + \" and \" + str2);\r\n  System.out.println(\"The given string is interleaving: \" + checkInterleaved(str1, str2, str3));\r\n }\r\n private static boolean checkInterleaved(String str1, String str2, String CheckInString) {\r\n  int i = 0, j = 0, k = 0;\r\n  if (str1.length() + str2.length() != CheckInString.length()) {\r\n   return false;\r\n  }\r\n  while (k < CheckInString.length()) {\r\n   if (i < str1.length() && str1.charAt(i) == CheckInString.charAt(k)) {\r\n    i++;\r\n   } else if (j < str2.length() && str2.charAt(j) == CheckInString.charAt(k)) {\r\n    j++;\r\n   } else {\r\n    return false;\r\n   }\r\n   k++;\r\n  }\r\n  if (!(i == str1.length() && j == str2.length() && k == CheckInString.length())) {\r\n   return false;\r\n  }\r\n  return true;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-36.php"}, {"exercise_number": 37, "exercise_content": "37. Write a Java program to find length of the longest substring of a given string without repeating characters.Sample Output:Input String : pickoutthelongestsubstring\r\nThe longest substring : [u, b, s, t, r, i, n, g]\r\nThe longest Substring Length : 8", "exercise_solution_code": "import java.util.LinkedHashMap;\r\npublic class Main {\r\n static void longestSubstring(String inputString) {\r\n  char[] arr1 = inputString.toCharArray();\r\n  String long_str = null;\r\n  int str_length = 0;\r\n  LinkedHashMap < Character, Integer >\r\n  charPosMap = new LinkedHashMap < Character, Integer >();\r\n  for (int i = 0; i < arr1.length; i++) {\r\n   char ch = arr1[i];\r\n   if (!charPosMap.containsKey(ch)) {\r\n    charPosMap.put(ch, i);\r\n   } else {\r\n    i = charPosMap.get(ch);\r\n    charPosMap.clear();\r\n   }\r\n   if (charPosMap.size() > str_length) {\r\n    str_length = charPosMap.size();\r\n    long_str = charPosMap.keySet().toString();\r\n   }\r\n  }\r\n  System.out.println(\"Input String : \" + inputString);\r\n  System.out.println(\"The longest substring : \" + long_str);\r\n  System.out.println(\"The longest Substring Length : \" + str_length);\r\n }\r\n public static void main(String[] args) {\r\n  longestSubstring(\"pickoutthelongestsubstring\");\r\n  longestSubstring(\"ppppppppppppp\");\r\n  longestSubstring(\"Microsoft\");  \r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-37.php"}, {"exercise_number": 38, "exercise_content": "38. Write a Java program to print after removing duplicates from a given string.Sample Output:The given string is: w3resource\r\nAfter removing duplicates characters the new string is: w3resouc", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n public static void main(String[] args) {\r\n  String str1 = \"w3resource\";\r\n  System.out.println(\"The given string is: \" + str1);\r\n  System.out.println(\"After removing duplicates characters the new string is: \" + removeDuplicateChars(str1));\r\n }\r\n private static String removeDuplicateChars(String sourceStr) {\r\n  char[] arr1 = sourceStr.toCharArray();\r\n  String targetStr = \"\";\r\n  for (char value: arr1) {\r\n   if (targetStr.indexOf(value) == -1) {\r\n    targetStr += value;\r\n   }\r\n  }\r\n  return targetStr;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-38.php"}, {"exercise_number": 39, "exercise_content": "39. Write a Java program to find first non repeating character in a string.Sample Output:The given string is: gibblegabbler\r\nThe first non repeated character in String is: i", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n public static void main(String[] args) {\r\n  String str1 = \"gibblegabbler\";\r\n  System.out.println(\"The given string is: \" + str1);\r\n  for (int i = 0; i < str1.length(); i++) {\r\n   boolean unique = true;\r\n   for (int j = 0; j < str1.length(); j++) {\r\n    if (i != j && str1.charAt(i) == str1.charAt(j)) {\r\n     unique = false;\r\n     break;\r\n    }\r\n   }\r\n   if (unique) {\r\n    System.out.println(\"The first non repeated character in String is: \" + str1.charAt(i));\r\n    break;\r\n   }\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-39.php"}, {"exercise_number": 40, "exercise_content": "40. Write a Java program to divide a string in n equal parts.Sample Output:The given string is: abcdefghijklmnopqrstuvwxy\r\nThe string divided into 5 parts and they are: \r\n\r\nabcde\r\nfghij\r\nklmno\r\npqrst\r\nuvwxy", "exercise_solution_code": "import java.util.*;\r\nclass Main {\r\n static void splitString(String str1, int n) {\r\n  int str_size = str1.length();\r\n  int part_size;\r\n  if (str_size % n != 0) {\r\n   System.out.println(\"The size of the given string is not divisible by \" + n);\r\n   return;\r\n  } else {\r\n   System.out.println(\"The given string is: \" + str1);\r\n   System.out.println(\"The string divided into \" + n + \" parts and they are: \");\r\n   part_size = str_size / n;\r\n   for (int i = 0; i < str_size; i++) {\r\n    if (i % part_size == 0) System.out.println();\r\n    System.out.print(str1.charAt(i));\r\n   }\r\n  }\r\n }\r\n public static void main(String[] args) {\r\n  String str1 = \"abcdefghijklmnopqrstuvwxy\";\r\n  int split_number = 5;\r\n  splitString(str1, split_number);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-40.php"}, {"exercise_number": 41, "exercise_content": "41. Write a Java program to remove duplicate characters from a given string presents in another given string.Sample Output:The given string is: the quick brown fox\r\nThe given mask string is: queen\r\n\r\nThe new string is: \r\nth ick brow fox", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n public static void main(String[] args) {\r\n  String str1 = \"the quick brown fox\";\r\n  String str2 = \"queen\";\r\n  System.out.println(\"The given string is: \" + str1);\r\n  System.out.println(\"The given mask string is: \" + str2);\r\n  char arr[] = new char[str1.length()];\r\n  char[] mask = new char[256];\r\n  for (int i = 0; i < str2.length(); i++)\r\n   mask[str2.charAt(i)]++;\r\n  System.out.println(\"\\nThe new string is: \");\r\n  for (int i = 0; i < str1.length(); i++) {\r\n   if (mask[str1.charAt(i)] == 0)\r\n    System.out.print(str1.charAt(i));\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-41.php"}, {"exercise_number": 42, "exercise_content": "42. Write a Java program to print list items containing all characters of a given word.Sample Output:The given strings are: rabbit   bribe   dog   \r\nThe given word is: bib \r\n\r\nThe strings containing all the letters of the given word are: \r\nrabbit\r\nbribe", "exercise_solution_code": "import java.util.*;\r\nclass Main {\r\n static void checkExistance(String str1, String str_to_search) {\r\n  int chk = 0;\r\n  char chhr = ' ';\r\n  int[] a = new int[Character.MAX_VALUE + 1];\r\n\r\n  for (int i = 0; i < str1.length(); i++) {\r\n   chhr = str1.charAt(i);\r\n   ++a[chhr];\r\n  }\r\n  for (int i = 0; i < str_to_search.length(); i++) {\r\n   chhr = str_to_search.charAt(i);\r\n   if (a[chhr] >= 1)\r\n    chk = 1;\r\n  }\r\n  if (chk == 1)\r\n   System.out.println(str1);\r\n }\r\n\r\n public static void main(String[] args) {\r\n  List < String > list = new ArrayList < String > ();\r\n  list.add(\"rabbit\");\r\n  list.add(\"bribe\");\r\n  list.add(\"dog\");\r\n  System.out.print(\"The given strings are: \");\r\n  for (int i = 0; i < list.size(); i++) {\r\n   System.out.print(list.get(i) + \"   \");\r\n  }\r\n  System.out.println(\"\\nThe given word is: bib \");\r\n  System.out.println(\"\\nThe strings containing all the letters of the given word are: \");\r\n  for (int j = 0; j < list.size(); j++) {\r\n   checkExistance(list.get(j), \"bib\");\r\n  }\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-42.php"}, {"exercise_number": 43, "exercise_content": "43. Write a Java program to find the maximum occurring character in a string.Sample Output:The given string is: test string\r\nMax occurring character in the given string is: t", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n static final int N = 256;\r\n static char MaxOccuringChar(String str1) {\r\n  int ctr[] = new int[N];\r\n  int l = str1.length();\r\n  for (int i = 0; i < l; i++)\r\n   ctr[str1.charAt(i)]++;\r\n  int max = -1;\r\n  char result = ' ';\r\n\r\n  for (int i = 0; i < l; i++) {\r\n   if (max < ctr[str1.charAt(i)]) {\r\n    max = ctr[str1.charAt(i)];\r\n    result = str1.charAt(i);\r\n   }\r\n  }\r\n\r\n  return result;\r\n }\r\n public static void main(String[] args) {\r\n  String str1 = \"test string\";\r\n  System.out.println(\"The given string is: \" + str1);\r\n  System.out.println(\"Max occurring character in the given string is: \" + MaxOccuringChar(str1));\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-43.php"}, {"exercise_number": 44, "exercise_content": "44. Write a Java program to reverse a string using recursion.Sample Output:The given string is: The quick brown fox jumps\r\nThe string in reverse order is:\r\nspmuj xof nworb kciuq ehT", "exercise_solution_code": "import java.util.*;\r\nclass Main {\r\n void reverseString(String str1) {\r\n  if ((str1 == null) || (str1.length() <= 1))\r\n   System.out.println(str1);\r\n  else {\r\n   System.out.print(str1.charAt(str1.length() - 1));\r\n   reverseString(str1.substring(0, str1.length() - 1));\r\n  }\r\n }\r\n public static void main(String[] args) {\r\n  String str1 = \"The quick brown fox jumps\";\r\n  System.out.println(\"The given string is: \" + str1);\r\n  System.out.println(\"The string in reverse order is:\");\r\n  Main obj = new Main();\r\n  obj.reverseString(str1);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-44.php"}, {"exercise_number": 45, "exercise_content": "45. Write a Java program to reverse words in a given string.Sample Output:The given string is: Reverse words in a given string\r\nThe new string after reversed the words: string given a in words Reverse", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n public static String WordsInReverse(String str1) {\r\n  StringBuilder sb = new StringBuilder(str1);\r\n  String StrRev = sb.reverse().toString();\r\n\r\n  String[] words = StrRev.split(\" \");\r\n  StringBuilder reverse = new StringBuilder();\r\n  for (String tmp: words) {\r\n   sb = new StringBuilder(tmp);\r\n   reverse.append(sb.reverse() + \" \");\r\n  }\r\n  reverse.deleteCharAt(reverse.length() - 1);\r\n  return reverse.toString();\r\n }\r\n\r\n public static void main(String[] args) {\r\n  String str1 = \"Reverse words in a given string\";\r\n  System.out.println(\"The given string is: \" + str1);\r\n  System.out.println(\"The new string after reversed the words: \" + WordsInReverse(str1));\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-45.php"}, {"exercise_number": 46, "exercise_content": "46. Write a Java program to reverse every word in a string using methods.Sample Output:The given string is: This is a test string\r\nThe string reversed word by word is: \r\nsihT si a tset gnirts", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n public void reverseEachWordInString(String str1) {\r\n  String[] each_words = str1.split(\" \");\r\n  String revString = \"\";\r\n  for (int i = 0; i < each_words.length; i++) {\r\n   String word = each_words[i];\r\n   String reverseWord = \"\";\r\n   for (int j = word.length() - 1; j >= 0; j--) {\r\n    reverseWord = reverseWord + word.charAt(j);\r\n   }\r\n   revString = revString + reverseWord + \" \";\r\n  }\r\n  System.out.println(revString);\r\n }\r\n public static void main(String[] args) {\r\n  Main obj = new Main();\r\n  String StrGiven = \"This is a test string\";\r\n  System.out.println(\"The given string is: \" + StrGiven);\r\n  System.out.println(\"The string reversed word by word is: \");\r\n  obj.reverseEachWordInString(StrGiven);\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-46.php"}, {"exercise_number": 47, "exercise_content": "47. Write a Java program to rearrange a string so that all same characters become d distance away.Sample Output:The given string is: accessories\r\nThe string after arrange newly is: \r\nsecrsecisao", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n\r\n public static int MX = 26;\r\n static class freqOfChar {\r\n  char c;\r\n  int f;\r\n  public freqOfChar(char c, int f) {\r\n   this.c = c;\r\n   this.f = f;\r\n  }\r\n }\r\n\r\n public static void main(String[] args) {\r\n  String strr = \"accessories\";\r\n  System.out.println(\"The given string is: \" + strr);\r\n  System.out.println(\"The string after arrange newly is: \");\r\n  String strg = charRearrange(strr, 4);\r\n  if (strg != null)\r\n   System.out.println(strg);\r\n }\r\n\r\n public static String charRearrange(String strg, int k) {\r\n  if (strg.length() <= 1) return strg;\r\n\r\n  freqOfChar[] chr_fre = new freqOfChar[MX];\r\n  int ctr = 0;\r\n\r\n  for (int i = 0; i < MX; i++) {\r\n   chr_fre[i] = new freqOfChar((char)('a' + i), 0);\r\n  }\r\n\r\n  for (int i = 0; i < strg.length(); i++) {\r\n   char ch = strg.charAt(i);\r\n   chr_fre[ch - 'a'].f++;\r\n   if (chr_fre[ch - 'a'].f == 1) ctr++;\r\n  }\r\n\r\n  bldOfHeap(chr_fre, MX);\r\n\r\n  char[] str1 = new char[strg.length()];\r\n  boolean[] occu = new boolean[strg.length()];\r\n  for (int i = 0; i < ctr; i++) {\r\n   freqOfChar chfreq = extractMax(chr_fre, MX - i);\r\n   int ptr = i;\r\n   while (occu[ptr]) ptr++;\r\n\r\n   for (int j = 0; j < chfreq.f; j++) {\r\n    if (ptr >= str1.length)\r\n     return null;\r\n    str1[ptr] = chfreq.c;\r\n    occu[ptr] = true;\r\n    ptr += k;\r\n   }\r\n  }\r\n  return new String(str1);\r\n }\r\n\r\n private static void bldOfHeap(freqOfChar[] chr_fre, int size) {\r\n  int i = (size - 1) / 2;\r\n  while (i >= 0) {\r\n   maxHeapify(chr_fre, i, size);\r\n   i--;\r\n  }\r\n }\r\n\r\n private static void swap(freqOfChar cf1, freqOfChar cf2) {\r\n  char c = cf1.c;\r\n  int f = cf1.f;\r\n  cf1.c = cf2.c;\r\n  cf1.f = cf2.f;\r\n  cf2.c = c;\r\n  cf2.f = f;\r\n }\r\n\r\n private static void maxHeapify(freqOfChar[] chr_fre, int node, int size) {\r\n  int l = node * 2 + 1;\r\n  int r = node * 2 + 2;\r\n  int largest = node;\r\n  if (l < size && chr_fre[l].f > chr_fre[node].f) {\r\n   largest = l;\r\n  }\r\n  if (r < size && chr_fre[r].f > chr_fre[largest].f) {\r\n   largest = r;\r\n  }\r\n  if (largest != node) {\r\n   swap(chr_fre[node], chr_fre[largest]);\r\n   maxHeapify(chr_fre, largest, size);\r\n  }\r\n }\r\n private static freqOfChar extractMax(freqOfChar[] chr_fre, int size) {\r\n  freqOfChar max = chr_fre[0];\r\n  chr_fre[0] = chr_fre[size - 1];\r\n  chr_fre[size - 1] = null;\r\n  maxHeapify(chr_fre, 0, size - 1);\r\n  return max;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-47.php"}, {"exercise_number": 48, "exercise_content": "48. Write a Java program to remove \"b\" and \"ac\" from a given string.Sample Output:The given string is: abrambabasc\r\nAfter removing the new string is: aramaasc", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n public static void main(String[] args) {\r\n  String strg = \"abrambabasc\";\r\n  System.out.println(\"The given string is: \" + strg);\r\n  System.out.print(\"After removing the new string is: \");\r\n  removeSetofCharacters(strg, \"ac\", \"b\");\r\n }\r\n public static void removeSetofCharacters(String str, String ptn1, String ptn2) {\r\n  int n = str.length(), i;\r\n  int ptr = 0;\r\n  char[] arr1 = str.toCharArray();\r\n  for (i = 0; i < n; ++i) {\r\n   if (arr1[i] == 'b') {\r\n    continue;\r\n   } else if (i + 1 < n && arr1[i] == 'a' && arr1[i + 1] == 'c') {\r\n    ++i;\r\n   } else {\r\n    arr1[ptr++] = arr1[i]; // Copy char to head.\r\n   }\r\n  }\r\n  char[] ret = Arrays.copyOfRange(arr1, 0, ptr);\r\n  System.out.println(new String(ret));\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-48.php"}, {"exercise_number": 49, "exercise_content": "49. Write a Java program to find first non-repeating character from a stream of characters.Sample Output:String: godisgood\r\nReading: g\r\nThe first non-repeating character so far is:  g\r\nReading: o\r\nThe first non-repeating character so far is:  g\r\nReading: d\r\nThe first non-repeating character so far is:  g\r\nReading: i\r\nThe first non-repeating character so far is:  g\r\nReading: s\r\nThe first non-repeating character so far is:  g\r\nReading: g\r\nThe first non-repeating character so far is:  o\r\nReading: o\r\nThe first non-repeating character so far is:  d\r\nReading: o\r\nThe first non-repeating character so far is:  d\r\nReading: d\r\nThe first non-repeating character so far is:  i", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class Main {\r\n\r\npublic static void main(String[] args) \r\n{  \r\n  \r\nint MXCHAR = 256;\r\n \r\n  List < Character > inDLL = new ArrayList < Character > ();\r\n  boolean[] repeatyn = new boolean[MXCHAR];\r\n  String chrstream = \"godisgood\";\r\n  System.out.println(\"String: \" + chrstream);\r\n  for (int i = 0; i < chrstream.length(); i++) {\r\n   char x = chrstream.charAt(i);\r\n   System.out.println(\"Reading: \" + x);\r\n   if (!repeatyn[x]) {\r\n    if (!(inDLL.contains(x))) {\r\n     inDLL.add(x);\r\n    } else {\r\n     inDLL.remove((Character) x);\r\n     repeatyn[x] = true;\r\n    }\r\n   }\r\n   if (inDLL.size() != 0) {\r\n    System.out.print(\"The first non-repeating character so far is:  \");\r\n    System.out.println(inDLL.get(0));\r\n   }\r\n  }\r\n }\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-49.php"}, {"exercise_number": 50, "exercise_content": "50. Write a Java program to find lexicographic rank of a given string.Sample Output:The Given String is: BDCA\r\nThe Lexicographic rank of the given string is: 12N.B.: Total possible permutations of BDCA are(lexicographic order) :\nABCD ABDC ACBD ACDB ADBC ADCB BACD BADC BCAD BCDA BDAC BDCA\n1\u2003\u2003\u20032\u2003\u2003\u20033\u2003\u2003 4\u2003\u2003 5\u2003\u2003 6\u2003\u2003 7\u2003\u2003\u20038\u2003\u2003 9\u2003\u2003 10\u2003\u2003 11\u2003\u2003 12 \nThe BDCA appear in 12 position of permutation (lexicographic order).", "exercise_solution_code": "import java.util.*;\r\nclass Main {\r\n public static int makefactorial(int n) {\r\n  return (n <= 2) ? n : n * makefactorial(n - 1);\r\n }\r\n public static int calcuLexicoRank(String str, int n) {\r\n  int ctrOfRank = 1;\r\n  for (int i = 0; i < n; i++) {\r\n   int ctr = 0;\r\n   for (int j = i + 1; j <= n; j++) {\r\n    if (str.charAt(i) > str.charAt(j))\r\n     ctr++;\r\n   }\r\n   ctrOfRank += ctr * makefactorial(n - i);\r\n  }\r\n  return ctrOfRank;\r\n }\r\n public static void main(String[] args) {\r\n  String str = \"BDCA\";\r\n  System.out.println(\"The Given String is: \" + str);\r\n  int n = str.length();\r\n  System.out.print(\"The Lexicographic rank of the given string is: \" + calcuLexicoRank(str, n - 1));\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-50.php"}, {"exercise_number": 51, "exercise_content": "51. Write a Java program to count and print all the duplicates in the input string.Sample Output:The given string is: w3resource\r\nThe duplicate characters and counts are: \r\ne  appears  2  times\r\nr  appears  2  times", "exercise_solution_code": "import java.util.*; \r\npublic class Main \r\n{\r\n    static final int MAX_CHARS = 256;\r\n    static void CountCharacters(String str1, int[] ctr)\r\n    {\r\n       for (int i = 0; i < str1.length();  i++)\r\n          ctr[str1.charAt(i)]++;\r\n    }\r\n    static void showDuplicates(String str1)\r\n    {\r\n      int ctr[] = new int[MAX_CHARS];\r\n      CountCharacters(str1, ctr);\r\n      for (int i = 0; i < MAX_CHARS; i++)\r\n        if(ctr[i] > 1)\r\n            System.out.printf(\"%c  appears  %d  times\\n\", i,  ctr[i]);\r\n    }\r\n    public static void main(String[] args)\r\n    {\r\n        String str1 = \"w3resource\";\r\n\t\tSystem.out.println(\"The given string is: \"+str1);\r\n\t\tSystem.out.println(\"The duplicate characters and counts are: \");\r\n        showDuplicates(str1);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-51.php"}, {"exercise_number": 52, "exercise_content": "52. Write a Java program to check if two given strings are rotations of each other.Sample Output:The given strings are: ABACD  and  CDABA\r\n\r\nThe concatination of 1st string twice is: ABACDABACD\r\nThe 2nd string CDABA  exists in the new string.\r\n\r\nStrings are rotations of each other", "exercise_solution_code": "import java.util.*; \r\nclass Main\r\n{\r\n    static boolean checkForRotation (String str1, String str2)\r\n    {\r\n        return (str1.length() == str2.length()) && ((str1 + str1).indexOf(str2) != -1);\r\n    }\r\n    public static void main (String[] args)\r\n    {\r\n        String str1 = \"ABACD\";\r\n        String str2 = \"CDABA\";\r\n\t\t    System.out.println(\"The given strings are: \"+str1+\"  and  \"+str2);\r\n\t\t    System.out.println(\"\\nThe concatination of 1st string twice is: \"+str1+str1);\r\n\r\n        if (checkForRotation(str1, str2))\r\n        {\r\n\t\t        System.out.println(\"The 2nd string \"+str2+\"  exists in the new string.\");\t\r\n            System.out.println(\"\\nStrings are rotations of each other\");\r\n        }\r\n        else\r\n        {\r\n          \tSystem.out.println(\"The 2nd string \"+str2+\"  not exists in the new string.\");\t\r\n            System.out.printf(\"\\nStrings are not rotations of each other\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-52.php"}, {"exercise_number": 53, "exercise_content": "53. Write a Java program to match two strings where one string contains wildcard characters.Sample Output:The given string is: abcdhgh\r\nThe given pattern string is: abc*d?*\r\nThe given pattern is matching.", "exercise_solution_code": "import java.util.*;\r\nclass Main\r\n{    \r\n    public static boolean chkMatching(char[] str1, char[] patstr, int n, int m, \r\n                                    boolean[][] lookup)\r\n    {\r\n        if (m < 0 && n < 0) \r\n\t\t{\r\n            return true;\r\n        }\r\n        else if (m < 0) \r\n\t\t{\r\n            return false;\r\n        }\r\n        else if (n < 0)\r\n        {\r\n            for (int i = 0; i <= m; i++) \r\n\t\t\t{\r\n                if (patstr[i] != '*') \r\n\t\t\t\t{\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        if (!lookup[m][n])\r\n        {\r\n            if (patstr[m] == '*')\r\n            {\r\n                lookup[m][n] = chkMatching(str1, patstr, n - 1, m, lookup) ||\r\n                            chkMatching(str1, patstr, n, m - 1, lookup);\r\n            }\r\n            else \r\n\t\t\t{\r\n                if (patstr[m] != '?' && patstr[m] != str1[n]) \r\n\t\t\t\t{\r\n                    lookup[m][n] = false;\r\n                }\r\n                else \r\n\t\t\t\t{\r\n                    lookup[m][n] = chkMatching(str1, patstr, n - 1, m - 1, lookup);\r\n                }\r\n            }\r\n        }\r\n        return lookup[m][n];\r\n    }\r\n    public static void main(String[] args)\r\n    {\r\n      String st1=\"abcdhgh\";\r\n      String st2=\"abc*d?*\";\r\n      System.out.println(\"The given string is: \"+st1);\t\r\n      System.out.println(\"The given pattern string is: \"+st2);\t\r\n        char[] str1 = st1.toCharArray();\r\n        char[] patstr = st2.toCharArray();\t\t\r\n\t\t\r\n        boolean[][] lookup = new boolean[str1.length + 1][patstr.length + 1];\r\n        if (chkMatching(str1, patstr, str1.length - 1, patstr.length - 1, lookup)) \r\n\t\t{\r\n            System.out.println(\"The given pattern is matching.\");\r\n        } \r\n\t\telse \r\n\t\t{\r\n            System.out.println(\"The given pattern is not matching.\");\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-53.php"}, {"exercise_number": 54, "exercise_content": "54. Write a Java program to find the smallest window in a string containing all characters of another string.Sample Output:The given string is: welcome to w3resource\r\nCharacters to find in the main sring are: tower\r\nThe smallest window which contains the finding characters is : to w3re", "exercise_solution_code": "import java.util.*;\r\nclass Main\r\n{\r\n    public static String pickSubstring(String samp_str ,String pat_str)\r\n\t{\r\n        int ln1  = samp_str.length();\r\n        int ln2  = pat_str.length();\r\n        if(ln1 < ln2)\r\n\t\t{ \r\n            System.out.println(\"No such window can exist\");\r\n            return \"\";\r\n        }\r\n        int gvn_strg [] = new int[256];\r\n        int pat_stgr [] = new int[256];\r\n        for(int i=0;i<ln2;i++)\r\n            pat_stgr[pat_str.charAt(i)]++;\r\n        int ctr = 0,start = 0,start_index = -1,min_length = Integer.MAX_VALUE;\r\n        for(int j=0;j<ln1;j++)\r\n\t\t{\r\n            gvn_strg[samp_str.charAt(j)]++;\r\n            if(pat_stgr[samp_str.charAt(j)] != 0 && gvn_strg[samp_str.charAt(j)] <= pat_stgr[samp_str.charAt(j)])\r\n                ctr++;\r\n            if(ctr == ln2)\r\n\t\t\t{\r\n                while(gvn_strg[samp_str.charAt(start)] > pat_stgr[samp_str.charAt(start)] || pat_stgr[samp_str.charAt(start)] == 0)\r\n\t\t\t\t{\r\n                    if(gvn_strg[samp_str.charAt(start)] > pat_stgr[samp_str.charAt(start)] || pat_stgr[samp_str.charAt(start)] == 0)\r\n                        gvn_strg[samp_str.charAt(start)]--;\r\n                    start++;\r\n                }\r\n                int length_window = j - start + 1;\r\n                if(min_length > length_window)\r\n\t\t\t\t{\r\n                    min_length = length_window;\r\n                    start_index = start;\r\n                }\r\n            }\r\n        }\r\n        if(start_index == -1)\r\n\t\t{\r\n            System.out.println(\"No such window exists\");\r\n            return \"\";\r\n        }\r\n        return samp_str.substring(start_index,start_index + min_length);\r\n    }\r\n    public static void main(String args[])\r\n\t{\r\n        String str = \"welcome to w3resource\";\r\n        String pat = \"tower\";\r\n        System.out.println(\"The given string is: \"+str);\r\n        System.out.println(\"Characters to find in the main string are: \"+pat);\r\n        \r\n        System.out.print(\"The smallest window which contains the finding characters is : \" + pickSubstring(str, pat));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-54.php"}, {"exercise_number": 55, "exercise_content": "55. Write a Java program to remove all adjacent duplicates recursively from a given string.Sample Output:The given string is: aabaarbarccrabmq\r\nThe new string after removing all adjacent duplicates is:\r\nbrmq", "exercise_solution_code": "import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\nclass Main\r\n {\r\n     public static void check(String str)\r\n     {\r\n         if(str.length()<=1)\r\n         {\r\n             System.out.println(str);\r\n             return;\r\n         }\r\n         String n=new String();\r\n         int count=0;\r\n         for(int i=0;i<str.length();i++)\r\n         {\r\n             while(i<str.length()-1 && str.charAt(i)==str.charAt(i+1))\r\n             {\r\n                 if(i<str.length()-2 &&str.charAt(i)!=str.charAt(i+2))\r\n                 i+=2;\r\n                 else\r\n                 i++;\r\n                 count++;\r\n             }\r\n             if(i!=str.length()-1)\r\n             n=n+str.charAt(i);\r\n             else\r\n             {if(i==str.length()-1 && str.charAt(i)!=str.charAt(i-1))\r\n                 n=n+str.charAt(i);\r\n             }\r\n         }\r\n         if(count>0)\r\n         check(n);\r\n         else\r\n         System.out.println(n);\r\n     }\r\n\r\npublic static void main (String[] args)\r\n  {\r\n    String ab=\"aabaarbarccrabmq\";\r\n    System.out.println(\"The given string is: \"+ab);\r\n    System.out.println(\"The new string after removing all adjacent duplicates is:\");\r\n\r\n    check(ab);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-55.php"}, {"exercise_number": 56, "exercise_content": "56. Write a Java program to append two given strings such that, if the concatenation creates a double characters then omit one of the characters.Sample Output:The given strings are: food  and  door\r\nThe string after concatination are: foodoor", "exercise_solution_code": "import java.util.*;\r\npublic class Main \r\n{\r\npublic String conCat(String st1, String st2) \r\n{\r\n        if (st1.length() != 0 && st2.length() != 0\r\n                && st1.charAt(st1.length() - 1) == st2.charAt(0))\r\n            return st1 + st2.substring(1);\r\n        return st1 + st2;\r\n}\r\n\r\n    public static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"food\";\r\n      String str2 = \"door\";\r\n      System.out.println(\"The given strings are: \"+str1+\"  and  \"+str2);\r\n      System.out.println(\"The string after concatination are: \"+m.conCat(str1,str2));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-56.php"}, {"exercise_number": 57, "exercise_content": "57. Write a Java program to create a new string from a given string swapping the last two characters of the given string. The length of the given string must be two or more.Sample Output:The given strings is: string\r\nThe string after swap last two characters are: strign", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String lastTwo(String str)\r\n{\r\nif (str.length() < 2) return str;\r\nreturn str.substring(0, str.length()-2)+ str.charAt(str.length()-1) + str.charAt(str.length()-2);\r\n}\r\n    public static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"string\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The string after swap last two characters are: \"+m.lastTwo(str1));\r\n    }\r\n}\t\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-57.php"}, {"exercise_number": 58, "exercise_content": "58. Write a Java program to read a string and return true if it ends with a specified string of length 2.Sample Output:The given strings is: string\r\nThe string containing ng at last: true\r\n\r\nThe given strings is: strign\r\nThe string containing ng at last: false", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean endsNg(String str) \r\n{\r\n  int len = str.length();\r\n  String ng = \"ng\";\r\n  if (len < 2)\r\n    return false;\r\n  else if (ng.equals(str.substring(len-2,len)))\r\n    return true;\r\n  else\r\n    return false;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"string\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The string containing ng at last: \"+m.endsNg(str1));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-58.php"}, {"exercise_number": 59, "exercise_content": "59. Write a Java program to read a string,if the string begins with \"red\" or \"black\" return that color string, otherwise return the empty string.Sample Output:The given strings is: blacksea\r\nThe string begins with the color: black", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String pickColor(String str) \r\n{\r\n  if (str.startsWith(\"red\"))\r\n    return \"red\";\r\n  if (str.startsWith(\"black\"))\r\n    return \"black\";\r\n  else\r\n    return \"\";\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"blacksea\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The string begins with the color: \"+m.pickColor(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-59.php"}, {"exercise_number": 60, "exercise_content": "60. Write a Java program to read two strings append them together and return the result. If the strings are different lengths, remove characters from the beginning of longer string and make them equal length.Sample Output:The given strings is: Welcome and home\r\nThe new string is: comehome", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String minCat(String st1, String st2) \r\n{\r\n  if (st1.length() == st2.length())\r\n    return st1+st2;\r\n  if (st1.length() > st2.length())\r\n  {\r\n    int diff = st1.length() - st2.length();\r\n    return st1.substring(diff, st1.length()) + st2;\r\n  } else \r\n  {\r\n    int diff = st2.length() - st1.length();\r\n    return st1 + st2.substring(diff, st2.length());\r\n  }\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"Welcome\";\r\n\t  String str2 =  \"home\";\r\n\t  \r\n      System.out.println(\"The given strings is: \"+str1+\" and \"+str2);\r\n      System.out.println(\"The new string is: \"+m.minCat(str1,str2));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-60.php"}, {"exercise_number": 61, "exercise_content": "61. Write a Java program to create a new string taking specified number of characters from first and last position of a given string.Sample Output:The given strings is: Welcome\r\nThe given numbers is: 3\r\nThe new string is: Welome", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String nTwice(String str, int n) \r\n{\r\n  return str.substring(0,n) + str.substring(str.length()- n, str.length());\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"Welcome\";\r\n\t  int n1 =  3;\r\n\t  \r\n      System.out.println(\"The given strings is: \"+str1);\r\n\t  System.out.println(\"The given numbers is: \"+n1);\r\n      System.out.println(\"The new string is: \"+m.nTwice(str1,n1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-61.php"}, {"exercise_number": 62, "exercise_content": "62. Write a Java program to read a string and return true if \"good\" appears starting at index 0 or 1 in the given string.Sample Output:The given strings is: goodboy\r\nThe 'good' appear in the string is: true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean hasGood(String str) \r\n{\r\n  if(str.length() < 4)\r\n    return false;\r\n  else if ((str.substring(0,4)).equals(\"good\"))\r\n    return true;\r\n  else if (str.length() > 4)\r\n  {\r\n    if ((str.substring(1,5)).equals(\"good\"))\r\n      return true;\r\n  }\r\n    return false;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"goodboy\";\r\n\t  \r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The 'good' appear in the string is: \"+m.hasGood(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-62.php"}, {"exercise_number": 63, "exercise_content": "63. Write a Java program to check whether the first two characters present at the end of a given string.Sample Output:The given strings is: educated\r\nThe first two characters appear in the last is: true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean firstInLast(String str) \r\n{\r\n  if (str.length() < 2)\r\n    return false;\r\n  else if (str.substring(0,2).equals(str.substring(str.length()-2, str.length())))\r\n    return true;\r\n  else\r\n    return false;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"educated\";\r\n\t  \r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The first two characters appear in the last is: \"+m.firstInLast(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-63.php"}, {"exercise_number": 64, "exercise_content": "64. Write a Java program to read a string and if a substring of length two appears at both its beginning and end,\nreturn a string without the substring at the beginning otherwise, return the original string unchanged.Sample Output:The given strings is: educated\r\nThe new string is: ucated", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String withoutMacth(String str) \r\n{\r\n  int len = str.length();\r\n  if (len == 2)\r\n    return \"\";\r\n  if (len < 2)\r\n    return str;\r\n  else \r\n  {\r\n    if (str.substring(0,2).equals(str.substring(len-2, len)))\r\n      return str.substring(2,len);\r\n      else return str;\r\n  }\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"educated\";\r\n\t  \r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.withoutMacth(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-64.php"}, {"exercise_number": 65, "exercise_content": "65. Write a Java program to read a given string and if the first or last characters are same return the string without those characters otherwise return the string unchanged.Sample Output:The given strings is: testcricket\r\nThe new string is: estcricke", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String excludeT(String stng)\r\n{\r\n  if (stng.length() == 0)\r\n    return stng;\r\n  if (stng.length() == 1)\r\n  {\r\n    if (stng.charAt(0) == 't')\r\n      return \"\";\r\n    else\r\n      return stng;\r\n  }\r\n  if (stng.charAt(0) == 't')\r\n    stng = stng.substring(1,stng.length());\r\n  if (stng.charAt(stng.length()-1) == 't')\r\n    stng = stng.substring(0,stng.length()-1);\r\n  return stng;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"testcricket\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.excludeT(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-65.php"}, {"exercise_number": 66, "exercise_content": "66. Write a Java program to read a string and return the string without the first two characters. Keep the first character if it is 'g' and keep the second character if it is 'h'.Sample Output:The given strings is: goat\r\nThe new string is: gat\r\n\r\nhe given strings is: photo\r\nThe new string is: hoto\r\n\r\nThe given strings is: ghost\r\nThe new string is: ghost", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String exceptFirstTwo(String stng) \r\n{   \r\n  int len = stng.length();\r\n  String temp = \"\";\r\n  for (int i = 0; i < len; i++) \r\n  {\r\n    if (i == 0 && stng.charAt(i) == 'g')\r\n      temp += 'g';\r\n    else if (i == 1 && stng.charAt(i) == 'h')\r\n      temp += 'h';\r\n    else if (i > 1)\r\n      temp += stng.charAt(i);\r\n  }\r\n    return temp;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"ghost\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.exceptFirstTwo(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-66.php"}, {"exercise_number": 67, "exercise_content": "67. Write a Java program to read a string and if one or both of the first two characters is equal to specified character return without those characters otherwise return the string unchanged.Sample Output:The given strings is: oocyte\r\nThe new string is: cyte\r\n\r\nThe given strings is: boat\r\nThe new string is: bat\r\n\r\nThe given strings is: own\r\nThe new string is: wn", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String exceptTwoO(String stng) \r\n{\r\n  String temp = \"\";\r\n  for (int i = 0; i < stng.length(); i++) \r\n  {\r\n    if (i == 0 && stng.charAt(i) != 'x')\r\n      temp += stng.charAt(i);\r\n    else if (i == 1 && stng.charAt(i) != 'x')\r\n      temp += stng.charAt(i);\r\n    else if (i > 1)\r\n      temp += stng.charAt(i);\r\n  }\r\n  return temp;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"xxcyte\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.exceptTwoO(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-67.php"}, {"exercise_number": 68, "exercise_content": "68. Write a Java program to read a string and returns after removing a specified character and its immediate left and right characters.Sample Output:The given strings is: test#string\r\nThe new string is: testring\r\n\r\nThe given strings is: test##string\r\nThe new string is: testring\r\n\r\nThe given strings is: test#the#string\r\nThe new string is: teshtring", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String excludeHash(String stng) \r\n{\r\n  int len = stng.length();\r\n  String resultString = \"\";\r\n  for (int i = 0; i < len; i++) \r\n  {\r\n    if (i == 0 && stng.charAt(i) != '#')\r\n      resultString += stng.charAt(i);\r\n    if (i > 0 && stng.charAt(i) != '#' && stng.charAt(i-1) != '#')\r\n      resultString += stng.charAt(i);\r\n    if (i > 0 && stng.charAt(i) == '#' && stng.charAt(i-1) != '#')\r\n      resultString = resultString.substring(0,resultString.length()-1);\r\n  }\r\n  return resultString;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"test#string\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.excludeHash(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-68.php"}, {"exercise_number": 69, "exercise_content": "69. Write a Java program to return the substring that is between the first and last appearance of the substring 'toast' in the given string,or return the empty string if substirng 'toast' does not exists.Sample Output:The given strings is: sweettoastbuttertoast\r\nThe new string is: butter", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String pickMiddleOfBread(String stng) \r\n{\r\n  int len = stng.length();\r\n  String tmpString = \"\";\r\n  String resultString = \"\";\r\n  int st = 0;\r\n  int en = 0;\r\n  boolean found = false;\r\n  if (len <= 10)\r\n    return \"\";\r\n  for (int i = 0; i < len - 4; i++) \r\n  {\r\n    tmpString = stng.substring(i, i+5);\r\n    if (tmpString.equals(\"toast\") && found == true)\r\n      en = i; \r\n    if (tmpString.equals(\"toast\") && found == false) \r\n\t{\r\n      st = i+5;\r\n      found = true;\r\n    }\r\n  }\r\n  resultString = stng.substring(st,en);\r\n  return resultString;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"sweettoastbuttertoast\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.pickMiddleOfBread(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-69.php"}, {"exercise_number": 70, "exercise_content": "70. Write a Java program to check whether a string is pq-balanced or not.A String is pq-balanced if for all the p's in the string atleast one 'q' must exists right of the p's.But 'q' before the 'p' makes the pq-balanced false.Sample Output:The given strings is: gfpmpnppqab\r\nThe string is pq-balanced? true\r\n\r\nThe given strings is: gfpmpnpqpab\r\nThe string is pq-balanced? false", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean pqBalanceString(String stng) \r\n{\r\n  Boolean p = false;\r\n  Boolean q = false;\r\n  int len = stng.length();\r\n  for (int i = 0; i < len; i++) \r\n  {\r\n    if (stng.charAt(i) == 'p' && q == true)\r\n\t{\r\n      p = true;\r\n      q = false;\r\n    } \r\n\telse if (stng.charAt(i) == 'p') \r\n\t{\r\n      p = true;\r\n    }\r\n    if (stng.charAt(i) == 'q' && p == true)\r\n      q = true;\r\n  }\r\n  if (p == false)\r\n    q = true;\r\n  return q;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"gfpmpnppqab\";\r\n      System.out.println(\"The given strings is: \"+str1);\r\n      System.out.println(\"The string is pq-balanced? \"+m.pqBalanceString(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-70.php"}, {"exercise_number": 71, "exercise_content": "71. Write a Java program to check two given strings whether any one of them appear at the end of the other string (ignore case sensitivity).Sample Output:The given strings are: xyz  and pqrxyz\r\nIs one string appears at the end of other? true\r\n\r\nThe given strings are: pqrxyz  and xyz\r\nIs one string appears at the end of other? true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean anyStringAtEnd(String stng1, String stng2) \r\n{\r\n  stng1 = stng1.toLowerCase();\r\n  int aLen = stng1.length();\r\n  stng2 = stng2.toLowerCase();\r\n  int bLen = stng2.length();\r\n  if (aLen < bLen) \r\n  {\r\n    String temp = stng2.substring(bLen - aLen, bLen);\r\n    if (temp.compareTo(stng1) == 0)\r\n      return true;\r\n    else\r\n      return false;\r\n  } else \r\n  {\r\n    String temp = stng1.substring(aLen - bLen, aLen);\r\n    if (temp.compareTo(stng2) == 0)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"pqrxyz\";\r\n\t  String str2= \"xyz\";\r\n      System.out.println(\"The given strings are: \"+str1+\"  and \"+str2);\r\n      System.out.println(\"Is one string appears at the end of other? \"+m.anyStringAtEnd(str1,str2));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-71.php"}, {"exercise_number": 72, "exercise_content": "72. Write a Java program to return true if a given string contain the string 'pop', but the middle 'o' also may other character.Sample Output:The given string is: dikchapop\r\nIs p?p appear in the given string? true\r\n\r\nThe given string is: dikp$pdik\r\nIs p?p appear in the given string? true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean popInTheString(String stng) \r\n{\r\n  int len = stng.length();\r\n  for (int i = 0; i < len - 2; i++) \r\n  {\r\n    if (stng.charAt(i) == 'p' && stng.charAt(i+2) == 'p')\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"dikchapop\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"Is p?p appear in the given string? \"+m.popInTheString(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-72.php"}, {"exercise_number": 73, "exercise_content": "73. Write a Java program to check whether a substring appears before a period(.) within a given string.Sample Output:The given strings is: testabc.test\r\nIs 'abc' appear before period? true\r\n\r\nThe given string is: test.abctest\r\nIs 'abc' appear before period? false", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic Boolean abcBeforePeriod(String stng) \r\n{\r\n  int len = stng.length();\r\n  String abc = \"abc\";\r\n  Boolean match = false;\r\n  if (len < 3)\r\n    return false;\r\n  for (int i = 0; i < len - 2; i ++) \r\n  {\r\n    String temp = stng.substring(i, i+3);\r\n    if (temp.compareTo(abc) == 0 && i == 0)\r\n      match = true;\r\n    else if(temp.compareTo(abc) == 0 && stng.charAt(i-1) != 46)\r\n      match = true;\r\n  } \r\n  return match;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"testabc.test\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"Is 'abc' appear before period? \"+m.abcBeforePeriod(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-73.php"}, {"exercise_number": 74, "exercise_content": "74. Write a Java program to check whether a prefix string creates using the first specific characters in a given string, appears somewhere else in the string.Sample Output:The given strings is: MrsJemsmrsam\r\nThe prefix string length is: 3\r\nIs 'Mrs' appear else where in the string? false\r\n\r\nThe given string is: MrsJemsMrsam\r\nThe prefix string length is: 3\r\nIs 'Mrs' appear else where in the string? true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean nChrStringSomewhere (String stng, int n_chr) \r\n{\r\n  int len = stng.length();\r\n  String pre_str = stng.substring(0,n_chr);\r\n  for (int i = n_chr; i < len; i++) \r\n  {\r\n    if(n_chr+i <= len) \r\n\t{\r\n      if (pre_str.equals(stng.substring(i,n_chr+i)))\r\n        return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"MrsJemsMrsam\";\r\n      int n=3;\r\n\t  String prechr=str1.substring(0,n);\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The prefix string length is: \"+n);\r\n      System.out.println(\"Is '\"+ prechr+\"' appear else where in the string? \"+m.nChrStringSomewhere(str1,n));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-74.php"}, {"exercise_number": 75, "exercise_content": "75. Write a Java program to check whether a given substring presents in the middle of another given string. Here middle means difference between the number of characters to the left and right of the given substring not more than 1.Sample Output:The given string is: xxxabcxxxxx\r\nIs abc appear in middle? false\r\n\r\nThe given string is: xxabcxxx\r\nIs abc appear in middle? true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean abcInMiddle(String stng) \r\n{\r\n  String abc = \"abc\";\r\n  int l = stng.length();\r\n  int mid_pos = l / 2;\r\n  if (l < 3)\r\n    return false;\r\n  if (l % 2 != 0) \r\n  {\r\n    if (abc.equals(stng.substring(mid_pos-1,mid_pos+2))) \r\n\t{\r\n      return true;\r\n    } else \r\n\t{\r\n        return false;\r\n      }\r\n  } \r\n  else if (abc.equals(stng.substring(mid_pos-1,mid_pos+2)) || abc.equals(stng.substring(mid_pos-2,mid_pos+1))) \r\n\t  {\r\n          return true;\r\n  } \r\n  else\r\n      return false; \r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"xxabcxxx\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"Is abc appear in middle? \"+m.abcInMiddle(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-75.php"}, {"exercise_number": 76, "exercise_content": "76. Write a Java program to count how many times the substring 'life' present at anywhere in a given string. Counting can also happen for the substring 'li?e', any character instead of 'f'.Sample Output:The given string is: liveonwildlife\r\nThe substring life or li?e appear number of times: 2", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic int substringCounting(String stng) \r\n{\r\n  int l = stng.length();\r\n  int ctr = 0;\r\n  String firsttwo = \"li\";\r\n  String lastone = \"e\";\r\n  if (l < 4)\r\n    return 0;\r\n  for (int i = 0; i < l - 3; i++) \r\n  {\r\n    if (firsttwo.compareTo(stng.substring(i,i+2)) == 0 && lastone.compareTo(stng.substring(i+3, i+4)) == 0)\r\n      ctr++;\r\n  }\r\n  return ctr;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"liveonwildlife\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The substring life or li?e appear number of times: \"+m.substringCounting(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-76.php"}, {"exercise_number": 77, "exercise_content": "77. Write a Java program to add a string with specific number of times separated by a substring.Sample Output:The given strings are: try  and  best\r\nNumber to times to be repeat: 3\r\nThe new string is: trybesttrybesttry", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String addBySeparator(String main_str, String sep_str, int ctr) \r\n{\r\n  String new_word = \"\";\r\n  for (int i = 0; i < ctr; i++) \r\n  {\r\n    if (i < ctr-1)\r\n      new_word += main_str + sep_str;\r\n    else\r\n      new_word += main_str;\r\n  }\r\n  return new_word;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"try\";\r\n      String str2 =  \"best\";\r\n\t  int ctr=3;\r\n\t  \r\n      System.out.println(\"The given strings are: \"+str1+\"  and  \"+str2);\r\n\t  System.out.println(\"Number to times to be repeat: \"+ctr);\r\n      System.out.println(\"The new string is: \"+m.addBySeparator(str1,str2,ctr));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-77.php"}, {"exercise_number": 78, "exercise_content": "78. Write a Java program to repeat a specific number of characters for specific number of times from the last part of a given string.Sample Output:The given string is: string\r\nThe new string after repetition: inginging", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String lastNchrRepeat(String stng, int no_repeat) \r\n{\r\n  int l = stng.length();\r\n  String new_word = \"\";\r\n  for (int i = 0; i < no_repeat; i++) \r\n  {\r\n    new_word += stng.substring(l - no_repeat, l);\r\n  }\r\n  return new_word;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"string\";\r\n      int no_char=3;\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The new string after repetition: \"+m.lastNchrRepeat(str1,no_char));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-78.php"}, {"exercise_number": 79, "exercise_content": "79. Write a Java program to create a new string from a given string after removing the 2nd character from the substring of length three starting with 'z' and ending with 'g' presents in the said string.Sample Output:The given string is: zzgkitandkatcaketoket\r\nThe new string is: zgkitandkatcaketoket", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String kitKatPattern(String stng) \r\n{\r\n  int len = stng.length();\r\n  String newformstring = \"\";\r\n  for (int i = 0; i < len; i++) \r\n  {\r\n    newformstring += stng.substring(i,i+1);\r\n    if (i > 0 && i < len-1) \r\n\t{\r\n      if (stng.charAt(i-1) == 'z' && stng.charAt(i+1) == 'g')\r\n        newformstring = newformstring.substring(0,newformstring.length()-1);\r\n    }\r\n  }\r\n  return newformstring;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"zzgkitandkatcaketoket\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.kitKatPattern(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-79.php"}, {"exercise_number": 80, "exercise_content": "80. Write a Java program to check whether the character immediately before and after a specified character is same in a given string.Sample Output:The given string is: moon#night\r\nThe before and after character are same: true\r\n\r\nThe given string is: bat##ball\r\nThe before and after character are same: false\r\n\r\nThe given string is: #moon#night\r\nThe before and after character are same: true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean leftAndRightSame(String stng) \r\n{\r\n  int l = stng.length();\r\n  boolean found = true;\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    String tmpString = stng.substring(i,i+1);\r\n    if (tmpString.equals(\"#\") && i > 0 && i < l-1) \r\n\t{\r\n      if (stng.charAt(i-1) == stng.charAt(i+1))\r\n        found = true;\r\n      else\r\n        found = false;\r\n    }\r\n  }\r\n  return found;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"moon#night\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The before and after character are same: \"+m.leftAndRightSame(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-80.php"}, {"exercise_number": 81, "exercise_content": "81. Write a Java program to check whether two strings of length 3 and 4 appear in same number of times in a given string.Sample Output:The given string is: redcapmanwithbluecar\r\nThe appearance of red and blue are same: true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean checkSameAppearance(String stng) \r\n{\r\n  int l = stng.length();\r\n  int red = 0;\r\n  int blue = 0;\r\n  for (int i = 0; i < l - 2; i++) \r\n  {\r\n    String tmp = stng.substring(i, i+3);\r\n    if (tmp.compareTo(\"red\") == 0)\r\n      red++; \r\n     }\r\n  for (int i = 0; i < l - 3; i++) \r\n  {\r\n    String tmp = stng.substring(i, i+4);\r\n    if (tmp.compareTo(\"blue\") == 0)\r\n      blue++; \r\n  }\r\n  \r\n  if (red == blue)\r\n    return true;\r\n  else\r\n    return false;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"redcapmanwithbluecar\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The appearance of red and blue are same: \"+m.checkSameAppearance(str1));\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-81.php"}, {"exercise_number": 82, "exercise_content": "82. Write a Java program to create a new string repeating every character twice of a given string.Sample Output:The given string is: welcome\r\nThe new string is: wweellccoommee", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String repeatAllTwice(String stng) \r\n{\r\n  int l = stng.length();\r\n  String newstring = \"\";\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    newstring += stng.substring(i,i+1) + stng.substring(i, i+1);\r\n  }\r\n  return newstring;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"welcome\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.repeatAllTwice(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-82.php"}, {"exercise_number": 83, "exercise_content": "83. Write a Java program to make a new string from two given string in such a way that, each character of two string will come respectively.Sample Output:The given strings  are: welcome  and  w3resource\r\nThe new string is: wwe3lrceosmoeurce", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String stringMixing(String stng1, String stng2) \r\n{\r\n  int len1 = stng1.length();\r\n  int len2 = stng2.length();\r\n  int max_len = Math.max(len1, len2);\r\n  String newstring = \"\";\r\n  for (int i = 0; i < max_len; i++) \r\n  {\r\n    if (i <= len1-1)\r\n      newstring += stng1.substring(i,i+1);\r\n    if (i <= len2-1)\r\n      newstring += stng2.substring(i,i+1);\r\n  }\r\n  return newstring;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"welcome\";\r\n      String str2 =  \"w3resource\";\t  \r\n      System.out.println(\"The given strings  are: \"+str1+\"  and  \"+str2);\r\n      System.out.println(\"The new string is: \"+m.stringMixing(str1,str2));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-83.php"}, {"exercise_number": 84, "exercise_content": "84. Write a Java program to make a new string made of p number of characters from the first of a given string and followed by p-1 number characters till the p is greater than zero.Sample Output:The given string is: welcome\r\nNumber of repetition characters and repetition: 4\r\nThe new string is: welcwelwew", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String beginningRepetition(String stng, int n) \r\n{\r\n  int l = stng.length();\r\n  String newstring = \"\";\r\n  for (int i = n; n > 0; n--)\r\n  {\r\n    newstring += stng.substring(0,n);\r\n  }\r\n  return newstring;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"welcome\";\r\n\t  int rep_no=4;\r\n      System.out.println(\"The given string is: \"+str1);\r\n\t  System.out.println(\"Number of repetition characters and repetition: \"+rep_no);\r\n      System.out.println(\"The new string is: \"+m.beginningRepetition(str1,rep_no));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-84.php"}, {"exercise_number": 85, "exercise_content": "85. Write a Java program to make a new string with each character of just before and after of a non-empty substring whichever it appears in a non-empty given string.Sample Output:The given string are: weablcoabmeab  and ab\r\nThe new string is: elome", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String mAndTstring(String m_stng, String t_stng) \r\n{\r\n  int m_st_len = m_stng.length();\r\n  int t_st_len = t_stng.length();\r\n  String fin = \"\";\r\n  for (int i = 0; i < m_st_len-t_st_len+1; i++) \r\n  {\r\n    String tmp = m_stng.substring(i,i+t_st_len);\r\n    if (i > 0 && tmp.equals(t_stng))\r\n      fin += m_stng.substring(i-1,i);\r\n    if (i < m_st_len-t_st_len && tmp.equals(t_stng))\r\n      fin += m_stng.substring(i+t_st_len,i+t_st_len+1);\r\n  }\r\n  return fin;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"weablcoabmeab\";\r\n      String str2 =  \"ab\";\t  \r\n      System.out.println(\"The given string are: \"+str1+\"  and \"+str2);\r\n      System.out.println(\"The new string is: \"+m.mAndTstring(str1,str2));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-85.php"}, {"exercise_number": 86, "exercise_content": "86. Write a Java program to count the number of triples (characters appearing three times in a row) in a given string.Sample Output:The given string is: welllcommmmeee\r\nThe number of triples in the string is: 4", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic int noOfTriples(String stng) \r\n{\r\n  int l = stng.length();\r\n  int ctr = 0;\r\n  for (int i = 0; i < l-2; i++)\r\n  {\r\n    char tmp = stng.charAt(i);\r\n    if (tmp == stng.charAt(i+1) && tmp == stng.charAt(i+2))\r\n      ctr++;\r\n  }\r\n  return ctr;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"welllcommmmeee\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The number of triples in the string is: \"+m.noOfTriples(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-86.php"}, {"exercise_number": 87, "exercise_content": "87. Write a Java program to check whether a specified character is happy or not. A character is happy when the same character appears to its left or right in a string.Sample Output:The given string is: azzlea\r\nIs z happy in the string: true\r\n\r\nThe given string is: azmzlea\r\nIs z happy in the string: falses", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean aCharacterIsHappy(String stng) \r\n{\r\n  int l = stng.length();\r\n  boolean char_happy = true;\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    if (stng.charAt(i) == 'z') \r\n\t{\r\n      if (i > 0 && stng.charAt(i-1) == 'z')\r\n        char_happy = true;\r\n      else if (i < l-1 && stng.charAt(i+1) == 'z')\r\n        char_happy = true;\r\n      else\r\n        char_happy = false;\r\n    }\r\n  }\r\n  return char_happy;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"azzlea\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"Is Z happy in the string: \"+m.aCharacterIsHappy(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-87.php"}, {"exercise_number": 88, "exercise_content": "88. Write a Java program to return a string where every appearance of the lowercase word 'is' has been replaced with 'is not'.Sample Output:The given string is: it is a string\r\nThe new string is: it is not a string", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String wordReplaceBy(String stng) \r\n{\r\n  String newstring = \"\";\r\n  int l = stng.length();\r\n  for(int i = 0; i < l; i++)\r\n  {\r\n    if(i-1 >= 0 && Character.isLetter(stng.charAt(i-1))|| i+2 < l && Character.isLetter(stng.charAt(i+2))) \r\n\t{\r\n      newstring += stng.charAt(i);\r\n    }\r\n    else if(i+1 < l && stng.substring(i, i+2).equals(\"is\")) \r\n\t{\r\n      newstring += \"is not\";\r\n      i++;\r\n    }\r\n    else newstring += stng.charAt(i);\r\n  }\r\n  return newstring;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"it is a string\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.wordReplaceBy(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-88.php"}, {"exercise_number": 89, "exercise_content": "89. Write a Java program to calculate the sum of the numbers appear in a given string.Sample Output:The given string is: it 15 is25 a 20string\r\nThe sum of numbers in the string is: 60", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic int sumOfTheNumbers(String stng) \r\n{\r\n  int l = stng.length();\r\n  int sum = 0;\r\n  String temp = \"\";\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    if (Character.isDigit(stng.charAt(i))) \r\n\t{\r\n      if (i < l-1 && Character.isDigit(stng.charAt(i+1))) \r\n\t  {\r\n        temp += stng.charAt(i);\r\n      }\r\n      else \r\n\t  {\r\n        temp += stng.charAt(i);\r\n        sum += Integer.parseInt(temp);\r\n        temp = \"\";\r\n      }\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"it 15 is25 a 20string\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The sum of numbers in the string is: \"+m.sumOfTheNumbers(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-89.php"}, {"exercise_number": 90, "exercise_content": "90. Write a Java program to check the number of appearances of the two substrings appear anywhere in the string.Sample Output:The given string is: Thisisthethesis\r\nAre the appearance of 'the' and 'is' equal? false", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic boolean isAndTheEquality(String stng) \r\n{\r\n  int l = stng.length();\r\n  int st_the = 0;\r\n  int st_is = 0;\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    if (i < l - 2) \r\n\t{\r\n      String tmp = stng.substring(i,i+3);\r\n      if (tmp.equals(\"the\"))\r\n        st_the++;\r\n    }\r\n    if (i < l - 1) \r\n\t{\r\n      String tmp2 = stng.substring(i,i+2);\r\n      if (tmp2.equals(\"is\"))\r\n        st_is++;\r\n    }\r\n  }\r\n  if (st_the == st_is)\r\n    return true;\r\n  else\r\n    return false;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"Thisisthethesis\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"Are the appearance of 'the' and 'is' equal? \"+m.isAndTheEquality(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-90.php"}, {"exercise_number": 91, "exercise_content": "91. Write a Java program to count the number of words ending in 'm' or 'n' (not case sensitive) in a given text.Sample Output:The given string is: mam is in the room\r\nThe number of words ends eith m or n is: 3", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic int endWithmOrn(String stng) \r\n{\r\n  int l = stng.length();\r\n  int ctr = 0;\r\n  stng = stng.toLowerCase();\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    if (stng.charAt(i) == 'm' || stng.charAt(i) == 'n') \r\n\t{\r\n      if (i < l-1 && !Character.isLetter(stng.charAt(i+1)))\r\n        ctr++;\r\n      else if (i == l-1)\r\n        ctr++;\r\n    }\r\n  }\r\n  return ctr;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"mam is in the room\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The number of words ends eith m or n is: \"+m.endWithmOrn(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-91.php"}, {"exercise_number": 92, "exercise_content": "92. Write a Java program to return a substring after removing the all instances of remove string as given from the given main string.Sample Output:The main string is: This is the test string\r\nThe removable string is: st\r\nThe new string is: This is the te ring", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String removeString(String m_string, String r_string) \r\n{\r\n  int m_st_len = m_string.length();\r\n  int r_st_len = r_string.length();\r\n  String m_lower  = m_string.toLowerCase();\r\n  String r_lower  = r_string.toLowerCase();\r\n  String f_string = \"\";\r\n  for (int i = 0; i < m_st_len; i++) \r\n  {\r\n    if (i <= m_st_len - r_st_len) \r\n\t{\r\n      String tmp = m_lower.substring(i,i+r_st_len);\r\n      if (!tmp.equals(r_lower))\r\n        f_string += m_string.substring(i,i+1);\r\n      else \r\n\t  {\r\n        i += r_st_len-1;\r\n      }\r\n    }\r\n    else \r\n\t{\r\n      String tmp2 = m_lower.substring(i,i+1);\r\n      if (!tmp2.equals(r_lower))\r\n        f_string += m_string.substring(i,i+1);\r\n    }\r\n  }\r\n  return f_string;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"This is the test string\";\r\n\t  String str2= \"st\";\r\n      System.out.println(\"The main string is: \"+str1);\r\n      System.out.println(\"The removable string is: \"+str2);\r\n      System.out.println(\"The new string is: \"+m.removeString(str1,str2));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-92.php"}, {"exercise_number": 93, "exercise_content": "93. Write a Java program to find the longest substring appears at both ends of a given string.Sample Output:The given string is: playersplay\r\nThe longest substring in the string is: play", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String appearInBothEnds(String stng) \r\n{\r\n  int l = stng.length();\r\n  String f_str = \"\";\r\n  String tmp = \"\";\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    tmp += stng.charAt(i);\r\n    int t_len = tmp.length();\r\n    if (i < l / 2 && tmp.equals(stng.substring(l-t_len,l)))\r\n      f_str = tmp;\r\n  }\r\n  return f_str;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"playersplay\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The longest substring in the string is: \"+m.appearInBothEnds(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-93.php"}, {"exercise_number": 94, "exercise_content": "94. Write a Java program to find the longest mirror image string at the both ends of a given string.Sample Output:The given string is: rotavator\r\nThe longest mirror image string in the string is: rotavator", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String endsWithMirrorImage(String stng) \r\n{\r\n  int l  = stng.length();\r\n  String f_str = \"\";\r\n  String t_str1 = \"\";\r\n  String t_str2  = \"\";\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    t_str1 += stng.substring(i,i+1);\r\n    t_str2 = \"\";\r\n    for (int j = t_str1.length()-1; j >= 0; j--) \r\n\t{\r\n      t_str2 += t_str1.substring(j,j+1);\r\n      if (t_str2.equals(stng.substring(l-i-1,l)))\r\n        f_str = t_str1;\r\n    }\r\n  }\r\n  return f_str;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"rotavator\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The longest mirror image string in the string is: \"+m.endsWithMirrorImage(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-94.php"}, {"exercise_number": 95, "exercise_content": "95. Write a Java program to return the sum of the digits present in the given string. If there is no digits the sum return is 0.Sample Output:The given string is: ab5c2d4ef12s\r\nThe sum of the digits in the string is: 14", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic int sumOfDigits(String stng) \r\n{\r\n  int l = stng.length();\r\n  int sum = 0;\r\n  for (int i = 0; i < l; i++) \r\n  {\r\n    if (Character.isDigit(stng.charAt(i))) \r\n\t{\r\n      String tmp = stng.substring(i,i+1);\r\n      sum += Integer.parseInt(tmp);\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"ab5c2d4ef12s\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The sum of the digits in the string is: \"+m.sumOfDigits(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-95.php"}, {"exercise_number": 96, "exercise_content": "96. Write a Java program to create a new string after removing a specified character from a given string except the first and last position.Sample Output:The given string is: zebrazone\r\nThe new string is: zebraone", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String removeAllZ(String stng) \r\n{\r\n  String fin_str = \"\";\r\n  int l = stng.length();\r\n  for (int i = 0; i < l; i++)\r\n  {\r\n    char temp = stng.charAt(i);\r\n    if (!(i > 0 && i < l - 1 && temp == 'z'))\r\n      fin_str = fin_str + temp;\r\n  }\r\n    return fin_str;     \r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"zebrazone\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.removeAllZ(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-96.php"}, {"exercise_number": 97, "exercise_content": "97. Write a Java program to return a string with the characters of the index position 0,1,2, 5,6,7, ... from a given string.Sample Output:The given string is: w3resource.com\r\nThe new string is: w3rour.co", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String pairsToReturn(String stng) \r\n{\r\n  String fin_str = \"\";\r\n  for (int i=0; i<stng.length(); i += 5) \r\n  {\r\n    int end = i + 3;\r\n    if (end > stng.length()) \r\n\t{\r\n      end = stng.length();\r\n    }\r\n    fin_str = fin_str + stng.substring(i, end);\r\n  }\r\n  return fin_str;\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"w3resource.com\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.pairsToReturn(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-97.php"}, {"exercise_number": 98, "exercise_content": "98. Write a Java program to check whether the first instance of a given character is immediately followed by the same character in a given string.Sample Output:The given string is: fizzez\r\nIs 'z' appear twice respectively? true", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\nboolean appearTwice(String stng) \r\n{\r\n  int i = stng.indexOf(\"z\");\r\n  if (i == -1) return false; \r\n  if (i+1 >= stng.length()) return false; \r\n  return stng.substring(i+1, i+2).equals(\"z\");\r\n}\r\n\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"fizzez\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"Is 'z' appear twice respectively? \"+m.appearTwice(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-98.php"}, {"exercise_number": 99, "exercise_content": "99. Write a Java program to return a new string using every character of even positions from a given string.Sample Output:The given string is: w3resource.com\r\nThe new string is: wrsuc.o", "exercise_solution_code": "import java.util.*;\r\npublic class Main\r\n{\r\npublic String makeWithEvenCharacters(String stng) \r\n{\r\n  int len = stng.length();\r\n  String fin_str = \"\";\r\n  for (int i = 0; i < len; i = i + 2) \r\n  {\r\n    fin_str += stng.charAt(i);\r\n  }\r\n  return fin_str;\r\n}\r\npublic static void main (String[] args)\r\n    {\r\n      Main m= new Main();\r\n      String str1 =  \"w3resource.com\";\r\n      System.out.println(\"The given string is: \"+str1);\r\n      System.out.println(\"The new string is: \"+m.makeWithEvenCharacters(str1));\r\n\t  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-99.php"}, {"exercise_number": 100, "exercise_content": "100. Write a Java program to check if a given string contains another string. Return true or false.Sample Output:Original string:\r\nJava is the foundation for virtually every type of networked application and is the global standard for developing and  delivering embedded and mobile applications, games, Web-based content,  and enterprise software. With more than 9 million developers worldwide, Java enables you to efficiently develop, deploy and use exciting applications and services.\r\n\r\nIs 'million' present in the said text?\r\ntrue\r\n\r\nIs 'millions' present in the said text?\r\nfalse", "exercise_solution_code": "public class Main {\r\n    \r\n    public static void main(String[] args) {\r\n          String main_string = \"Java is the foundation for virtually every type of \"+\r\n           \"networked application and is the global standard for developing and \"+\r\n           \" delivering embedded and mobile applications, games, Web-based content, \"+\r\n           \" and enterprise software. With more than 9 million developers worldwide,\"+\r\n           \" Java enables you to efficiently develop, deploy and use exciting applications and services.\";\r\n            System.out.println(\"Original string:\");\r\n           System.out.println(main_string);\r\n           String sub_string1 = \"million\";\r\n            String sub_string2 = \"millions\";\r\n           boolean result1 = is_present(main_string, sub_string1);\r\n            System.out.println(\"\\nIs '\"+sub_string1+\"'\"+ \" present in the said text?\");\r\n           System.out.println(result1);\r\n           boolean result2 = is_present(main_string, sub_string2);\r\n            System.out.println(\"\\nIs '\"+sub_string2+\"'\"+ \" present in the said text?\");\r\n           System.out.println(result2);                        \r\n }\r\n    public static boolean is_present(String main_string, String sub_string) {\r\n      if (main_string == null || sub_string == null || main_string.isEmpty() || sub_string.isEmpty()) {\r\n            return false;\r\n       }\r\n       return main_string.indexOf(sub_string) != -1;\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-100.php"}, {"exercise_number": 101, "exercise_content": "101. Write a Java program to test if a given string contains only digits. Return true or false.Sample Output:First string:\r\n131231231231231231231231231212312312\r\ntrue\r\n\r\nSecond string:\r\n13123123123Z1231231231231231212312312\r\nfalse", "exercise_solution_code": "public class Main {\r\n    \r\n    public static void main(String[] args) {\r\n       String digit_string1 = \"131231231231231231231231231212312312\";\r\n        String digit_string2 = \"13123123123Z1231231231231231212312312\";\r\n        System.out.println(\"First string:\");\r\n       System.out.println(digit_string1);\r\n       boolean result1 = test_only_digits(digit_string1);\r\n        System.out.println(result1);\r\n        System.out.println(\"\\nSecond string:\");\r\n       System.out.println(digit_string2);\r\n        boolean result2 = test_only_digits(digit_string2);\r\n        System.out.println(result2);                                \r\n }\r\n     public static boolean test_only_digits(String digit_string) {\r\n       for (int i = 0; i < digit_string.length(); i++) {\r\n           if (!Character.isDigit(digit_string.charAt(i))) {\r\n               return false;\r\n           }\r\n       }\r\n       return true;\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-101.php"}, {"exercise_number": 102, "exercise_content": "102. Write a Java program to convert a given String to int, long, float and double.Sample Output:Convert String to int/Integer:\r\n\"1323\" as int is 1323 and as Integer is 1323\r\n\r\nConvert String to long/Long:\r\n\"13625478965325\" as long is 13625478965325 and as Long is 13625478965325\r\n\r\nConvert String to float/Float:\r\n\"25.135F\" as float is 25.135 and as Float is 25.135\r\n\r\nConvert String to double/Double:\r\n\"21.25478254D\" as double is 21.25478254 and as Double is 21.25478254\r\nfalse", "exercise_solution_code": "public class Main {\r\n   public static void main(String[] args) {\r\n        String STR_TO_INT = \"1323\";\r\n        String STR_TO_LONG = \"13625478965325\";\r\n        String STR_TO_FLOAT = \"25.135F\";\r\n        String STR_TO_DOUBLE = \"21.25478254D\";\r\n        \r\n       System.out.println(\"Convert String to int/Integer:\");\r\n       Integer toInt1 = Integer.valueOf(STR_TO_INT);\r\n       int toInt2 = Integer.parseInt(STR_TO_INT);\r\n       System.out.println(\"\\\"\" + STR_TO_INT + \"\\\"\" + \" as int is \"\r\n               + toInt1 + \" and as Integer is \" + toInt2);\r\n                \r\n       System.out.println(\"\\nConvert String to long/Long:\");\r\n       Long toLong1 = Long.valueOf(STR_TO_LONG);\r\n       long toLong2 = Long.parseLong(STR_TO_LONG);\r\n       System.out.println(\"\\\"\" + STR_TO_LONG + \"\\\"\" + \" as long is \"\r\n               + toLong1 + \" and as Long is \" + toLong2);\r\n       System.out.println(\"\\nConvert String to float/Float:\");\r\n       Float toFloat1 = Float.valueOf(STR_TO_FLOAT);\r\n       float toFloat2 = Float.parseFloat(STR_TO_FLOAT);\r\n       System.out.println(\"\\\"\" + STR_TO_FLOAT + \"\\\"\" + \" as float is \"\r\n               + toFloat1 + \" and as Float is \" + toFloat2);\r\n                \r\n       System.out.println(\"\\nConvert String to double/Double:\");\r\n       Double toDouble1 = Double.valueOf(STR_TO_DOUBLE);\r\n       double toDouble2 = Double.parseDouble(STR_TO_DOUBLE);\r\n       System.out.println(\"\\\"\" + STR_TO_DOUBLE + \"\\\"\" + \" as double is \"\r\n               + toDouble1 + \" and as Double is \" + toDouble2);\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-102.php"}, {"exercise_number": 103, "exercise_content": "103. Write a Java program to remove a specified character from a given string.Sample Output:Original string:\r\nabcdefabcdeabcdaaa\r\n\r\nSecond string:\r\nbcdefbcdebcd", "exercise_solution_code": "public class Main {    \r\n    public static void main(String[] args) {\r\n       String str1 = \"abcdefabcdeabcdaaa\";\r\n       char g_char = 'a';\r\n        String result = remove_Character(str1, g_char);\r\n        System.out.println(\"\\nOriginal string:\");\r\n        System.out.println(str1);    \r\n        System.out.println(\"\\nSecond string:\");\r\n       System.out.println(result);                                \r\n   }\r\n  public static String remove_Character(String str1, char g_char) {\r\n       if (str1 == null || str1.isEmpty()) {\r\n          return \"\";\r\n       }\r\n       StringBuilder sb = new StringBuilder();\r\n       char[] chArray = str1.toCharArray();\r\n       for (int i = 0; i < chArray.length; i++) {\r\n           if (chArray[i] != g_char) {\r\n               sb.append(chArray[i]);\r\n           }\r\n       }\r\n       return sb.toString();\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-103.php"}, {"exercise_number": 104, "exercise_content": "104. Write a Java program to sort in ascending and descending order by length of the given array of strings.Sample Output:Original unsorted colors: [Green, White, Black, Pink, Orange, Blue, Champagne, Indigo, Ivory]\r\n\r\nSorted color (descending order): [Champagne, Orange, Indigo, Green, White, Black, Ivory, Pink, Blue]\r\n\r\nSorted color (ascending order): [Pink, Blue, Green, White, Black, Ivory, Orange, Indigo, Champagne]", "exercise_solution_code": "import java.util.Arrays;\r\npublic class Main {    \r\n   private static String[] strs = {\"Green\", \"White\", \"Black\", \"Pink\", \"Orange\", \"Blue\", \"Champagne\", \"Indigo\", \"Ivory\"};\r\n    \r\n    public enum sort_asc_dsc{\r\n       ASC, DESC\r\n   }\r\n    \r\n    public static void main(String[] args) {\r\n       System.out.println(\"\\nOriginal unsorted colors: \" + Arrays.toString(strs));\r\n        sort_array_by_length(strs, sort_asc_dsc.DESC);\r\n       System.out.println(\"\\nSorted color (descending order): \" + Arrays.toString(strs));\r\n       sort_array_by_length(strs, sort_asc_dsc.ASC);\r\n       System.out.println(\"\\nSorted color (ascending order): \" + Arrays.toString(strs));            \r\n   }\r\n   public static void sort_array_by_length(String[] strs, sort_asc_dsc direction) {\r\n       if (strs == null || direction == null || strs.length == 0) {\r\n           return;\r\n       }\r\n       if (direction.equals(sort_asc_dsc.ASC)) {\r\n           Arrays.sort(strs, (String str1, String str2)\r\n                   -> Integer.compare(str1.length(), str2.length()));\r\n       } else if (direction.equals(sort_asc_dsc.DESC)) {\r\n           Arrays.sort(strs, (String str1, String str2)\r\n                   -> (-1) * Integer.compare(str1.length(), str2.length()));\r\n       }\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-104.php"}, {"exercise_number": 105, "exercise_content": "105. Write a Java program to count the occurrences of a given string in another given string.Sample Output:aa' has occured 3 times in 'abcd abc aabc baa abcaa'", "exercise_solution_code": "import java.util.Arrays;\r\npublic class Main {    \r\n    public static void main(String[] args) {\r\n        String main_string = \"abcd abc aabc baa abcaa\";\r\n       String sub_string = \"aa\";\r\n       int countV1 = count_sub_str_in_main_str(main_string, sub_string);\r\n       System.out.println(sub_string + \"' has occured \" + countV1 + \" times in '\" + main_string + \"'\");            \r\n   }\r\n  public static int count_sub_str_in_main_str(String main_string, String sub_string) {\r\n       if (main_string == null || sub_string == null) {\r\n           throw new IllegalArgumentException(\"The given strings cannot be null\");\r\n       }\r\n       if (main_string.isEmpty() || sub_string.isEmpty()) {\r\n           return 0;\r\n       }\r\n       int position = 0;\r\n       int ctr = 0;\r\n       int n = sub_string.length();\r\n       while ((position = main_string.indexOf(sub_string, position)) != -1) {\r\n           position = position + n;\r\n           ctr++;\r\n       }\r\n       return ctr;\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-105.php"}, {"exercise_number": 106, "exercise_content": "106. Write a Java program to concatenate a given string with itself of a given number of times.Sample Output:Original string: PHP\r\n\r\nAfter repeating 7 times: PHPPHPPHPPHPPHPPHPPHP", "exercise_solution_code": "import java.util.Arrays;\r\npublic class Main {    \r\n    public static void main(String[] args) {\r\n        String str1 = \"PHP\";\r\n        System.out.println(\"Original string: \"+str1);\r\n        String resultV1 = repeat_str(str1, 7);\r\n       System.out.println(\"\\nAfter repeating 7 times: \"+resultV1);\r\n   }\r\npublic static String repeat_str(String str1, int n) {\r\n       if (str1 == null || str1.isEmpty()) {\r\n           return \"\";\r\n       }\r\n       if (n <= 0) {\r\n           return str1;\r\n       }\r\n       if (Integer.MAX_VALUE / n < str1.length()) {\r\n           throw new OutOfMemoryError(\"Maximum size of a String will be exceeded\");\r\n       }\r\n       StringBuilder x = new StringBuilder(str1.length() * n);\r\n       for (int i = 1; i <= n; i++) {\r\n           x.append(str1);\r\n       }\r\n       return x.toString();\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-106.php"}, {"exercise_number": 107, "exercise_content": "107. Write a Java program to counts occurrences of a certain character in a given string.", "exercise_solution_code": "//MIT License: https://bit.ly/35gZLa3\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class Main {\r\n\r\n    private static final String TEXT = \"My high school, the Illinois Mathematics and Science Academy, \"\r\n            + \"showed me that anything is possible and that you're never too young to think big. \"\r\n            + \"At 15, I worked as a computer programmer at the Fermi National Accelerator Laboratory, \"\r\n            + \"or Fermilab. After graduating, I attended Stanford for a degree in economics and \"\r\n            + \"computer science.\";\r\n    private static final char CHAR_TO_COUNT = 'u';\r\n\r\n    private static final String TEXT_CP = \"\ud83d\ude0d I love \ud83d\udc95 you \u04dc so much \ud83d\udc95 \ud83d\ude0d\";\r\n    private static final String CHAR_TO_COUNT_CP = \"\u04dc\";   // Unicode: \\u04DC, Code Point: 1244\r\n    private static final String CHAR_TO_COUNT_CPS = \"\ud83d\udc95\"; // Unicode: \\uD83D\\uDC95, Code Point: 128149\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Input text: \\n\" + TEXT + \"\\n\");\r\n\r\n        System.out.println(\"\\n\\nASCII or 16 bits Unicode characters (less than 65,535 (0xFFFF)) examples:\\n\");\r\n\r\n        System.out.println(\"replace() based solution:\");\r\n        long startTimeV1 = System.nanoTime();\r\n\r\n        int countV1 = Strings\r\n                .countOccurrencesOfACertainCharacterV1(TEXT, CHAR_TO_COUNT);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV1);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT + \"' occured \" + countV1 + \" time(s)\");\r\n\r\n        System.out.println();\r\n        System.out.println(\"charAt() based solution:\");\r\n        long startTimeV2 = System.nanoTime();\r\n\r\n        int countV2 = Strings\r\n                .countOccurrencesOfACertainCharacterV2(TEXT, CHAR_TO_COUNT);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV2);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT + \"' occured \" + countV2 + \" time(s)\");\r\n\r\n        System.out.println();\r\n        System.out.println(\"Java 8, functional-style solution:\");\r\n        long startTimeV3 = System.nanoTime();\r\n\r\n        long countV3 = Strings\r\n                .countOccurrencesOfACertainCharacterV3(TEXT, CHAR_TO_COUNT);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV3);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT + \"' occured \" + countV3 + \" time(s)\");\r\n\r\n        System.out.println(\"\\n--------------------------------------\\n\");\r\n        \r\n        System.out.println(\"Input text: \\n\" + TEXT_CP + \"\\n\");\r\n        \r\n        System.out.println(\"\\n\\nIncluding Unicode surrogate pairs examples:\\n\");\r\n\r\n        System.out.println(\"replace() based solution:\");\r\n        long startTimeV4 = System.nanoTime();\r\n\r\n        int countV4 = Strings\r\n                .countOccurrencesOfACertainCharacterVCP1(TEXT_CP, CHAR_TO_COUNT_CP);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV4);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT_CP + \"' occured \" + countV4 + \" time(s)\");\r\n\r\n        System.out.println();\r\n        System.out.println(\"replace() based solution:\");\r\n        long startTimeV5 = System.nanoTime();\r\n\r\n        int countV5 = Strings\r\n                .countOccurrencesOfACertainCharacterVCP1(TEXT_CP, CHAR_TO_COUNT_CPS);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV5);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT_CPS + \"' occured \" + countV5 + \" time(s)\");\r\n\r\n        System.out.println();\r\n        System.out.println(\"codePointAt() based solution:\");\r\n        long startTimeV6 = System.nanoTime();\r\n\r\n        int countV6 = Strings\r\n                .countOccurrencesOfACertainCharacterVCP2(TEXT_CP, CHAR_TO_COUNT_CP);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV6);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT_CP + \"' occured \" + countV6 + \" time(s)\");\r\n\r\n        System.out.println();\r\n        System.out.println(\"codePointAt() based solution:\");\r\n        long startTimeV7 = System.nanoTime();\r\n\r\n        int countV7 = Strings\r\n                .countOccurrencesOfACertainCharacterVCP2(TEXT_CP, CHAR_TO_COUNT_CPS);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV7);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT_CPS + \"' occured \" + countV7 + \" time(s)\");\r\n\r\n        System.out.println();\r\n        System.out.println(\"Java 8, functional-style solution:\");\r\n        long startTimeV8 = System.nanoTime();\r\n\r\n        long countV8 = Strings\r\n                .countOccurrencesOfACertainCharacterVCP3(TEXT_CP, CHAR_TO_COUNT_CP);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV8);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT_CP + \"' occured \" + countV8 + \" time(s)\");\r\n\r\n        System.out.println();\r\n        System.out.println(\"Java 8, functional-style solution:\");\r\n        long startTimeV9 = System.nanoTime();\r\n\r\n        long countV9 = Strings\r\n                .countOccurrencesOfACertainCharacterVCP3(TEXT_CP, CHAR_TO_COUNT_CPS);\r\n\r\n        displayExecutionTime(System.nanoTime() - startTimeV9);\r\n        System.out.println(\"Character '\" + CHAR_TO_COUNT_CPS + \"' occured \" + countV9 + \" time(s)\");\r\n    }\r\n\r\n    private static void displayExecutionTime(long time) {\r\n        System.out.println(\"Execution time: \" + time + \" ns\" + \" (\"\r\n                + TimeUnit.MILLISECONDS.convert(time, TimeUnit.NANOSECONDS) + \" ms)\");\r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-107.php"}, {"exercise_number": 108, "exercise_content": "108. Write a Java program to check whether there are two consecutive (following each other continuously.), identical letters in a given string.Sample Output:Original word: Follow\r\nIf there are two consecutive identical letters in the said string: true\r\nOriginal word: Java\r\nIf there are two consecutive identical letters in the said string: false\r\nOriginal word: Yellow\r\nIf there are two consecutive identical letters in the said string: true", "exercise_solution_code": "public class test { \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"Follow\";\r\n\t\tSystem.out.println(\"Original word: \"+text);\r\n\t\tSystem.out.println(\"If there are two consecutive identical letters in the said string: \"+ test(text));\r\n\t\ttext = \"Java\";\r\n\t\tSystem.out.println(\"Original word: \"+text);\r\n\t\tSystem.out.println(\"If there are two consecutive identical letters in the said string: \"+ test(text));\r\n\t\ttext = \"Yellow\";\r\n\t\tSystem.out.println(\"Original word: \"+text);\r\n\t\tSystem.out.println(\"If there are two consecutive identical letters in the said string: \"+ test(text));\r\n        }\r\n\r\n   public static boolean test(String text) {\r\n\t\t\tfor (int i=0;i<text.length()-1;i++)\r\n\t\t\tif (text.charAt(i)==text.charAt(i+1))\r\n\t\t\t\treturn true;\r\n\t\treturn false;\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-108.php"}, {"exercise_number": 109, "exercise_content": "109. Write a Java program that reverses all the words in a string that have odd lengths.Sample Output:Original text: Check two consecutive identical letters in a given string\r\n\r\nReverses the words in the string that have odd lengths:\r\nCheck two consecutive identical letters ni a given gnirts\r\n\r\nOriginal text: Create a Date object using the Calendar class\r\n\r\nReverses the words in the string that have odd lengths:\r\netaerC a etaD tcejbo using the radnelaC class", "exercise_solution_code": "public class Main {\r\n public static void main(String[] args) {\r\n   String text = \"Check two consecutive identical letters in a given string\";\r\n   System.out.println(\"Original text: \" + text);\r\n   System.out.println(\"\\nReverses the words in the string that have odd lengths:\\n\" + test(text));\r\n   text = \"Create a Date object using the Calendar class\";\r\n   System.out.println(\"\\nOriginal text: \" + text);\r\n   System.out.println(\"\\nReverses the words in the string that have odd lengths:\\n\" + test(text));\r\n }\r\n public static String test(String str) {\r\n   String[] str_words = str.split(\" \");\r\n   for (int i = 0; i < str_words.length; i++) {\r\n     if (str_words[i].length() % 2 != 0) {\r\n       StringBuilder reverser = new StringBuilder(str_words[i]);\r\n       str_words[i] = reverser.reverse().toString();\r\n     }\r\n   }\r\n   return String.join(\" \", str_words);\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-109.php"}, {"exercise_number": 110, "exercise_content": "110. Write a Java program to count the number of characters (alphanumeric only.) that occur more than twice in a given string.Sample Output:Original String: abcdaa\r\nNumber of duplicate characters in the said String (Occurs more than twice.): 1\r\n\r\nOriginal String: Create a Date Calendar.\r\nNumber of duplicate characters in the said String (Occurs more than twice.): 3", "exercise_solution_code": "public class Main {\r\n public static void main(String[] args) {\r\n   String text = \"abcdaa\";\r\n   System.out.println(\"Original String: \" + text);\r\n   System.out.println(\"Number of duplicate characters in the said String (Occurs more than twice.): \" + test(text));\r\n   text = \"Tergiversation\";\r\n   System.out.println(\"\\nOriginal String: \" + text);\r\n   System.out.println(\"Number of duplicate characters in the said String (Occurs more than twice.): \" + test(text));\r\n }\r\n public static int test(String text) {\r\n   int ctr = 0;\r\n   while (text.length() > 0) {\r\n     if (text.length() - text.replaceAll(text.charAt(0) + \"\", \"\").length() > 2) {\r\n       ctr++;\r\n     }\r\n     text = text.replaceAll(text.charAt(0) + \"\", \"\");\r\n   }\r\n   return ctr;\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-110.php"}, {"exercise_number": 111, "exercise_content": "111. Write a Java program that removes a specified word from a given text. Return the new string.Sample Output:Input a string: \r\n Exercises Practice Solution\r\nInput a word to remove: \r\n Solution\r\nNew string, after removing the said word:\r\nExercises Practice", "exercise_solution_code": "import java.util.Scanner;   \r\n public class Main {\r\n   public static void main(String[] args) {\r\n    Scanner myObj = new Scanner(System.in);   \r\n    System.out.println(\"Input a string: \");\r\n    String text = myObj.nextLine();\r\n    System.out.println(\"Input a word to remove: \");\r\n    String word = myObj.nextLine();\r\n    System.out.println(\"New string, after removing the said word:\\n\"+test(text,word));\r\n  }\r\n  \r\n public static String test(String text, String word) \r\n  \t{\r\n\t\tString result_str = text.replace(word, \"\");\r\n\t\tresult_str = result_str.replaceAll(\"\\\\s+\", \" \");\r\n\t\treturn result_str;\r\n  }  \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-111.php"}, {"exercise_number": 112, "exercise_content": "112. Write a Java program that checks the letters of the second string are present in the first string. Return true otherwise false.Sample Output:Input the first string: \r\n Java\r\nInput the second string: \r\n Ja\r\nCheck first string contains letters from the second string:\r\ntrue", "exercise_solution_code": "import java.util.Scanner;\r\n public class Main {\r\n   public static void main(String[] args) {\r\n     Scanner myObj = new Scanner(System.in);\r\n     System.out.println(\"Input the first string: \");\r\n     String text = myObj.nextLine();\r\n     System.out.println(\"Input the second string: \");\r\n     String word = myObj.nextLine();\r\n     System.out.println(\"Check first string contains letters from the second string:\\n\" + test(text, word));\r\n   }\r\n   public static boolean test(String first_string, String second_string) {\r\n     if (second_string.length() > first_string.length()) return false;\r\n     if (second_string.isEmpty())\r\n       return true;\r\n     for (int i = 0; i < second_string.length(); i++) {\r\n       if (!first_string.contains(String.valueOf(second_string.charAt(i))))\r\n         return false;\r\n     }\r\n     return true;\r\n   }\r\n }\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/string/java-string-exercise-112.php"}], "Date Time": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to create a Date object using the Calendar class.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise1 {\r\n    public static void main(String[] args)\r\n    {\r\n     int year = 2016;\r\n     int month = 0; // January\r\n     int date = 1;\r\n\r\n     Calendar cal = Calendar.getInstance();\r\n     // Sets the given calendar field value and the time value\r\n     // (millisecond offset from the Epoch) of this Calendar undefined.\r\n     cal.clear();\r\n     System.out.println();\r\n     cal.set(Calendar.YEAR, year);\r\n     cal.set(Calendar.MONTH, month);\r\n     cal.set(Calendar.DATE, date);\r\n\r\n     System.out.println(cal.getTime());\r\n     System.out.println();\r\n\t }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to get and display information (year, month, day, hour, minute) of a default calendar.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise2 {\r\n public static void main(String[] args)\r\n    {\r\n       // Create a default calendar\r\n        Calendar cal = Calendar.getInstance();\r\n       // Get and display information of current date from the calendar:\r\n\t    System.out.println();\r\n        System.out.println(\"Year: \" + cal.get(Calendar.YEAR));\r\n        System.out.println(\"Month: \" + cal.get(Calendar.MONTH));\r\n        System.out.println(\"Day: \" + cal.get(Calendar.DATE));\r\n        System.out.println(\"Hour: \" + cal.get(Calendar.HOUR));\r\n        System.out.println(\"Minute: \" + cal.get(Calendar.MINUTE));\r\n\t    System.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to get the maximum value of the year, month, week, date from the current date of a default calendar.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise3 {\r\npublic static void main(String[] args)\r\n    {\r\n     // Create a default calendar\r\n        Calendar cal = Calendar.getInstance();\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"\\nCurrent Date and Time:\" + cal.getTime());\t\t\r\n\t\tint actualMaxYear = cal.getActualMaximum(Calendar.YEAR);\r\n\t\tint actualMaxMonth = cal.getActualMaximum(Calendar.MONTH);\r\n\t\tint actualMaxWeek = cal.getActualMaximum(Calendar.WEEK_OF_YEAR);\r\n\t\tint actualMaxDate = cal.getActualMaximum(Calendar.DATE);\r\n\t\t\r\n\t\tSystem.out.println(\"Actual Maximum Year: \"+actualMaxYear);\r\n\t\tSystem.out.println(\"Actual Maximum Month: \"+actualMaxMonth);\r\n\t\tSystem.out.println(\"Actual Maximum Week of Year: \"+actualMaxWeek);\r\n\t\tSystem.out.println(\"Actual Maximum Date: \"+actualMaxDate+\"\\n\");\r\n\t\tSystem.out.println();\r\n\t\t\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to get the minimum value of year, month, week, date from the current date of a default calendar.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise4 {\r\n public static void main(String[] args)\r\n    {\r\n     // Create a default calendar\r\n        Calendar cal = Calendar.getInstance();\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"\\nCurrent Date and Time:\" + cal.getTime());\t\t\r\n\t\tint actualMaxYear = cal.getActualMinimum(Calendar.YEAR);\r\n\t\tint actualMaxMonth = cal.getActualMinimum(Calendar.MONTH);\r\n\t\tint actualMaxWeek = cal.getActualMinimum(Calendar.WEEK_OF_YEAR);\r\n\t\tint actualMaxDate = cal.getActualMinimum(Calendar.DATE);\r\n\t\t\r\n\t\tSystem.out.println(\"Actual Minimum Year: \"+actualMaxYear);\r\n\t\tSystem.out.println(\"Actual Minimum Month: \"+actualMaxMonth);\r\n\t\tSystem.out.println(\"Actual Minimum Week of Year: \"+actualMaxWeek);\r\n\t\tSystem.out.println(\"Actual Minimum Date: \"+actualMaxDate+\"\\n\");\r\n\t\tSystem.out.println();\t\t\r\n\t  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to get the current time in New York.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise5 {\r\n   public static void main(String[] args)\r\n    {\r\n     Calendar calNewYork = Calendar.getInstance();\r\n     calNewYork.setTimeZone(TimeZone.getTimeZone(\"America/New_York\"));\r\n\t    System.out.println(); \r\n      System.out.println(\"Time in New York: \" + calNewYork.get(Calendar.HOUR_OF_DAY) + \":\"\r\n        + calNewYork.get(Calendar.MINUTE)+\":\"+calNewYork.get(Calendar.SECOND));\r\n\t\t   System.out.println(); \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to get current full date and time.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise6 {\r\n   public static void main(String[] args)\r\n    {\r\n   Calendar now = Calendar.getInstance();\r\n    System.out.println();\r\n    System.out.println(\"Current full date and time is : \" + (now.get(Calendar.MONTH) + 1) + \"-\"\r\n        + now.get(Calendar.DATE) + \"-\" + now.get(Calendar.YEAR) + \" \"\r\n        + now.get(Calendar.HOUR_OF_DAY) + \":\" + now.get(Calendar.MINUTE) + \":\"\r\n        + now.get(Calendar.SECOND) + \".\" + now.get(Calendar.MILLISECOND));\r\n\tSystem.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to get the last day of the current month.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise7 {\r\n   public static void main(String[] args)\r\n    {\r\n    //Gets a calendar using the default time zone and locale.\r\n        Calendar calendar = Calendar.getInstance();\r\n   System.out.println();     \r\n   System.out.println(calendar.getActualMaximum(Calendar.DAY_OF_MONTH));\r\n   System.out.println(); \r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to get the last date of the month.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise8 {\r\n   public static void main(String[] args)\r\n    {\r\n        Calendar cal = Calendar.getInstance();\r\n      //  cal.setTime(date);\r\n\t  System.out.println();\r\n        cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum(Calendar.DAY_OF_MONTH));\r\n        System.out.println(cal.getTime());\r\n\t\tSystem.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to calculate the first and last day of each week.", "exercise_solution_code": "import java.util.*;\r\nimport java.time.*;\r\nimport java.text.*;\r\n\r\npublic class Exercise9 {\r\n\r\npublic static void main(String []args){\r\n     // Get calendar set to current date and time\r\n      Calendar c = Calendar.getInstance();\r\n\r\n     // Set the calendar to monday of the current week\r\n     c.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);\r\n\r\n        System.out.println();\r\n     // Print dates of the current week starting on Monday\r\n       DateFormat df = new SimpleDateFormat(\"EEE dd/MM/yyyy\");\r\n       System.out.println(df.format(c.getTime()));\r\n        for (int i = 0; i <6; i++) {\r\n         c.add(Calendar.DATE, 1);\r\n           }\r\n        System.out.println(df.format(c.getTime()));\r\n\t\tSystem.out.println();\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to get the name of the first and last day of a month.", "exercise_solution_code": "import java.util.*;\r\nimport java.time.*;\r\nimport java.text.*;\r\n\r\npublic class Exercise10 {\r\n\r\npublic static void main(String []args){\r\n     YearMonth ym = YearMonth.of(2016, 9);\r\n\r\n\t String firstDay = ym.atDay(1).getDayOfWeek().name();\r\n\t String lastDay = ym.atEndOfMonth().getDayOfWeek().name();\r\n\t System.out.println();\r\n\t System.out.println(firstDay);\r\n \t System.out.println(lastDay);\r\n\t System.out.println();\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to get the number of days of a month.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise11 {\r\npublic static void main(String []args){\r\n      Calendar cal = Calendar.getInstance();\r\n      int days = cal.getActualMaximum(Calendar.DAY_OF_MONTH);\r\n\t   System.out.println();\r\n       System.out.println(\"Number of days of the current month : \" + days); \r\n\t   System.out.println(); \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to get localized day-in-week name.", "exercise_solution_code": "import java.util.*;\r\nimport java.time.*;\r\nimport java.text.*;\r\n\r\npublic class Exercise12 {\r\n\r\npublic static void main(String []args){\r\n\r\n  // Localize in German\r\n  \r\n  DateFormatSymbols symbols = new DateFormatSymbols(new Locale(\"de\"));\r\n   // for the current Locale :\r\n   //   DateFormatSymbols symbols = new DateFormatSymbols(); \r\n    String[] dayNames = symbols.getWeekdays();\r\n    for (String s : dayNames) { \r\n    System.out.print(s + \"\\n\");\r\n\tSystem.out.println();\r\n    }\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to get a day of the week of a specific date.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise13 {\r\npublic static void main(String []args){\r\n     // Create a default calendar\r\n        Calendar cal = Calendar.getInstance();\r\n    //Set your date: cal.setTime(yourDate);\r\n\tSystem.out.println();\r\n        int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK);\r\n        System.out.println(\"Day of the week : \" + dayOfWeek); \r\n\tSystem.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to get the current local time.", "exercise_solution_code": "import java.time.*;\r\npublic class Exercise14 {\r\n   public static void main(String[] args)\r\n    {\r\n        LocalTime time = LocalTime.now();\r\n        System.out.println();\r\n        // in hour, minutes, seconds, nano seconds\r\n        System.out.println(\"Local time now : \" + time);\r\n        System.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to add some hours to the current time.", "exercise_solution_code": "import java.time.*;\r\npublic class Exercise15 {\r\n   public static void main(String[] args)\r\n    {\r\n      LocalTime time = LocalTime.now(); \r\n      // adding four hours\r\n      LocalTime newTime = time.plusHours(4);\r\n      System.out.println();\r\n      System.out.println(\"Time after 2 hours : \" + newTime);\r\n      System.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to get a date after 2 weeks.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise16 {\r\n   public static void main(String[] args)\r\n    {\r\n     //two weeks\r\n     int noOfDays = 14; \r\n     Calendar cal = Calendar.getInstance();\r\n     Date cdate = cal.getTime();\r\n     cal.add(Calendar.DAY_OF_YEAR, noOfDays);\r\n     Date date = cal.getTime();\r\n     System.out.println(\"\\nCurrent Date: \" + cdate+\"\\n\");  \r\n     System.out.println(\"Day after two weeks: \" + date+\"\\n\");  \t\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to get a date before and after 1 year compares to the current date.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise17 {\r\n   public static void main(String[] args)\r\n    {\r\n      Calendar cal = Calendar.getInstance();\r\n      Date cdate = cal.getTime();\r\n      // get next year\r\n      cal.add(Calendar.YEAR, 1); \r\n      Date nyear = cal.getTime();\r\n      //get previous year\r\n      cal.add(Calendar.YEAR, -2); \r\n      Date pyear = cal.getTime();\r\n      System.out.println(\"\\nCurrent Date : \" + cdate);\r\n      System.out.println(\"\\nDate before 1 year : \" + pyear);\r\n      System.out.println(\"\\nDate after 1 year  : \" + nyear+\"\\n\");  \t\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to check a year is a leap year or not.", "exercise_solution_code": "public class Exercise18 {\r\n   public static void main(String[] args)\r\n    {\r\n     //year to leap year or not\r\n       int year = 2016;\r\n       System.out.println();        \r\n       if((year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0)))\r\n               System.out.println(\"Year \" + year + \" is a leap year\");\r\n       else\r\n               System.out.println(\"Year \" + year + \" is not a leap year\");\r\n               System.out.println();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to get year and months between two dates.", "exercise_solution_code": "import java.time.*;\r\npublic class Exercise19 {\r\n   public static void main(String[] args)\r\n    {\r\n     LocalDate today = LocalDate.now();    \r\n     LocalDate userday = LocalDate.of(2015, Month.MAY, 15); \r\n     Period diff = Period.between(userday, today); \r\n     System.out.println(\"\\nDifference between \"+ userday +\" and \"+ today +\": \" \r\n     + diff.getYears() +\" Year(s) and \"+ diff.getMonths() +\" Month()s\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program to get current timestamp.", "exercise_solution_code": "import java.time.*;\r\npublic class Exercise20 {\r\n   public static void main(String[] args)\r\n    {\r\n    Instant timestamp = Instant.now(); \r\n    System.out.println(\"\\nCurrent Timestamp: \" + timestamp+\"\\n\"); \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to get the current time in all the available time zones.", "exercise_solution_code": "import java.time.*;\r\npublic class Exercise21 {\r\n   public static void main(String[] args)\r\n    {\r\n    ZoneId.SHORT_IDS.keySet().\r\n    stream().forEach( \r\n    zoneKey ->System.out.println(\" \"+ ZoneId.of( ZoneId.SHORT_IDS.get( zoneKey ) ) +\": \"+ LocalDateTime.now(ZoneId.of(ZoneId.SHORT_IDS.get( zoneKey ) ) ) ) );\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to get the dates 10 days before and after today.", "exercise_solution_code": "import java.time.*;\r\npublic class Exercise22 {\r\n   public static void main(String[] args)\r\n    {\r\n     LocalDate today = LocalDate.now(); \r\n     System.out.println(\"\\nCurrent Date: \"+today);\r\n     System.out.println(\"10 days before today will be \"+today.plusDays(-10));\r\n     System.out.println(\"10 days after today will be \"+today.plusDays(10)+\"\\n\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java program to get the months remaining in the year.", "exercise_solution_code": "import java.time.*;\r\nimport java.time.temporal.TemporalAdjusters;\r\npublic class Exercise23 {\r\n   public static void main(String[] args)\r\n    {\r\n     LocalDate today = LocalDate.now(); \r\n     LocalDate lastDayOfYear = today.with(TemporalAdjusters.lastDayOfYear());\r\n     Period period = today.until(lastDayOfYear);\r\n     System.out.println();\r\n     System.out.println(\"Months remaining in the year: \"+period.getMonths());\t\r\n     System.out.println();\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to display the dates in the following formats.Sample format :Default format of LocalDate=2016-09-16                                                                        \r\n16::Sep::2016                                                                                                 \r\nDefault format of LocalDateTime=2016-09-16T11:46:01.455                                                       \r\n16::Sep::2016 11::46::01                                                                                      \r\nDefault format of Instant=2016-09-16T06:16:01.456Z                                                            \r\nDefault format after parsing = 2014-04-27T21:39:48", "exercise_solution_code": "import java.time.Instant;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\npublic class DateParseFormatExercise24 {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\t//Format examples\r\n\t\tLocalDate date = LocalDate.now();\r\n\t\t//default format\r\n\t\tSystem.out.println(\"\\nDefault format of LocalDate=\"+date);\r\n\t\t//specific format\r\n\t\tSystem.out.println(date.format(DateTimeFormatter.ofPattern(\"d::MMM::uuuu\")));\r\n\r\n\t\tLocalDateTime dateTime = LocalDateTime.now();\r\n\t\t//default format\r\n\t\tSystem.out.println(\"Default format of LocalDateTime=\"+dateTime);\r\n\t\t//specific format\r\n\t\tSystem.out.println(dateTime.format(DateTimeFormatter.ofPattern(\"d::MMM::uuuu HH::mm::ss\")));\r\n   \t\tInstant timestamp = Instant.now();\r\n\t\t//default format\r\n\t\tSystem.out.println(\"Default format of Instant=\"+timestamp);\r\n\t\t\r\n\t\t//Parse examples\r\n\t\tLocalDateTime dt = LocalDateTime.parse(\"27::Apr::2014 21::39::48\",\r\n\t\t\t\tDateTimeFormatter.ofPattern(\"d::MMM::uuuu HH::mm::ss\"));\r\n\t\tSystem.out.println(\"Default format after parsing = \"+dt+\"\\n\");\r\n\t}\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to get the information of current/given year.Sample format :Sample Output :\r\nCurrent Year: 2001                                                                                            \r\nIs current year leap year? false                                                                              \r\nLength of the year: 365 days", "exercise_solution_code": "import java.time.*;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\npublic class DateParseFormatExercise25 {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\r\n\t //Current year\t\r\n\t Year yr = Year.now();\r\n     //given year\r\n     //Year yr = Year.of(2001);\r\n     System.out.println(\"\\nCurrent Year: \" + yr);  \r\n     boolean isLeap = yr.isLeap(); // false\r\n     System.out.println(\"Is current year leap year? \" + isLeap);  \r\n     int length = yr.length(); // 365\r\n     System.out.println(\"Length of the year: \" + length+\" days\\n\"); \r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to get the information of current/given month.Sample format :Sample Output :\r\nInteger value of the current month: 2                                                                         \r\nLength of the month: 28                                                                                       \r\nMaximum length of the month: 29                                                                               \r\nFirst month of the Quarter: JANUARY", "exercise_solution_code": "import java.time.*;\r\n\r\npublic class DateParseFormatExercise26 {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\r\n   // information about the month\r\n      LocalDate ldt = LocalDate.of(2016, Month.FEBRUARY, 10);\r\n      Month mn = ldt.getMonth(); // FEBRUARY\r\n      int mnIntValue = mn.getValue(); // 2\r\n      int minLength = mn.minLength(); // 28\r\n      int maxLength = mn.maxLength(); // 29\r\n      Month firstMonthOfQuarter = mn.firstMonthOfQuarter(); // JANUARY\r\n      System.out.println(\"\\nInteger value of the current month: \" + mnIntValue);\r\n      System.out.println(\"Length of the month: \" + minLength);\r\n      System.out.println(\"Maximum length of the month: \" + maxLength); \r\n      System.out.println(\"First month of the Quarter: \" + firstMonthOfQuarter+\"\\n\"); \r\n      }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-26.php"}, {"exercise_number": 27, "exercise_content": "27. Write a Java program to get the information of a given time.", "exercise_solution_code": "import java.time.*;\r\n\r\npublic class DateParseFormatExercise27 {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\r\n      LocalTime time = LocalTime.of(12, 24, 32);  \r\n      int hour = time.getHour(); \r\n      int minute = time.getMinute();  \r\n      int second = time.getSecond(); \r\n      System.out.println(\"\\nCurrent Local time: \" + time);\r\n      System.out.println(\"Hour: \" + hour);\r\n      System.out.println(\"Minute: \" + minute); \r\n      System.out.println(\"Second: \" +second+\"\\n\"); \r\n      }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-27.php"}, {"exercise_number": 28, "exercise_content": "28. Write a Java program to display the date time information before some hours and minutes from current date time.", "exercise_solution_code": "import java.time.*;\r\n\r\npublic class DateParseFormatExample28 {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\r\n    // Before 7 houres and 30 minutes\r\n     LocalDateTime dateTime = LocalDateTime.now().minusHours(5).minusMinutes(30);\r\n      System.out.println(\"\\nCurrent Date and Time:  \" + LocalDateTime.now());  \r\n      System.out.println(\"Before 7 hours and 30 minutes: \" + dateTime+\"\\n\");  \r\n\t}\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-28.php"}, {"exercise_number": 29, "exercise_content": "29. Write a Java program to convert a string to date.", "exercise_solution_code": "import java.time.*;\r\nimport java.util.*;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\npublic class MainEx29 {\r\n  public static void main(String[] args) {\r\n   String string = \"May 1, 2016\";\r\n   DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MMMM d, yyyy\", Locale.ENGLISH);\r\n   LocalDate date = LocalDate.parse(string, formatter);\r\n   System.out.println();\r\n   System.out.println(date);\r\n   System.out.println();\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-29.php"}, {"exercise_number": 30, "exercise_content": "30. Write a Java program to compute the difference between two dates (year, months, days).", "exercise_solution_code": "import java.time.*;\r\nimport java.util.*;\r\n\r\npublic class Exercise1 {  \r\n   public static void main(String[] args)\r\n    {\r\n        LocalDate pdate = LocalDate.of(2012, 01, 01);\r\n        LocalDate now = LocalDate.now();\r\n \r\n        Period diff = Period.between(pdate, now);\r\n \r\n     System.out.printf(\"\\nDifference is %d years, %d months and %d days old\\n\\n\", \r\n                    diff.getYears(), diff.getMonths(), diff.getDays());\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-30.php"}, {"exercise_number": 31, "exercise_content": "31. Write a Java program to compute the difference between two dates (Hours, minutes, milli, seconds and nano).", "exercise_solution_code": "import java.time.*;\r\nimport java.util.*;\r\n\r\npublic class Exercise31 {  \r\n   public static void main(String[] args)\r\n    {\r\n     LocalDateTime dateTime = LocalDateTime.of(2016, 9, 16, 0, 0);\r\n     LocalDateTime dateTime2 = LocalDateTime.now();\r\n     int diffInNano = java.time.Duration.between(dateTime, dateTime2).getNano();\r\n     long diffInSeconds = java.time.Duration.between(dateTime, dateTime2).getSeconds();\r\n     long diffInMilli = java.time.Duration.between(dateTime, dateTime2).toMillis();\r\n     long diffInMinutes = java.time.Duration.between(dateTime, dateTime2).toMinutes();\r\n     long diffInHours = java.time.Duration.between(dateTime, dateTime2).toHours();\r\n     System.out.printf(\"\\nDifference is %d Hours, %d Minutes, %d Milli, %d Seconds and %d Nano\\n\\n\", \r\n                   diffInHours, diffInMinutes, diffInMilli, diffInSeconds, diffInNano );\r\n\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-31.php"}, {"exercise_number": 32, "exercise_content": "32. Write a Java program to calculate your age.", "exercise_solution_code": "import java.time.*;\r\nimport java.util.*;\r\n\r\npublic class Exercise32 {  \r\n   public static void main(String[] args)\r\n    {\r\n        // date of birth\r\n        LocalDate pdate = LocalDate.of(1989, 04, 11);\r\n        // current date\r\n        LocalDate now = LocalDate.now();\r\n        // difference between current date and date of birth\r\n        Period diff = Period.between(pdate, now);\r\n \r\n     System.out.printf(\"\\nI am  %d years, %d months and %d days old.\\n\\n\", \r\n                    diff.getYears(), diff.getMonths(), diff.getDays());\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-32.php"}, {"exercise_number": 33, "exercise_content": "33. Write a Java program to get the next and previous Friday.", "exercise_solution_code": "import java.time.*;\r\nimport java.time.temporal.TemporalAdjusters;\r\npublic class Exercise33 {\r\n   public static void main(String[] args)\r\n    {\r\n    LocalDate dt = LocalDate.now();    \r\n    System.out.println(\"\\nNext Friday: \"+dt.with(TemporalAdjusters.next(DayOfWeek.FRIDAY)));\r\n    System.out.println(\"Previous Friday: \"+dt.with(TemporalAdjusters.previous(DayOfWeek.FRIDAY))+\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-33.php"}, {"exercise_number": 34, "exercise_content": "34. Write a Java program to get today's date at midnight time.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise34 {\r\n   public static void main(String[] args)\r\n    {\r\n      Calendar cal = new GregorianCalendar();\r\n      cal.set(Calendar.HOUR_OF_DAY, 0); //anything 0 - 23\r\n      cal.set(Calendar.MINUTE, 0);\r\n      cal.set(Calendar.SECOND, 0);\r\n      System.out.println(\"\\n\"+cal.getTime()+\"\\n\");\r\n    \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-34.php"}, {"exercise_number": 35, "exercise_content": "35. Write a Java program to extract date, time from the date string.", "exercise_solution_code": "import java.util.*;\r\nimport java.text.*;\r\n\r\npublic class Exercise35 {\r\n  public static void main(String[] args)\r\n   {\r\n    try {    \r\n      String originalString = \"2016-07-14 09:00:02\";\r\n      Date date = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(originalString);\r\n      String newstr = new SimpleDateFormat(\"MM/dd/yyyy, H:mm:ss\").format(date);\r\n       System.out.println(\"\\n\"+newstr+\"\\n\");\r\n      } \r\n    catch (ParseException e) {\r\n    //Handle exception here\r\n     e.printStackTrace();\r\n     }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-35.php"}, {"exercise_number": 36, "exercise_content": "36. Write a Java program to convert a unix timestamp to date in Java.", "exercise_solution_code": "import java.util.*;\r\nimport java.text.*;\r\n\r\npublic class Exercise36 {\r\n  public static void main(String[] args)\r\n   {\r\n   //Unix seconds\r\n   long unix_seconds = 1372339860;\r\n   //convert seconds to milliseconds\r\n   Date date = new Date(unix_seconds*1000L); \r\n   // format of the date\r\n   SimpleDateFormat jdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss z\");\r\n   jdf.setTimeZone(TimeZone.getTimeZone(\"GMT-4\"));\r\n   String java_date = jdf.format(date);\r\n   System.out.println(\"\\n\"+java_date+\"\\n\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-36.php"}, {"exercise_number": 37, "exercise_content": "37. Write a Java program to find seconds since 1970.", "exercise_solution_code": "public class Exercise37 {\r\n  public static void main(String[] args)\r\n   {\r\n     long seconds = System.currentTimeMillis() / 1000l;\r\n     System.out.println(\"\\nSeconds since 1970: \"+seconds+\"\\n\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-37.php"}, {"exercise_number": 38, "exercise_content": "38. Write a Java program to calculate the difference between two dates in days.", "exercise_solution_code": "//MIT License: https://bit.ly/35gZLa3\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.Period;\r\nimport java.time.ZoneId;\r\nimport java.time.ZonedDateTime;\r\nimport java.time.temporal.ChronoUnit;\r\nimport java.util.Calendar;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        System.out.println(\"\\nBefore JDK 8:\");\r\n\r\n        Calendar cal1 = Calendar.getInstance();\r\n        cal1.set(2019, 0, 1);\r\n        Calendar cal2 = Calendar.getInstance();\r\n        cal2.set(2020, 2, 1);\r\n\r\n        System.out.println(\"\\nDate/Calendar case: \" + cal1.getTime() + \"  \" + cal2.getTime());\r\n\r\n        long inMs = Math.abs(cal1.getTimeInMillis() - cal2.getTimeInMillis());\r\n        long inDays = Math.abs(TimeUnit.DAYS.convert(inMs, TimeUnit.MILLISECONDS));\r\n\r\n        System.out.println(\"Difference in milliseconds is: \" + inMs);\r\n        System.out.println(\"Difference in days is: \" + inDays);\r\n\r\n        System.out.println(\"\\nStarting with JDK 8:\");\r\n\r\n        LocalDate ld1 = LocalDate.of(2019, 1, 1);\r\n        LocalDate ld2 = LocalDate.of(2020, 3, 1);\r\n\r\n        System.out.println(\"\\nLocalDate case: \" + ld1 + \"  \" + ld2);\r\n\r\n        long between_In_Days = Math.abs(ChronoUnit.DAYS.between(ld1, ld2));\r\n        long between_In_Months = Math.abs(ChronoUnit.MONTHS.between(ld1, ld2));\r\n        long between_In_Years = Math.abs(ChronoUnit.YEARS.between(ld1, ld2));\r\n        long until_In_Days = Math.abs(ld1.until(ld2, ChronoUnit.DAYS));\r\n        long until_In_Months = Math.abs(ld1.until(ld2, ChronoUnit.MONTHS));\r\n        long until_In_Years = Math.abs(ld1.until(ld2, ChronoUnit.YEARS));\r\n        Period period = ld1.until(ld2);\r\n        System.out.println(\"Difference as Period: \"\r\n                + period.getYears() + \"y\" + period.getMonths() + \"m\" + period.getDays() + \"d\");\r\n        System.out.println(\"Difference in days is via between(): \" + between_In_Days);\r\n        System.out.println(\"Difference in months is via between(): \" + between_In_Months);\r\n        System.out.println(\"Difference in years is via between(): \" + between_In_Years);\r\n        System.out.println(\"Difference in days is via until(): \" + until_In_Days);\r\n        System.out.println(\"Difference in months is via until(): \" + until_In_Months);\r\n        System.out.println(\"Difference in years is via until(): \" + until_In_Years);\r\n\r\n        LocalDateTime ldt1 = LocalDateTime.of(2019, 1, 1, 22, 15, 15);\r\n        LocalDateTime ldt2 = LocalDateTime.of(2020, 1, 1, 23, 15, 15);\r\n\r\n        System.out.println(\"\\nLocalDateTime case: \" + ldt1 + \"  \" + ldt2);\r\n\r\n        long betweenInMinutesWithoutZone = Math.abs(ChronoUnit.MINUTES.between(ldt1, ldt2));\r\n        long untilInMinutesWithoutZone = Math.abs(ldt1.until(ldt2, ChronoUnit.HOURS));\r\n        System.out.println(\"Difference in minutes without zone: \" + betweenInMinutesWithoutZone);\r\n        System.out.println(\"Difference in hours without zone: \" + untilInMinutesWithoutZone);\r\n\r\n        System.out.println(\"\\nZonedDateTime case:\");\r\n\r\n        ZonedDateTime zdt1 = ldt1.atZone(ZoneId.of(\"Europe/Bucharest\"));\r\n        ZonedDateTime zdt2 = zdt1.withZoneSameInstant(ZoneId.of(\"Australia/Perth\")).plusHours(1);\r\n        ZonedDateTime zdt3 = ldt2.atZone(ZoneId.of(\"Australia/Perth\"));\r\n\r\n        long betweenInMinutesWithZone12 = Math.abs(ChronoUnit.MINUTES.between(zdt1, zdt2));\r\n        long untilInHoursWithZone12 = Math.abs(zdt1.until(zdt2, ChronoUnit.HOURS));\r\n        long betweenInMinutesWithZone13 = Math.abs(ChronoUnit.MINUTES.between(zdt1, zdt3));\r\n        long untilInHoursWithZone13 = Math.abs(zdt1.until(zdt3, ChronoUnit.HOURS));\r\n\r\n        System.out.println(\"Europe/Bucharest: \" + zdt1 + \"  Australia/Perth: \" + zdt2);\r\n        System.out.println(\"Difference in minutes with zone (same instant): \" + betweenInMinutesWithZone12);\r\n        System.out.println(\"Difference in hours with zone (same instant): \" + untilInHoursWithZone12);\r\n\r\n        System.out.println(\"\\nEurope/Bucharest: \" + zdt1 + \"  Australia/Perth: \" + zdt3);\r\n        System.out.println(\"Difference in minutes with zone (not same instant): \" + betweenInMinutesWithZone13);\r\n        System.out.println(\"Difference in hours with zone: \" + untilInHoursWithZone13);\r\n    }\r\n} \r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-38.php"}, {"exercise_number": 39, "exercise_content": "39. Write a java program to convert String to date and time and vice a versa.", "exercise_solution_code": "//MIT License: https://bit.ly/35gZLa3\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalTime;\r\nimport java.time.OffsetDateTime;\r\nimport java.time.OffsetTime;\r\nimport java.time.ZonedDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) throws ParseException {\r\n\r\n        System.out.println(\"\\nConvert String to LocalDate:\");\r\n        LocalDate localDate = LocalDate.parse(\"2020-06-01\");\r\n        System.out.println(\"Convert LocalDate to String:\");\r\n        String localDateAsDefaultString = localDate.toString();\r\n        System.out.println(\"LocalDate: \" + localDateAsDefaultString + \"( year: \" + localDate.getYear()\r\n                + \", month: \" + localDate.getMonthValue() + \", day: \" + localDate.getDayOfMonth() + \" )\");\r\n\r\n        LocalTime localTime = LocalTime.parse(\"12:23:44\");\r\n    \tSystem.out.println(\"\\nConvert LocalTime to String:\");\r\n        String localTimeAsDefaultString = localTime.toString();\r\n        System.out.println(\"LocalTime: \" + localTimeAsDefaultString + \"( hour: \" + localTime.getHour()\r\n                + \", minute: \" + localTime.getMinute() + \", second: \" + localTime.getSecond() + \" )\");\r\n\r\n        System.out.println(\"Convert String to LocalDateTime:\");\r\n        LocalDateTime localDateTime = LocalDateTime.parse(\"2020-06-01T11:20:15\");\r\n        System.out.println(\"Convert LocalDateTime to String:\");\r\n        String localDateTimeAsDefaultString = localDateTime.toString();\r\n        System.out.println(\"LocalDateTime: \" + localDateTimeAsDefaultString + \"( year: \" + localDateTime.getYear()\r\n                + \", month: \" + localDateTime.getMonthValue() + \", day: \" + localDateTime.getDayOfMonth()\r\n                + \", hour: \" + localDateTime.getHour() + \", minute: \" + localDateTime.getMinute()\r\n                + \", second: \" + localDateTime.getSecond() + \" )\");\r\n\r\n        System.out.println(\"Convert String to OffsetDateTime:\");\r\n        OffsetDateTime offsetDateTime = OffsetDateTime.parse(\"2007-12-03T10:15:30+01:00\");\r\n        System.out.println(\"Convert OffsetDateTime to String:\");\r\n        String offsetDateTimeAsDefaultString = offsetDateTime.toString();\r\n        System.out.println(\"OffsetDateTime: \" + offsetDateTimeAsDefaultString + \"( year: \" + offsetDateTime.getYear()\r\n                + \", month: \" + offsetDateTime.getMonthValue() + \", day: \" + offsetDateTime.getDayOfMonth()\r\n                + \", hour: \" + offsetDateTime.getHour() + \", minute: \" + offsetDateTime.getMinute()\r\n                + \", second: \" + offsetDateTime.getSecond() + \", offset: \" + offsetDateTime.getOffset() + \" )\");\r\n\r\n        System.out.println(\"Convert String to OffsetTime:\");\r\n        OffsetTime offsetTime = OffsetTime.parse(\"10:15:30+01:00\");\r\n        System.out.println(\"Convert OffsetTime to String:\");\r\n        String offsetTimeAsDefaultString = offsetTime.toString();\r\n        System.out.println(\"OffsetTime: \" + offsetTimeAsDefaultString\r\n                + \"( hour: \" + offsetTime.getHour() + \", minute: \" + offsetTime.getMinute()\r\n                + \", second: \" + offsetTime.getSecond() + \", offset: \" + offsetTime.getOffset() + \" )\");\r\n\r\n        System.out.println(\"Convert String to ZonedDateTime:\");\r\n        ZonedDateTime zonedDateTime = ZonedDateTime.parse(\"2020-06-01T10:15:30+09:00[Asia/Tokyo]\");\r\n        System.out.println(\"Convert ZonedDateTime to String:\");\r\n        String zonedDateTimeAsDefaultString = zonedDateTime.toString();\r\n        System.out.println(\"ZonedDateTime: \" + zonedDateTimeAsDefaultString + \"( year: \" + zonedDateTime.getYear()\r\n                + \", month: \" + zonedDateTime.getMonthValue() + \", day: \" + zonedDateTime.getDayOfMonth()\r\n                + \", hour: \" + zonedDateTime.getHour() + \", minute: \" + zonedDateTime.getMinute()\r\n                + \", second: \" + zonedDateTime.getSecond() + \", offset: \" + zonedDateTime.getOffset()\r\n                + \", zone: \" + zonedDateTime.getZone() + \" )\");\r\n\r\n        System.out.println(\"\\nJava 8, convert with formatter:\");\r\n\r\n        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\"dd.MM.yyyy\");\r\n        System.out.println(\"Convert String to LocalDate:\");\r\n        LocalDate localDateFormatted = LocalDate.parse(\"01.06.2020\", dateFormatter);\r\n        System.out.println(\"Convert LocalDate to String:\");              \r\n        String localDateAsFormattedString = dateFormatter.format(localDateFormatted);\r\n        System.out.println(\"Date: \" + localDateAsFormattedString + \"( year: \" + localDateFormatted.getYear()\r\n                + \", month: \" + localDateFormatted.getMonthValue() + \", day: \" + localDateFormatted.getDayOfMonth() + \" )\");\r\n\r\n        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern(\"HH|mm|ss\");\r\n        System.out.println(\"Convert String to LocalTime:\");\r\n        LocalTime localTimeFormatted = LocalTime.parse(\"12|23|44\", timeFormatter);\r\n        System.out.println(\"Convert LocalTime to String:\");              \r\n        String localTimeAsFormattedString = timeFormatter.format(localTimeFormatted);\r\n        System.out.println(\"Time: \" + localTimeAsFormattedString + \"( hour: \" + localTimeFormatted.getHour()\r\n                + \", minute: \" + localTimeFormatted.getMinute() + \", second: \" + localTimeFormatted.getSecond() + \" )\");\r\n\r\n        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(\"dd.MM.yyyy, HH:mm:ss\");\r\n        System.out.println(\"Convert String to LocalDateTime:\");\r\n        LocalDateTime localDateTimeFormatted = LocalDateTime.parse(\"01.06.2020, 11:20:15\", dateTimeFormatter);\r\n        System.out.println(\"Convert LocalDateTime to String:\");        \r\n        String localDateTimeAsFormattedString = dateTimeFormatter.format(localDateTimeFormatted);\r\n        System.out.println(\"DateTime: \" + localDateTimeAsFormattedString + \"( year: \" + localDateTimeFormatted.getYear()\r\n                + \", month: \" + localDateTimeFormatted.getMonthValue() + \", day: \" + localDateTimeFormatted.getDayOfMonth()\r\n                + \", hour: \" + localDateTimeFormatted.getHour() + \", minute: \" + localDateTimeFormatted.getMinute()\r\n                + \", second: \" + localDateTimeFormatted.getSecond() + \" )\");\r\n\r\n        DateTimeFormatter offsetDateTimeFormatter = DateTimeFormatter.ofPattern(\"yyyy.MM.dd, HH:mm:ss, XXXXX\");\r\n        System.out.println(\"Convert String to OffsetDateTime:\");\r\n        OffsetDateTime offsetDateTimeFormatted = OffsetDateTime.parse(\"2007.12.03, 10:15:30, +01:00\", offsetDateTimeFormatter);\r\n        System.out.println(\"Convert OffsetDateTime to String:\");        \r\n        String offsetDateTimeAsFormattedString = offsetDateTimeFormatter.format(offsetDateTimeFormatted);\r\n        System.out.println(\"OffsetDateTime: \" + offsetDateTimeAsFormattedString + \"( year: \" + offsetDateTimeFormatted.getYear()\r\n                + \", month: \" + offsetDateTimeFormatted.getMonthValue() + \", day: \" + offsetDateTimeFormatted.getDayOfMonth()\r\n                + \", hour: \" + offsetDateTimeFormatted.getHour() + \", minute: \" + offsetDateTimeFormatted.getMinute()\r\n                + \", second: \" + offsetDateTimeFormatted.getSecond() + \", offset: \" + offsetDateTimeFormatted.getOffset() + \" )\");\r\n\r\n        DateTimeFormatter offsetTimeFormatter = DateTimeFormatter.ofPattern(\"HH mm ss XXXXX\");\r\n        System.out.println(\"Convert String to OffsetTime:\");\r\n        OffsetTime offsetTimeFormatted = OffsetTime.parse(\"10 15 30 +01:00\", offsetTimeFormatter);\r\n        System.out.println(\"Convert OffsetTime to String:\");\r\n        String offsetTimeAsFormattedString = offsetTimeFormatter.format(offsetTimeFormatted);\r\n        System.out.println(\"OffsetTime: \" + offsetTimeAsFormattedString\r\n                + \"( hour: \" + offsetTimeFormatted.getHour() + \", minute: \" + offsetTimeFormatted.getMinute()\r\n                + \", second: \" + offsetTimeFormatted.getSecond() + \", offset: \" + offsetTimeFormatted.getOffset() + \" )\");\r\n\r\n        DateTimeFormatter zonedDateTimeFormatter\r\n                = DateTimeFormatter.ofPattern(\"dd.MM.yyyy, HH:mm:ssXXXXX '['VV']'\");\r\n        // DateTimeFormatter zonedDateTimeFormatter \r\n        //      = DateTimeFormatter.ofPattern(\"dd.MM.yyyy, HH:mm:ssXXXXX '['VV']'\").withZone(ZoneId.of(\"Europe/Paris\"));        \r\n        System.out.println(\"Convert String to ZonedDateTime:\");                 \r\n        ZonedDateTime zonedDateTimeFormatted\r\n                = ZonedDateTime.parse(\"01.06.2020, 11:20:15+09:00 [Asia/Tokyo]\", zonedDateTimeFormatter);\r\n        System.out.println(\"Convert ZonedDateTime to String:\");\r\n        String zonedDateTimeAsFormattedString = zonedDateTimeFormatted.format(zonedDateTimeFormatter);\r\n        System.out.println(\"ZonedDateTime: \" + zonedDateTimeAsFormattedString + \"( year: \" + zonedDateTimeFormatted.getYear()\r\n                + \", month: \" + zonedDateTimeFormatted.getMonthValue() + \", day: \" + zonedDateTimeFormatted.getDayOfMonth()\r\n                + \", hour: \" + zonedDateTimeFormatted.getHour() + \", minute: \" + zonedDateTimeFormatted.getMinute()\r\n                + \", second: \" + zonedDateTimeFormatted.getSecond() + \", offset: \" + zonedDateTimeFormatted.getOffset()\r\n                + \", zone: \" + zonedDateTimeFormatted.getZone() + \" )\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-39.php"}, {"exercise_number": 40, "exercise_content": "40. Write a Java program to display current date without time and current time without date.", "exercise_solution_code": "import java.time.LocalDate;\r\nimport java.time.LocalTime;\r\nimport java.util.Date;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args){        \r\n        LocalDate l_date = LocalDate.now();        \r\n        System.out.println(\"Current date: \" + l_date);\r\n        \r\n        LocalTime l_time = LocalTime.now();        \r\n        System.out.println(\"Current time: \" + l_time);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-40.php"}, {"exercise_number": 41, "exercise_content": "41. Write a Java program to display combine local date and time in a single object.", "exercise_solution_code": "import java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalTime;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {                       \r\n        LocalDate local_Dt = LocalDate.now();\r\n        String localDateAsString = local_Dt\r\n                .format(DateTimeFormatter.ofPattern(\"yyyy-MMM-dd\"));\r\n        System.out.println(\"Local Date: \" + localDateAsString);        \r\n        LocalTime local_Time = LocalTime.now();\r\n        String localTimeAsString = local_Time\r\n                .format(DateTimeFormatter.ofPattern(\"hh:mm:ss a\"));\r\n        System.out.println(\"Local Time: \" + localTimeAsString);        \r\n        LocalDateTime localDateTime = LocalDateTime.of(local_Dt, local_Time);        \r\n        String localDateTimeAsString = localDateTime\r\n                .format(DateTimeFormatter.ofPattern(\"yyyy-MMM-dd hh:mm:ss a\"));        \r\n        System.out.println(\"\\nCombine local Date Time: \" + localDateTimeAsString);\r\n    }    \r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-41.php"}, {"exercise_number": 42, "exercise_content": "42. Write a Java program to define a period of time using date-based values (Period) and a duration of time using time-based values (Duration).", "exercise_solution_code": "//MIT License: https://bit.ly/35gZLa3\r\nimport java.time.LocalDate;\r\nimport java.time.Period;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        Period fromDays = Period.ofDays(120);\r\n        System.out.println(\"Period from days: \" + fromDays);\r\n\r\n        Period periodFromUnits = Period.of(2000, 11, 24);\r\n        System.out.println(\"Period from units: \" + periodFromUnits);\r\n\r\n        LocalDate localDate = LocalDate.now();\r\n        Period periodFromLocalDate = Period.of(localDate.getYear(),\r\n                localDate.getMonthValue(), localDate.getDayOfMonth());\r\n        System.out.println(\"Period from LocalDate: \" + periodFromLocalDate);\r\n\r\n        Period periodFromString = Period.parse(\"P2019Y2M25D\");\r\n        System.out.println(\"Period from String: \" + periodFromString);\r\n\r\n        LocalDate startLocalDate = LocalDate.of(2018, 3, 12);\r\n        LocalDate endLocalDate = LocalDate.of(2019, 7, 20);\r\n        Period periodBetween = Period.between(startLocalDate, endLocalDate);\r\n        System.out.println(\"\\nBetween \" + startLocalDate + \" and \"\r\n                + endLocalDate + \" there are \" + periodBetween.getYears() + \" year(s)\");\r\n        System.out.println(\"Between \" + startLocalDate + \" and \"\r\n                + endLocalDate + \" there are \" + periodBetween.getMonths() + \" month(s)\");\r\n        System.out.println(\"Between \" + startLocalDate + \" and \"\r\n                + endLocalDate + \" there are \" + periodBetween.getDays() + \" days(s)\");\r\n\r\n        System.out.println(\"Expressed as y:m:d: \" + periodToYMD(periodBetween));\r\n\r\n        System.out.println(startLocalDate + \" is after \"\r\n                + endLocalDate + \" ? \" + periodBetween.isNegative());\r\n\r\n        Period periodBetweenPlus1Year = periodBetween.plusYears(1L);\r\n        System.out.println(\"\\n\" + periodBetween + \" has \" + periodBetween.getYears() + \" year,\"\r\n                + \" after adding one year it has \" + periodBetweenPlus1Year.getYears());\r\n\r\n        Period p1 = Period.ofDays(5);\r\n        Period p2 = Period.ofDays(20);\r\n        Period p1p2 = p1.plus(p2);\r\n        System.out.println(p1 + \"+\" + p2 + \"=\" + p1p2);\r\n    }\r\n\r\n    private static String periodToYMD(Period period) {\r\n\r\n        if (period == null) {\r\n            // or throw IllegalArgumentException\r\n            return \"\";\r\n        }\r\n\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(period.getYears())\r\n                .append(\"y:\")\r\n                .append(period.getMonths())\r\n                .append(\"m:\")\r\n                .append(period.getDays())\r\n                .append(\"d\");\r\n\r\n        return sb.toString();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-42.php"}, {"exercise_number": 43, "exercise_content": "43. Write a Java program to display all the available time zones with UTC and GMT.", "exercise_solution_code": "//MIT License: https://bit.ly/35gZLa3\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n    \r\n        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                \r\n        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);\r\n        \r\n        Collections.sort(timezones8);\r\n        timezones8.forEach(System.out::println);\r\n    }    \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-43.php"}, {"exercise_number": 44, "exercise_content": "44. Write a Java program to define and extract zone offsets.", "exercise_solution_code": "//MIT License: https://bit.ly/35gZLa3\r\nimport java.time.LocalDateTime;\r\nimport java.time.OffsetDateTime;\r\nimport java.time.OffsetTime;\r\nimport java.time.ZoneId;\r\nimport java.time.ZoneOffset;\r\nimport java.util.Calendar;\r\nimport java.util.TimeZone;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        System.out.println(\"Before JDK 8:\");\r\n        TimeZone timeZoneAP = TimeZone.getTimeZone(\"Australia/Perth\");\r\n        int offsetFromTimeZone = timeZoneAP.getRawOffset();\r\n        String userFriendlyOffsetTimeZone = formatOffset(offsetFromTimeZone);\r\n        System.out.println(\"Offset from TimeZone (Australia/Perth): \" + userFriendlyOffsetTimeZone);\r\n\r\n        Calendar calendar = Calendar.getInstance();\r\n        // Summer time in Bucharest: \r\n        // Sunday, 31 March 2019, 1h forward -  Sunday, 27 October 2019, 1 hour backward\r\n        // month 6 is a summer month in Bucharest, so you will get +03:00\r\n        // month 11 is a winter month in Bucharest, so you will get +02:00\r\n        calendar.set(2019, 11, 15);\r\n        TimeZone timeZoneEB = TimeZone.getTimeZone(\"Europe/Bucharest\");\r\n        timeZoneEB.useDaylightTime();\r\n        int offsetFromDate = timeZoneEB.getOffset(calendar.getTime().getTime());\r\n        String userFriendlyOffsetDate = formatOffset(offsetFromDate);\r\n        System.out.println(\"Offset from Calendar (Europe/Bucharest): \" + userFriendlyOffsetDate);\r\n\r\n        // JDK 8\r\n        System.out.println(\"\\n\\nStarting with JDK 8:\");\r\n        // returns Z, which is +00:00\r\n        ZoneOffset zoneOffsetUTC = ZoneOffset.UTC;\r\n        System.out.println(\"ZoneOffset UTC: \" + zoneOffsetUTC);\r\n        // getting the system default time zone\r\n        ZoneId defaultZoneId = ZoneOffset.systemDefault();\r\n        System.out.println(\"Default zone id: \" + defaultZoneId);\r\n\r\n        // by default it deals with the Daylight Saving Times\r\n        LocalDateTime ldt = LocalDateTime.of(2019, 3, 15, 0, 0);\r\n        ZoneId zoneId = ZoneId.of(\"Europe/Bucharest\");\r\n        ZoneOffset zoneOffset = zoneId.getRules().getOffset(ldt);\r\n        System.out.println(\"\\nZoneOffset from LocalDateTime (Europe/Bucharest): \" + zoneOffset);\r\n\r\n        ZoneOffset zoneOffsetFromString = ZoneOffset.of(\"+02:00\");\r\n        System.out.println(\"\\nZoneOffset from String: \" + zoneOffsetFromString);\r\n        // for example, use it to define an OffsetDateTime or an OffsetTime        \r\n        OffsetTime offsetTime = OffsetTime.now(zoneOffsetFromString);\r\n        OffsetDateTime offsetDateTime = OffsetDateTime.now(zoneOffsetFromString);\r\n        System.out.println(\"OffsetTime from ZoneOffset of current date: \" + offsetTime);\r\n        System.out.println(\"OffsetDateTime from ZoneOffset of current date: \" + offsetDateTime);\r\n\r\n        ZoneOffset zoneOffsetFromHoursMinutes = ZoneOffset.ofHoursMinutes(8, 30);\r\n        System.out.println(\"\\nZoneOffset from hours and minutes: \" + zoneOffsetFromHoursMinutes);\r\n\r\n        ZoneOffset zoneOffsetFromOdt = offsetDateTime.getOffset();\r\n        System.out.println(\"ZoneOffset from OffsetDateTime: \" + zoneOffsetFromOdt);\r\n    }\r\n\r\n    private static String formatOffset(int offset) {\r\n\r\n        if (offset == 0) {\r\n            return \"+00:00\";\r\n        }\r\n\r\n        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);\r\n        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);\r\n        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);\r\n\r\n        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);\r\n\r\n        return String.format(\"%+03d:%02d\", offsetInHours, offsetInMinutes);\r\n    }\r\n} \r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-44.php"}, {"exercise_number": 45, "exercise_content": "45. Write a Java program to print yyyy-MM-dd, HH:mm:ss, yyyy-MM-dd HH:mm:ss, E MMM yyyy HH:mm:ss.SSSZ and HH:mm:ss,Z, format pattern for date and time.", "exercise_solution_code": "import java.text.SimpleDateFormat;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalTime;\r\nimport java.time.OffsetDateTime;\r\nimport java.time.ZonedDateTime;\r\nimport java.time.OffsetTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.Date;\r\npublic class Main {\r\npublic static void main(String[] args) {\r\n              String result;\r\n       //yyyy-MM-dd   \r\n       LocalDate localDate = LocalDate.now();\r\n       DateTimeFormatter formatterLocalDate = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\r\n       result = formatterLocalDate.format(localDate);\r\n       System.out.println(\"\\nyyyy-MM-dd: \" + result);       \r\n       // HH:mm:ss\r\n       LocalTime localTime = LocalTime.now();\r\n       DateTimeFormatter formatterLocalTime = DateTimeFormatter.ofPattern(\"HH:mm:ss\");\r\n       result = formatterLocalTime.format(localTime);\r\n                       System.out.println(\"\\nHH:mm:ss: \" + result);\r\n       // yyyy-MM-dd HH:mm:ss\r\n       LocalDateTime localDateTime = LocalDateTime.now();\r\n       DateTimeFormatter formatterLocalDateTime =\r\n               DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\r\n       result = formatterLocalDateTime.format(localDateTime);\r\n                       System.out.println(\"\\nyyyy-MM-dd HH:mm:ss: \" + result);\r\n       // E MMM yyyy HH:mm:ss.SSSZ\r\n       ZonedDateTime zonedDateTime = ZonedDateTime.now();\r\n       DateTimeFormatter formatterZonedDateTime =\r\n               DateTimeFormatter.ofPattern(\"E MMM yyyy HH:mm:ss.SSSZ\");\r\n       result = formatterZonedDateTime.format(zonedDateTime);\r\n                       System.out.println(\"\\nE MMM yyyy HH:mm:ss.SSSZ: \" + result);\r\n       // HH:mm:ss,Z\r\n       OffsetTime offsetTime = OffsetTime.now();\r\n       DateTimeFormatter formatterOffsetTime =\r\n               DateTimeFormatter.ofPattern(\"HH:mm:ss,Z\");\r\n       result = formatterOffsetTime.format(offsetTime);\r\n                       System.out.println(\"\\nHH:mm:ss,Z: \" + result);       \r\n      }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-45.php"}, {"exercise_number": 46, "exercise_content": "46. Write a Java program to count the number of days between two given years.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class test {\r\n public static void main(String[] args) {\r\n   System.out.println(\"Input start year:\");\r\n   Scanner s = new Scanner(System.in);\r\n   int fy = s.nextInt();\r\n   System.out.println(\"\\nInput end year:\");\r\n   s = new Scanner(System.in);\r\n   int ly = s.nextInt();\r\n   if (ly > fy) {\r\n     for (int i = fy; i <= ly; i++) {\r\n       System.out.println(\"Year: \" + i + \" = \" + number_of_days(i));\r\n     }\r\n   } else {\r\n     System.out.println(\"End year must be greater than first year!\");\r\n   }\r\n }\r\n public static int number_of_days(int year) {\r\n   if (is_Leap_Year(year)) return 366;\r\n   else return 365;\r\n }\r\n public static boolean is_Leap_Year(int year) {\r\n   return (year % 4 == 0 && year % 100 != 0) || year % 400 == 0;\r\n }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/datetime/java-datetime-exercise-46.php"}], "Method": [{"exercise_number": 1, "exercise_content": "1. Write a Java method to find the smallest number among three numbers. \nTest Data:\nInput the first number: 25\nInput the Second number: 37\nInput the third number: 29 \nExpected Output:The smallest value is 25.0", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise1 {\r\n\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number: \");\r\n        double x = in.nextDouble();\r\n        System.out.print(\"Input the Second number: \");\r\n        double y = in.nextDouble();\r\n        System.out.print(\"Input the third number: \");\r\n        double z = in.nextDouble();\r\n        System.out.print(\"The smallest value is \" + smallest(x, y, z)+\"\\n\" );\r\n    }\r\n\r\n   public static double smallest(double x, double y, double z)\r\n    {\r\n        return Math.min(Math.min(x, y), z);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java method to compute the average of three numbers. \nTest Data:\nInput the first number: 25 \nInput the second number: 45\nInput the third number: 65\nExpected Output:The average value is 45.0", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise2 {\r\n\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number: \");\r\n        double x = in.nextDouble();\r\n        System.out.print(\"Input the second number: \");\r\n        double y = in.nextDouble();\r\n        System.out.print(\"Input the third number: \");\r\n        double z = in.nextDouble();\r\n        System.out.print(\"The average value is \" + average(x, y, z)+\"\\n\" );\r\n    }\r\n\r\n  public static double average(double x, double y, double z)\r\n    {\r\n        return (x + y + z) / 3;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java method to display the middle character of a string. \nNote: a) If the length of the string is odd there will be two middle characters.\nb) If the length of the string is even there will be one middle character.\nTest Data:\nInput a string: 350 \nExpected Output:The middle character in the string: 5", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise3 {\r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a string: \");\r\n        String str = in.nextLine();\r\n        System.out.print(\"The middle character in the string: \" + middle(str)+\"\\n\");\r\n    }\r\n public static String middle(String str)\r\n    {\r\n        int position;\r\n        int length;\r\n        if (str.length() % 2 == 0)\r\n        {\r\n            position = str.length() / 2 - 1;\r\n            length = 2;\r\n        }\r\n        else\r\n        {\r\n            position = str.length() / 2;\r\n            length = 1;\r\n        }\r\n        return str.substring(position, position + length);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java method to count all vowels in a string. \nTest Data:\nInput the string: w3resource \nExpected Output:Number of  Vowels in the string: 4", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise4 {\r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the string: \");\r\n        String str = in.nextLine();\r\n\r\n        System.out.print(\"Number of  Vowels in the string: \" + count_Vowels(str)+\"\\n\");\r\n    }\r\n public static int count_Vowels(String str)\r\n    {\r\n        int count = 0;\r\n        for (int i = 0; i < str.length(); i++)\r\n        {\r\n            if (str.charAt(i) == 'a' || str.charAt(i) == 'e' || str.charAt(i) == 'i'\r\n                    || str.charAt(i) == 'o' || str.charAt(i) == 'u')\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java method to count all words in a string. \nTest Data:\nInput the string: The quick brown fox jumps over the lazy\ndog.\nExpected Output:Number of words in the string: 9", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise5 {\r\n\r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the string: \");\r\n        String str = in.nextLine();\r\n\r\n        System.out.print(\"Number of words in the string: \" + count_Words(str)+\"\\n\");\r\n    }\r\n\r\n public static int count_Words(String str)\r\n    {\r\n       int count = 0;\r\n        if (!(\" \".equals(str.substring(0, 1))) || !(\" \".equals(str.substring(str.length() - 1))))\r\n        {\r\n            for (int i = 0; i < str.length(); i++)\r\n            {\r\n                if (str.charAt(i) == ' ')\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n            count = count + 1; \r\n        }\r\n        return count; // returns 0 if string starts or ends with space \" \".\r\n    }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java method to compute the sum of the digits in an integer. \nTest Data:\nInput an integer: 25\nExpected Output:The sum is 7", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise6 {\r\n\r\n  public static void main(String[] args)\r\n    {\r\n      Scanner in = new Scanner(System.in);\r\n      System.out.print(\"Input an integer: \");\r\n      int digits = in.nextInt();\r\n\t  System.out.println(\"The sum is \" + sumDigits(digits));\r\n    }\r\n\r\n public static int sumDigits(long n) {\r\n\t\tint result = 0;\r\n\t\t\r\n\t\twhile(n > 0) {\r\n\t\t\tresult += n % 10;\r\n\t\t\tn /= 10;\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java method to display the first 50 pentagonal numbers. \nNote: A pentagonal number is a figurate number that extends the concept of triangular and square numbers to the pentagon, but, unlike the first two, the patterns involved in the construction of pentagonal numbers are not rotationally symmetrical.\nExpected Output:1     5     12    22    35    51    70    92    117   145\r\n176   210   247   287   330   376   425   477   532   590\r\n651   715   782   852   925   1001  1080  1162  1247  1335\r\n1426  1520  1617  1717  1820  1926  2035  2147  2262  2380\r\n2501  2625  2752  2882  3015  3151  3290  3432  3577  3725", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise7 {\r\npublic static void main(String[] args) {\r\n   \t\tint count = 1;\r\n\t\tfor(int i = 1; i <= 50; i++){\r\n\t\t\tSystem.out.printf(\"%-6d\",getPentagonalNumber(i));\r\n\t\t\tif(count % 10 == 0) System.out.println();\r\n\t\t\tcount++;\r\n\t\t}\r\n    }\r\n  public static int getPentagonalNumber(int i) {\r\n\t\treturn (i * (3 * i - 1))/2;\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java method to compute the future investment value at a given interest rate for a specified number of years. \nSample data (Monthly compounded) and Output:\nInput the investment amount: 1000\nInput the rate of interest: 10\nInput number of years: 5Expected Output:Years    FutureValue                                     \r\n1            1104.71                                     \r\n2            1220.39                                     \r\n3            1348.18                                     \r\n4            1489.35                                     \r\n5            1645.31", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise8 {\r\n \r\n public static void main(String[] args) {\r\n    Scanner in = new Scanner(System.in); \r\n    System.out.print(\"Input the investment amount: \");\r\n \tdouble investment = in.nextDouble();\r\n \tSystem.out.print(\"Input the rate of interest: \");\r\n\tdouble rate = in.nextDouble();\r\n\tSystem.out.print(\"Input number of years: \");\r\n\tint year = in.nextInt();\r\n\t\r\n\trate *= 0.01;\r\n\t\r\n\tSystem.out.println(\"Years    FutureValue\");\r\n\tfor(int i = 1; i <= year; i++) {\r\n    \tint formatter = 19;\r\n\t    if (i >= 10) formatter = 18;\r\n\t\tSystem.out.printf(i + \"%\"+formatter+\".2f\\n\", futureInvestmentValue(investment, rate/12, i));\r\n       }\r\n\t }\r\n \r\n public static double futureInvestmentValue(double investmentAmount, double monthlyInterestRate, int years) {\r\n\t\treturn investmentAmount * Math.pow(1 + monthlyInterestRate, years * 12);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java method to print characters between two characters (i.e. A to P ). \nNote: Prints 20 characters per lineExpected Output:( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ;                  \r\n< = > ? @ A B C D E F G H I J K L M N O                  \r\nP Q R S T U V W X Y Z [ \\ ] ^ _ ` a b c                  \r\nd e f g h i j k l m n o p q r s t u v w                  \r\nx y z", "exercise_solution_code": "public class Exercise9 {\r\n   public static void main(String[] args) {\r\n        print_Chars('(', 'z', 20);\r\n    }\r\n public static void print_Chars(char char1, char char2, int n) {\r\n        for (int ctr = 1; char1 <= char2; ctr++, char1++) {\r\n            System.out.print(char1 + \" \");\r\n            if (ctr % n == 0) System.out.println(\"\");\r\n        }\r\n\t\tSystem.out.print(\"\\n\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java method to check whether a year (integer) entered by the user is a leap year or not.Expected Output:Input a year: 2017                                                                        \r\nfalse", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise10 {\r\n \r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a year: \");\r\n        int year = in.nextInt();\r\n\r\n        System.out.println(is_LeapYear(year));\r\n    }\r\n \r\n public static boolean is_LeapYear(int y)\r\n    {\r\n        boolean a = (y % 4) == 0;\r\n        boolean b = (y % 100) != 0;\r\n        boolean c = ((y % 100 == 0) && (y % 400 == 0));\r\n\r\n        return a && (b || c);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java method to check whether a string is a valid password. \nPassword rules:\nA password must have at least ten characters.\nA password consists of only letters and digits.\nA password must contain at least two digits.Expected Output:1. A password must have at least eight characters.                                             \r\n2. A password consists of only letters and digits.                                         \r\n3. A password must contain at least two digits                                        \r\nInput a password (You are agreeing to the above Terms and Conditions.): abcd1234           \r\nPassword is valid: abcd1234", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise11 {\r\n    \r\npublic static final int PASSWORD_LENGTH = 8;\r\n\r\npublic static void main(String[] args) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.print(\r\n                \"1. A password must have at least eight characters.\\n\" +\r\n                \"2. A password consists of only letters and digits.\\n\" +\r\n                \"3. A password must contain at least two digits \\n\" +\r\n                \"Input a password (You are agreeing to the above Terms and Conditions.): \");\r\n        String s = input.nextLine();\r\n\r\n        if (is_Valid_Password(s)) {\r\n            System.out.println(\"Password is valid: \" + s);\r\n        } else {\r\n            System.out.println(\"Not a valid password: \" + s);\r\n        }\r\n\r\n    }\r\n\r\n    public static boolean is_Valid_Password(String password) {\r\n\r\n        if (password.length() < PASSWORD_LENGTH) return false;\r\n\r\n        int charCount = 0;\r\n        int numCount = 0;\r\n        for (int i = 0; i < password.length(); i++) {\r\n\r\n            char ch = password.charAt(i);\r\n\r\n            if (is_Numeric(ch)) numCount++;\r\n            else if (is_Letter(ch)) charCount++;\r\n            else return false;\r\n        }\r\n\r\n\r\n        return (charCount >= 2 && numCount >= 2);\r\n    }\r\n\r\n    public static boolean is_Letter(char ch) {\r\n        ch = Character.toUpperCase(ch);\r\n        return (ch >= 'A' && ch <= 'Z');\r\n    }\r\n\r\n\r\n    public static boolean is_Numeric(char ch) {\r\n\r\n        return (ch >= '0' && ch <= '9');\r\n    }\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java method (takes a number n as input) to displays an n-by-n matrix.Expected Output:Input a number: 10                                                                         \r\n1 0 0 1 1 0 0 0 1 1                                                                       \r\n0 0 1 0 1 0 1 0 0 0                                                                        \r\n0 1 0 1 0 0 0 0 0 1                                                                       \r\n1 1 1 0 0 0 0 1 1 1                                                                        \r\n1 1 0 1 1 1 0 1 0 0                                                                      \r\n1 0 0 0 1 1 0 0 0 0                                                                       \r\n0 0 1 0 0 0 0 1 1 1                                                                      \r\n1 1 0 1 0 1 0 0 1 0                                                                       \r\n0 0 1 0 0 0 0 1 1 0                                                        \r\n1 1 1 0 0 1 1 1 1 0", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Exercise12 {\r\n \r\npublic static void main(String[] args)\r\n    {\r\n        \r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a number: \");\r\n        int n = in.nextInt();\r\n        printMatrix(n);\r\n    }\r\n \r\n public static void printMatrix(int n) {\r\n\r\n        for(int i = 0; i < n; i++) {\r\n            for(int j = 0; j < n; j++) {\r\n                System.out.print((int)(Math.random() * 2) + \" \");\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write Java methods to calculate the area of a triangle.Expected Output:Input Side-1: 10                                                                               \r\nInput Side-2: 15                                                                               \r\nInput Side-3: 20                                                                              \r\nThe area of the triangle is 72.6184377413890", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise13 {\r\n  public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n         System.out.print(\"Input Side-1: \");\r\n         double side1 = in.nextDouble();\r\n         System.out.print(\"Input Side-2: \");\r\n         double side2 = in.nextDouble();\r\n         System.out.print(\"Input Side-3: \");\r\n         double side3 = in.nextDouble();\r\n         System.out.println( is_Valid(side1, side2,side3) ?\r\n                \"The area of the triangle is \" + area_triangle(side1, side2, side3) : \"Invalid triangle\" );\r\n    }\r\n\r\n  public static boolean is_Valid(double side1, double side2, double side3) {\r\n        if( side1 + side2 > side3 &&\r\n                side2 + side3 > side1 &&\r\n                side1 + side3 > side2) return true;\r\n        else return false;\r\n    }\r\n   public static double area_triangle(double side1, double side2, double side3) {\r\n        double area = 0;\r\n        double s = (side1 + side2 + side3)/2;\r\n        area = Math.sqrt(s*(s - side1)*(s - side2)*(s - side3));\r\n        return area;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java method to create the area of a pentagon.Expected Output:Input the number of sides: 5                             \r\nInput the side: 6                                        \r\nThe area of the pentagon is 61.93718642120281", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise14 {\r\n \r\n  public static void main(String[] args) {\r\n\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.print(\"Input the number of sides: \");\r\n        int n = input.nextInt();\r\n        System.out.print(\"Input the side: \");\r\n        double side = input.nextDouble();\r\n\r\n        System.out.println(\"The area of the pentagon is \" + pentagon_area(n, side));\r\n    }\r\n\r\n    public static double pentagon_area(int n, double s) {\r\n        return  (n * s * s) / (4 * Math.tan(Math.PI/n));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java method to display the current date and time.Expected Output:Current date and time: Wednesday January 25, 2017 7:47:43", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise15 {\r\n \r\n public static void main(String[] args) {\r\n\r\n        // Obtain the total milliseconds since midnight, Jan 1, 1970\r\n        long totalMilliseconds = System.currentTimeMillis();\r\n\r\n        // Obtain the total seconds since midnight, Jan 1, 1970\r\n        long totalSeconds = totalMilliseconds / 1000;\r\n\r\n        // Compute the current second in the minute in the hour\r\n        long currentSecond = (int)(totalSeconds % 60);\r\n\r\n        // Obtain the total minutes\r\n        long totalMinutes = totalSeconds / 60;\r\n\r\n        // Compute the current minute in the hour\r\n        long currentMinute = (int)(totalMinutes % 60);\r\n\r\n        // Obtain the total hours\r\n        long totalHours = totalMinutes / 60;\r\n\r\n        // Compute the current hour\r\n        long currentHour = (int)(totalHours % 24);\r\n\r\n        long totalDays = totalHours / 24;\r\n\r\n        // current year\r\n        int currentYear = (int)(totalDays / 365) + 1970;\r\n\r\n\r\n        long daysInCurrentYear = (totalDays - numberOfLeapYearsSince1970(currentYear)) % 365;\r\n        if (currentHour > 0) daysInCurrentYear++; // add today\r\n\r\n        // get current month number\r\n        int currentMonthNum = getMonthFromDays(currentYear, (int) daysInCurrentYear);\r\n\r\n        // getting current month name\r\n        String month = getMonthName(currentMonthNum);\r\n\r\n        // getting day of current month\r\n        int daysTillCurrentMonth = getNumOfDaysToReachThatMonth(currentYear, currentMonthNum);\r\n\r\n        int startDay = getStartDay(currentYear, currentMonthNum);\r\n        int today = (int) daysInCurrentYear - daysTillCurrentMonth;\r\n        String dayOfWeek = dayNameOfWeek( ((startDay + today) % 7));\r\n\r\n        // Display results\r\n        System.out.println(\"Current date and time: \" + dayOfWeek + \" \" + month + \" \" + today +\", \" + currentYear\r\n        +\" \" + currentHour + \":\"\r\n                + currentMinute + \":\" + currentSecond );\r\n\r\n    }\r\n\r\n    public static String dayNameOfWeek(int dayOfWeek) {\r\n\r\n        switch (dayOfWeek) {\r\n            case 2: return \"Monday\";\r\n            case 3: return \"Tuesday\";\r\n            case 4: return \"Wednesday\";\r\n            case 5: return \"Thursday\";\r\n            case 6: return \"Friday\";\r\n            case 7: return \"Saturday\";\r\n            case 1: return \"Sunday\";\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    public static int numberOfLeapYearsSince1970(long year) {\r\n\r\n        int count = 0;\r\n        for (int i = 1970; i <= year; i++) {\r\n            if (isLeapYear(i))count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n\r\n    public static int getMonthFromDays(int year, int days) {\r\n        int dayTracker = 0;\r\n        for (int i = 1; i <= 12; i++) {\r\n\r\n            dayTracker += getNumberOfDaysInMonth(year, i);\r\n\r\n            if (dayTracker > days) return i;\r\n        }\r\n        return 12;\r\n    }\r\n\r\n    public static int getNumOfDaysToReachThatMonth(int year, int month) {\r\n        int dayTracker = 0;\r\n        for (int i = 1; i < month; i++) {\r\n\r\n            dayTracker += getNumberOfDaysInMonth(year, i);\r\n\r\n\r\n        }\r\n        return dayTracker;\r\n    }\r\n\r\n    /** Get the start day of month/1/year */\r\n    public static int getStartDay(int year, int month) {\r\n        final int START_DAY_FOR_JAN_1_1800 = 3;\r\n        // Get total number of days from 1/1/1800 to month/1/year\r\n        int totalNumberOfDays = getTotalNumberOfDays(year, month);\r\n\r\n        // Return the start day for month/1/year\r\n        return (totalNumberOfDays + START_DAY_FOR_JAN_1_1800) % 7;\r\n    }\r\n\r\n    /** Get the total number of days since January 1, 1800 */\r\n    public static int getTotalNumberOfDays(int year, int month) {\r\n        int total = 0;\r\n\r\n        // Get the total days from 1800 to 1/1/year\r\n        for (int i = 1800; i < year; i++)\r\n            if (isLeapYear(i))\r\n                total = total + 366;\r\n            else\r\n                total = total + 365;\r\n\r\n        // Add days from Jan to the month prior to the calendar month\r\n        for (int i = 1; i < month; i++)\r\n            total = total + getNumberOfDaysInMonth(year, i);\r\n\r\n        return total;\r\n    }\r\n\r\n    /** Get the number of days in a month */\r\n    public static int getNumberOfDaysInMonth(int year, int month) {\r\n\r\n        if (month == 1 || month == 3 || month == 5 || month == 7 ||\r\n                month == 8 || month == 10 || month == 12)\r\n            return 31;\r\n\r\n        if (month == 4 || month == 6 || month == 9 || month == 11)\r\n            return 30;\r\n\r\n        if (month == 2) return isLeapYear(year) ? 29 : 28;\r\n\r\n        return 0; // If month is incorrect\r\n    }\r\n\r\n    /** Determine if it is a leap year */\r\n    public static boolean isLeapYear(int year) {\r\n        return year % 400 == 0 || (year % 4 == 0 && year % 100 != 0);\r\n    }\r\n\r\n\r\n    /** Get the English name for the month 1-12 */\r\n    public static String getMonthName(int month) {\r\n        String monthName = \"\";\r\n        switch (month) {\r\n            case 1: monthName = \"January\"; break;\r\n            case 2: monthName = \"February\"; break;\r\n            case 3: monthName = \"March\"; break;\r\n            case 4: monthName = \"April\"; break;\r\n            case 5: monthName = \"May\"; break;\r\n            case 6: monthName = \"June\"; break;\r\n            case 7: monthName = \"July\"; break;\r\n            case 8: monthName = \"August\"; break;\r\n            case 9: monthName = \"September\"; break;\r\n            case 10: monthName = \"October\"; break;\r\n            case 11: monthName = \"November\"; break;\r\n            case 12: monthName = \"December\";\r\n        }\r\n\r\n        return monthName;\r\n    }\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java method to find all twin prime numbers less than 100.Expected Output:(3, 5)                                                   \r\n(5, 7)                                                   \r\n(11, 13)                                                 \r\n(17, 19)                                                 \r\n(29, 31)                                                 \r\n(41, 43)                                                 \r\n(59, 61)                                                 \r\n(71, 73)", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise16 {\r\n \r\n public static void main(String[] args) {\r\n\r\n        for (int i = 2; i < 100; i++) {\r\n\r\n            if (is_Prime(i) && is_Prime(i + 2)) {\r\n                System.out.printf(\"(%d, %d)\\n\", i, i + 2);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static boolean is_Prime(long n) {\r\n\r\n        if (n < 2) return false;\r\n\r\n        for (int i = 2; i <= n / 2; i++) {\r\n\r\n            if (n % i == 0) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java method to count the number of digits in an integer that have the value 2. The integer may be assumed to be non-negative.Expected Output:Input a number:  12541\r\n1", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main {\r\n public static void main(String[] args)\r\n   {\r\n       Scanner in = new Scanner(System.in);\r\n       System.out.print(\"Input a number: \");\r\n       int n = in.nextInt();\r\n       if (n>0)\r\n       {\r\n       System.out.println(test(n));\r\n       }\r\n   }\r\n public static int test(int num)\r\n   {\r\n    int ctr = 0;\r\n    int n = num;\r\n    do{\r\n      if (n % 10 == 2){\r\n          ctr ++;\r\n      }\r\n      n /= 10;\r\n     }while(n > 0);\r\n      return ctr;\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java method that accept three integers and check whether they are consecutive are not. Return true or false.Expected Output:Input the first number:  15\r\nInput the second number:  16\r\nInput the third number:  17\r\nCheck whether the three said numbers are consecutive or not!true", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main { \r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number: \");\r\n        int x = in.nextInt();\r\n        System.out.print(\"Input the second number: \");\r\n        int y = in.nextInt();\r\n        System.out.print(\"Input the third number: \");\r\n        int z = in.nextInt();\r\n        System.out.print(\"Check whether the three said numbers are consecutive or not!\");\r\n        System.out.println(test(x,y,z));\r\n        }\r\n\r\n public static boolean test(int x, int y, int z){\r\n    int max_num = Math.max(x, Math.max(y, z));\r\n    int min_num = Math.min(x, Math.min(y, z));\r\n    int middle_num = x+y+z - max_num - min_num;\r\n    return (max_num - middle_num) == 1 && (middle_num - min_num == 1);\r\n  }\r\n} \r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java method that accepts three integers and returns true if one of them is the middle point between the other two integers, otherwise false.Expected Output:Input the first number:  2\r\nInput the second number:  4\r\nInput the third number:  6\r\nCheck whether the three said numbers has a midpoint!\r\ntrue", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main { \r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first number: \");\r\n        int x = in.nextInt();\r\n        System.out.print(\"Input the second number: \");\r\n        int y = in.nextInt();\r\n        System.out.print(\"Input the third number: \");\r\n        int z = in.nextInt();\r\n        System.out.print(\"Check whether the three said numbers has a midpoint!\\n\");\r\n        System.out.print(test(x,y,z));\r\n        }\r\n\r\n public static boolean test(int x, int y, int z){\r\n    int max = Math.max(x, Math.max(y,z));\r\n    int min = Math.min(x, Math.min(y,z));\r\n    double mid_point1 = (max + min) / 2.0;\r\n    int mid_point2 = x + y + z - max - min;\r\n    return (mid_point1 == mid_point2);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java method to develop a Java method for extracting the first digit from a positive or negative integer.Expected Output:Input an integer(positive/negative): 1234\r\nExtract the first digit from the said integer:\r\n1", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main { \r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input an integer(positive/negative):\");\r\n        int n = in.nextInt();\r\n        System.out.print(\"Extract the first digit from the said integer:\\n\");\r\n        System.out.print(test(n));\r\n        }\r\n\r\npublic static int test(int n){\r\n       int fact_num = 10;\r\n       while(n / fact_num != 0){\r\n        fact_num *= 10;\r\n    }\r\n    return Math.abs(n / (fact_num/10));\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java method to display the factors of 3 in a given integer.Expected Output:Input an integer(positive/negative): 81\r\n\r\nFactors of 3 of the said integer:\r\n81 = 3 * 3 * 3 * 3 * 1", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main { \r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input an integer(positive/negative):\");\r\n        int n = in.nextInt();\r\n        System.out.print(\"\\nFactors of 3 of the said integer:\\n\");\r\n        test(n);\r\n        }\r\n\r\npublic static void test(int n){\r\n    System.out.print(n + \" = \");\r\n    int result = n;\r\n    while (result % 3 == 0){\r\n        System.out.print(\"3 * \");\r\n        result = result / 3;\r\n    }\r\n    System.out.print(result);\r\n}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java method to check whether every digit of a given integer is even. Return true if every digit is odd otherwise false.Expected Output:Input an integer: 8642\r\nCheck whether every digit of the said integer is even or not!\r\ntrue", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main { \r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input an integer:\");\r\n        int n = in.nextInt();\r\n        System.out.print(\"Check whether every digit of the said integer is even or not!\\n\");\r\n        System.out.print(test(n));\r\n        }\r\n\r\n  public static boolean test(int n){\r\n    final int f = 10;\r\n    if (n == 0){\r\n        return false;\r\n    }\r\n    while(n != 0){\r\n        if((n % f) % 2 != 0){\r\n            return false;\r\n        }\r\n        n /= 10;\r\n    }\r\n     return true;\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java method that checks whether all the characters in a given string are vowels (a, e,i,o,u) or not. Return true if each character of the string is a vowel, otherwise return false.Expected Output:Input a string:  AIEEE\r\nCheck all the characters of the said string are vowels or not!\r\ntrue", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n    Scanner sc = new Scanner(System.in);\r\n    System.out.print(\"Input a string: \");\r\n    String str = sc.nextLine();\r\n    System.out.print(\"Check all the characters of the said string are vowels or not!\\n\");\r\n    System.out.print(test(str));\r\n  }\r\n\r\n  public static boolean test(String input) {\r\n    String str_vowels = \"aeiou\";\r\n    String phrase = input.toLowerCase();\r\n    for (int i = 0; i < phrase.length(); i++) {\r\n      if (str_vowels.indexOf(phrase.charAt(i)) == -1)\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/method/java-method-exercise-23.php"}], "Numbers": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to check whether a given number is an ugly number. \nIn number system, ugly numbers are positive numbers whose only prime factors are 2, 3 or 5. First 10 ugly numbers are 1, 2, 3, 4, 5, 6, 8, 9, 10, 12. By convention, 1 is included. \nTest Date:Input an integer number: 235 \nExpected Output :\nIt is not an ugly number.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Exercise1 {\r\n       public static void main(String[] args){\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input an integer number: \");\r\n        int n = in.nextInt();  \t\t\r\n        if (n <= 0) {\r\n            System.out.print(\"Input a correct number.\");\r\n        }\r\n\t\tint x = 0;\r\n        while (n != 1) {\r\n            if (n % 5 == 0) {\r\n                n /= 5;\r\n            } else if (n % 3 == 0) {\r\n                n /= 3;\r\n            } else if (n % 2 == 0) {\r\n                n /= 2;\r\n            } else {\r\n                System.out.print(\"It is not an ugly number.\");\r\n\t\t\t\tx = 1;\r\n\t\t\t\tbreak;\r\n            }\r\n        }\r\n        if (x==0)\r\n\t\tSystem.out.print(\"It is an ugly number.\");\r\n\t\tSystem.out.print(\"\\n\");\r\n\t    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2.  Write a Java program to classify Abundant, deficient and perfect number (integers) between 1 to 10,000. \nIn number theory, an abundant number is a number for which the sum of its proper divisors is greater than the number itself.\nExample :\nThe first few abundant numbers are:\n12, 18, 20, 24, 30, 36, 40, 42, 48, 54, 56, 60, 66, 70, 72, 78, 80, 84, 88, 90, 96, 100, 102,\u2026\nThe integer 12 is the first abundant number. Its proper divisors are 1, 2, 3, 4 and 6 for a total of 16.\nDeficient number: In number theory, a deficient number is a number n for which the sum of divisors \u03c3(n)<2n, or, equivalently, the sum of proper divisors (or aliquot sum) s(n)<n. The value 2n \u2212 \u03c3(n) (or n \u2212 s(n)) is called the number's deficiency.\nAs an example, divisors of 21 are 1, 3 and 7, and their sum is 11. Because 11 is less than 21, the number 21 is deficient. Its deficiency is 2 \u00d7 21 \u2212 32 = 10.\nThe first few deficient numbers are:\n1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 29, 31, 32, 33, \u2026\u2026.\nPerfect number: In number system, a perfect number is a positive integer that is equal to the sum of its proper positive divisors, that is, the sum of its positive divisors excluding the number itself.\nEquivalently, a perfect number is a number that is half the sum of all of its positive divisors (including itself) i.e. \u03c31(n) = 2n.\nThe first perfect number is 6. Its proper divisors are 1, 2, and 3, and 1 + 2 + 3 = 6. Equivalently, the number 6 is equal to half the sum of all its positive divisors: ( 1 + 2 + 3 + 6 ) / 2 = 6. The next perfect number is 28 = 1 + 2 + 4 + 7 + 14. This is followed by the perfect numbers 496 and 8128.\nExpected Output :\nNumber Counting [(integers) between 1 to 10,000]:\nDeficient number: 7508\nPerfect number: 4 \nAbundant number: 2488", "exercise_solution_code": "import static java.util.stream.LongStream.rangeClosed;\r\npublic class Exercise2 {\r\n    \r\n   public static void main(String[] args) {\r\n        int count_Deficient_no = 0;\r\n        int count_Perfect_no = 0;\r\n        int count_Abundant_no = 0;\r\n \r\n        for (long i = 1; i <= 10_000L; i++) {\r\n            long sum = proper_Divs_Sum(i);\r\n            if (sum < i)\r\n                count_Deficient_no++;\r\n            else if (sum == i)\r\n                count_Perfect_no++;\r\n            else\r\n                count_Abundant_no++;\r\n        }\r\n        System.out.println(\"Number Counting [(integers) between 1 to 10,000]: \");\r\n        System.out.println(\"Deficient number: \" + count_Deficient_no);\r\n        System.out.println(\"Perfect number: \" + count_Perfect_no);\r\n        System.out.println(\"Abundant number: \" + count_Abundant_no);\r\n    }\r\n     public static Long proper_Divs_Sum(long num) {\r\n        return rangeClosed(1, (num + 1) / 2).filter(i -> num % i == 0 && num != i).sum();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to generate random integers in a specific range.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example3  {\r\n\r\n      public static void main( String args[] ){ \r\n\t    Scanner sc = new Scanner( System.in ); \r\n        System.out.print(\"Input the starting number of the range: \"); \r\n        int rsnum = sc.nextInt(); \r\n        System.out.print(\"Input the ending number of the range: \"); \r\n        int renum = sc.nextInt(); \r\n\t    int random_num = rsnum + (int)(Math.random() * ((renum - rsnum) + 1));\r\n\t    System.out.println(random_num);\r\n     }  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to generate and show all Kaprekar numbers less than 1000. \nExpected Output :1       1         0 + 1                                  \r\n9       81        8 + 1                                  \r\n45      2025      20 + 25                                \r\n55      3025      30 + 25                                \r\n99      9801      98 + 01                                \r\n297     88209     88 + 209                               \r\n703     494209    494 + 209                              \r\n999     998001    998 + 001                              \r\n8 Kaprekar numbers.", "exercise_solution_code": " public class Example4 {\r\n      public static void main(String[] args){\r\n        int ctr = 0;\r\n        int base = (args.length > 0) ? Integer.parseInt(args[0]) : 10;\r\n        for(long n = 1; n <= 1000; n++){\r\n            String sqr_Str = Long.toString(n * n, base);\r\n            for(int j = 0; j < sqr_Str.length() / 2 + 1; j++){\r\n                String[] parts = split_num(sqr_Str, j);\r\n                long first_Num = Long.parseLong(parts[0], base);\r\n                long sec_Num = Long.parseLong(parts[1], base);\r\n                if(sec_Num == 0) break;\r\n                if(first_Num + sec_Num == n){\r\n                    System.out.println(Long.toString(n, base) +\r\n                            \"\\t\" + sqr_Str + \"\\t  \" + parts[0] + \" + \" + parts[1]);\r\n                    ctr++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        System.out.println(ctr + \" Kaprekar numbers.\");\r\n    }\r\n     private static String[] split_num(String str, int idx){\r\n        String[] ans1 = new String[2];\r\n        ans1[0] = str.substring(0, idx);\r\n        if(ans1[0].equals(\"\")) ans1[0] = \"0\"; \r\n        ans1[1] = str.substring(idx);\r\n        return ans1;\r\n    }\t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to find the number of seed Lychrel number candidates and related numbers for n in the range 1..10000 inclusive. (With that iteration limit of 500). \nA Lychrel number is a natural number that cannot form a palindrome through the iterative process of repeatedly reversing its digits and adding the resulting numbers. This process is sometimes called the 196-algorithm, after the most famous number associated with the process.\nThe first few Lychrel numbers are 196, 295, 394, 493, 592, 689, 691, 788, 790, 879, 887, ... .\nExpected Output :\n5 Lychrel seeds: [196, 879, 1997, 7059, 9999] \n244 Lychrel related \n5 Lychrel palindromes: [196, 879, 1997, 7059, 9999]", "exercise_solution_code": "// https://rosettacode.org/\r\nimport java.math.BigInteger;\r\nimport java.util.*;\r\n public class Example5 {\r\n     static Map<BigInteger, Tuple> cache = new HashMap<>();\r\n     static class Tuple {\r\n        final Boolean flag;\r\n        final BigInteger bi;\r\n \r\n        Tuple(boolean f, BigInteger b) {\r\n            flag = f;\r\n            bi = b;\r\n        }\r\n    }\r\n     static BigInteger rev(BigInteger bi) {\r\n        String s = new StringBuilder(bi.toString()).reverse().toString();\r\n        return new BigInteger(s);\r\n    }\r\n     static Tuple lychrel(BigInteger n) {\r\n        Tuple res;\r\n        if ((res = cache.get(n)) != null)\r\n            return res;\r\n \r\n        BigInteger r = rev(n);\r\n        res = new Tuple(true, n);\r\n        List<BigInteger> seen = new ArrayList<>();\r\n         for (int i = 0; i < 500; i++) {\r\n            n = n.add(r);\r\n            r = rev(n);\r\n \r\n            if (n.equals(r)) {\r\n                res = new Tuple(false, BigInteger.ZERO);\r\n                break;\r\n            }\r\n             if (cache.containsKey(n)) {\r\n                res = cache.get(n);\r\n                break;\r\n            }\r\n             seen.add(n);\r\n        }\r\n         for (BigInteger bi : seen)\r\n            cache.put(bi, res);\r\n         return res;\r\n    }\r\n     public static void main(String[] args) {\r\n         List<BigInteger> seeds = new ArrayList<>();\r\n        List<BigInteger> related = new ArrayList<>();\r\n        List<BigInteger> palin = new ArrayList<>();\r\n \r\n        for (int i = 1; i <= 10_000; i++) {\r\n            BigInteger n = BigInteger.valueOf(i);\r\n             Tuple t = lychrel(n);\r\n             if (!t.flag)\r\n                continue;\r\n             if (n.equals(t.bi))\r\n                seeds.add(t.bi);\r\n            else\r\n                related.add(t.bi);\r\n \r\n            if (n.equals(t.bi))\r\n                palin.add(t.bi);\r\n        }\r\n         System.out.printf(\"%d Lychrel seeds: %s%n\", seeds.size(), seeds);\r\n        System.out.printf(\"%d Lychrel related%n\", related.size());\r\n        System.out.printf(\"%d Lychrel palindromes: %s%n\", palin.size(), palin);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to generate and show the first 15 narcissistic decimal numbers. \nExpected Output :0 1 2 3 4 5 6 7 8 9 153 370 371 407 1634", "exercise_solution_code": "// https://rosettacode.org/\r\npublic class Example6 {\r\n\tpublic static void main(String[] args){\r\n\t\tfor(long n = 0, ctr = 0; ctr < 15; n++){\r\n\t\t\tif(is_narc_dec_num(n)){\r\n\t\t\t\tSystem.out.print(n + \" \");\r\n\t\t\t\tctr++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println();\r\n\t}\r\n    public static boolean is_narc_dec_num(long n){\r\n\t\tif(n < 0) return false;\r\n \r\n\t\tString str1 = Long.toString(n);\r\n\t\tint x = str1.length();\r\n\t\tlong sum_num = 0;\r\n \r\n\t\tfor(char c : str1.toCharArray()){\r\n\t\t\tsum_num += Math.pow(Character.digit(c, 10), x);\r\n\t\t}\r\n\t\treturn sum_num == n;\r\n\t}\r\n \t\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to display first 10 lucus numbers. \nThe Lucas numbers or series are an integer sequence named after the mathematician Fran\u00e7ois \u00c9douard Anatole Lucas, who studied both that sequence and the closely related Fibonacci numbers. Lucas numbers and Fibonacci numbers form complementary instances of Lucas sequences.\nThe sequence of Lucas numbers is: 2, 1, 3, 4, 7, 11, 18, 29, \u2026.\nExpected Output :First ten Lucas a numbers:                                              \r\n2                                                                       \r\n1                                                                       \r\n3                                                                       \r\n4                                                                       \r\n7                                                                       \r\n11                                                                      \r\n18                                                                      \r\n29                                                                      \r\n47                                                                      \r\n76", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example7 {\r\n   public static void main(String[] args) { \r\n\r\n     System.out.print(\"\\nFirst ten Lucas a numbers: \"); \r\n     int n = 10;\r\n     int n1 = 2, n2 = 1, n3;\r\n        if (n > 1){\r\n            System.out.println(\"\\n2\\n1\");\r\n            for(int i = 2; i < n; ++i){\r\n                n3 = n2;\r\n                n2 += n1;\r\n                n1 = n3;\r\n                System.out.println(n2);\r\n            }\r\n        }\r\n        else if (n == 1)\r\n            System.out.println(\"\\n2\");\r\n\r\n        else\r\n            System.out.println(\"Input a positive number.\");\r\n    }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8.Write a Java program to print out the first 10 Catalan numbers by extracting them from Pascal's triangle. \nIn combinatorial mathematics, the Catalan numbers form a sequence of natural numbers that occur in various counting problems, often involving recursively-defined objects. They are named after the Belgian mathematician Eug\u00e8ne Charles Catalan.\nThe first Catalan numbers for n = 0, 1, 2, 3, \u2026 are 1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796, 58786, 208012, 742900, 2674440, 9694845, 35357670, 129644790, 477638700, 1767263190, 6564120420, 24466267020, 91482563640, 343059613650, 1289904147324, 4861946401452,List 10 Catalan numbers:-                                               \r\n                                                                        \r\n1                                                                       \r\n2                                                                       \r\n5                                                                       \r\n14                                                                      \r\n42                                                                      \r\n132                                                                     \r\n429                                                                     \r\n1430                                                                    \r\n4862                                                                    \r\n16796", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example8 {\r\n   public static void main(String[] args) {\r\n        int num = 10;\r\n        int[] t = new int[num + 2];\r\n        t[1] = 1;\r\n        System.out.printf(\"\\nList 10 Catalan numbers:-\\n\"); \r\n        for (int i = 1; i <= num; i++) {\r\n \r\n            for (int j = i; j > 1; j--)\r\n                t[j] = t[j] + t[j - 1];\r\n \r\n            t[i + 1] = t[i];\r\n            \r\n            for (int j = i + 1; j > 1; j--)\r\n                t[j] = t[j] + t[j - 1];\r\n             System.out.printf(\"\\n%d \", t[i + 1] - t[i]);\r\n        }\r\n\t\tSystem.out.printf(\"\\n\"); \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to find and print the first 10 happy numbers. \nHappy number: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1, or it loops endlessly in a cycle which does not include 1.\nExample: 19 is a happy number\n12 + 92=82\n82 + 22=68\n62 + 82=100\n12 + 02 + 02=1Expected OutputFirst 10 Happy numbers:                                                 \r\n1                                                                       \r\n7                                                                       \r\n10                                                                      \r\n13                                                                      \r\n19                                                                      \r\n23                                                                      \r\n28                                                                      \r\n31", "exercise_solution_code": "import java.util.HashSet;\r\npublic class Example9 {\r\npublic static void main(String[] args){\r\n\tSystem.out.println(\"First 10 Happy numbers:\");\r\n       for(long num = 1,count = 0;count<8;num++){\r\n           if(happy_num(num)){\r\n               System.out.println(num);\r\n               count++;\r\n           }\r\n       }\r\n}\r\n   public static boolean happy_num(long num){\r\n       long m = 0;\r\n       int digit = 0;\r\n       HashSet<Long> cycle = new HashSet<Long>();\r\n\t   while(num != 1 && cycle.add(num)){\r\n           m = 0;\r\n           while(num > 0){\r\n               digit = (int)(num % 10);\r\n               m += digit*digit;\r\n               num /= 10;\r\n           }\r\n           num = m;\r\n       }\r\n       return num == 1;\r\n   }   \r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to check whether a given number is a happy number or unhappy number. \nHappy number: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1, or it loops endlessly in a cycle which does not include 1.\nAn unhappy number is a number that is not happy.\nThe first few unhappy numbers are 2, 3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20.Expected OutputInput a number: 5                                                       \r\nUnhappy Number", "exercise_solution_code": "import java.util.HashSet;\r\nimport java.util.Scanner;\r\nimport java.util.Set;\r\n\r\npublic class Example10 {\r\n\r\n    public static boolean isHappy_number(int num)\r\n    {\r\n        Set<Integer> unique_num = new HashSet<Integer>();\r\n\r\n        while (unique_num.add(num))\r\n        {\r\n            int value = 0;\r\n            while (num > 0)\r\n            {\r\n                value += Math.pow(num % 10, 2);\r\n                num /= 10;\r\n            }\r\n            num = value;\r\n        }\r\n\r\n        return num == 1;\r\n    }\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        System.out.print(\"Input a number: \");\r\n        int num = new Scanner(System.in).nextInt();\r\n        System.out.println(isHappy_number(num) ? \"Happy Number\" : \"Unhappy Number\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to check whether a given number is a Disarium number or unhappy number. \nA Disarium number is a number defined by the following process :\nSum of its digits powered with their respective position is equal to the original number.\nFor example 175 is a Disarium number :\nAs 11+32+53 = 135\nSome other DISARIUM are 89, 175, 518 etc.\nA number will be called Disarium if the sum of its digits powered with their respective position is equal with the number itself. Sample Input: 135.Expected OutputInput a number : 25                                                     \r\nNot a Disarium Number.", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Example11 {\r\n\r\n    public static void main(String args[])\r\n        {\r\n            Scanner sc = new Scanner(System.in);\r\n            System.out.print(\"Input a number : \");\r\n            int num = sc.nextInt();\r\n            int copy = num, d = 0, sum = 0;\r\n            String s = Integer.toString(num);  \r\n            int len = s.length();  \r\n             \r\n            while(copy>0)\r\n            {\r\n                d = copy % 10;  \r\n                sum = sum + (int)Math.pow(d,len);\r\n                len--;\r\n                copy = copy / 10;\r\n            }\r\n             \r\n            if(sum == num)\r\n                System.out.println(\"Disarium Number.\");\r\n            else\r\n                System.out.println(\"Not a Disarium Number.\");\r\n        }\r\n    }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to check whether a number is a Harshad Number or not. In recreational mathematics, a harshad number in a given number base, is an integer that is divisible by the sum of its digits when written in that base.\nExample: Number 200 is a Harshad Number because the sum of digits 2 and 0 and 0 is 2(2+0+0) and 200 is divisible by 2. Number 171 is a Harshad Number because the sum of digits 1 and 7 and 1 is 9(1+7+1) and 171 is divisible by 9.\nExpected OutputInput a number : 353                                                    \r\n353 is not a Harshad Number.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example12 {\r\n\r\n     public static void main(String args[])\r\n    {\r\n        Scanner sc = new Scanner(System.in);\r\n         \r\n        System.out.print(\"Input a number : \");\r\n        int num = sc.nextInt();\r\n        int x = num, y, sum = 0;\r\n         \r\n       while(x>0)\r\n        {\r\n            y = x%10;\r\n            sum = sum + y;\r\n            x = x/10;\r\n        }\r\n         \r\n        if(num%sum == 0)\r\n            System.out.println(num+\" is a Harshad Number.\");\r\n        else\r\n            System.out.println(num+\" is not a Harshad Number.\");      \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to check whether a number is a Pronic Number or Heteromecic Number or not. \nA pronic number is a number which is the product of two consecutive integers, that is, a number of the form n(n + 1).\nThe first few pronic numbers are:\n0, 2, 6, 12, 20, 30, 42, 56, 72, 90, 110, 132, 156, 182, 210, 240, 272, 306, 342, 380, 420, 462 \u2026 etc.Expected Output\nInput a number : 110 \nPronic Number.", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Example13 {\r\n\r\n    public static void main(String args[])\r\n       {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.print(\"Input a number : \");\r\n        int num = sc.nextInt();\r\n        int ans = 0;\r\n    \r\n        for(int i=0; i<num; i++)\r\n        {\r\n            if(i*(i+1) == num)\r\n            {\r\n                ans = 1;\r\n                break;\r\n            }\r\n        }\r\n         \r\n        if(ans == 1)\r\n            System.out.println(\"Pronic Number.\");\r\n        else\r\n            System.out.println(\"Not a Pronic Number.\");      \r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program check whether a number is an Automorphic number or not. \nIn mathematics, an automorphic number is a number whose square \"ends\" in the same digits as the number itself. For example, 52 = 25, 62 = 36, 762 = 5776, and 8906252 = 793212890625, so 5, 6, 76 and 890625 are all automorphic numbers.\nExpected OutputInput a number : 76                                                   \r\nAutomorphic Number.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example14 {\r\n\r\n    public static void main(String args[])\r\n       {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.print(\"Input a number : \");\r\n        int num = sc.nextInt();\r\n        int sq_num = num*num;  \r\n \r\n        String str_num = Integer.toString(num);  \r\n        String square = Integer.toString(sq_num);  \r\n \r\n        if(square.endsWith(str_num))  \r\n            System.out.println(\"Automorphic Number.\");\r\n        else\r\n            System.out.println(\"Not an Automorphic Number.\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to check whether a number is a Duck Number or not. Note: A Duck number is a number which has zeroes present in it, but there should be no zero present in the beginning of the number. For example 3210, 7056, 8430709 are all duck numbers whereas 08237, 04309 are not.\nExpected OutputInput a number : 3210                                                   \r\nDuck number", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Example15  {\r\n\r\n    public static void main(String args[])\r\n       {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.print(\"Input a number : \");\r\n        String nstr = sc.nextLine();\r\n \r\n        int l = nstr.length();  \r\n        int ctr = 0;  \r\n        char chr;\r\n \r\n        for(int i=1;i<l;i++)\r\n        {\r\n            chr = nstr.charAt(i); \r\n            if(chr=='0')\r\n                ctr++;\r\n        }\r\n \r\n        char f = nstr.charAt(0); \r\n \r\n        if(ctr>0 && f!='0')\r\n            System.out.println(\"Duck number\");\r\n        else\r\n            System.out.println(\"Not a duck number\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to check two numbers are Amicable numbers or not. Amicable numbers are two different numbers so related that the sum of the proper divisors of each is equal to the other number.\nThe first ten amicable pairs are: (220, 284), (1184, 1210), (2620, 2924), (5020, 5564), (6232, 6368), (10744, 10856), (12285, 14595), (17296, 18416), (63020, 76084), and (66928, 66992).\nExpected OutputInput the first number: 220                                             \r\nInput the second number: 284                                            \r\nThese numbers are amicable.", "exercise_solution_code": "import java.util.Scanner;\r\n\r\npublic class Example16\r\n    {\r\n      public static void main(String args[]) {\r\n            Scanner in = new Scanner(System.in);\r\n            System.out.print(\"Input the first number: \");\r\n            int num1 = in.nextInt();\r\n            System.out.print(\"Input the second number: \");\r\n            int num2 = in.nextInt();\r\n            int sum_num1 = 0, sum_num2 = 0;\r\n            for (int i = 1; i <= num1; i++) {\r\n                if (num1 % i == 0)\r\n                    sum_num1 += i;\r\n            }\r\n            for (int i = 1; i <= num2; i++) {\r\n                if (num2 % i == 0)\r\n                    sum_num2 += i;\r\n            }\r\n            if (sum_num1 == sum_num2)\r\n                System.out.println(\"These numbers are amicable.\");\r\n            else\r\n                System.out.println(\"These numbers are not amicable.\");\r\n\t\t\t\tSystem.out.println(\"\\n\");\t\t\t\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to check if a given number is circular prime or not. Circular Prime : A circular prime is a prime number with the property that the number generated at each intermediate step when cyclically permuting its (base 10) digits will be prime.\nFor example, 1193 is a circular prime, since 1931, 9311 and 3119 all are also prime. A circular prime with at least two digits can only consist of combinations of the digits 1, 3, 7 or 9, because having 0, 2, 4, 6 or 8 as the last digit makes the number divisible by 2, and having 0 or 5 as the last digit makes it divisible by 5.\nInput Data:\nInput a number: 35\nExpected OutputIt is not a Circular Prime number.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example17  {\r\n\r\n       public static void main( String args[] ){ \r\n        int num; \r\n        Scanner sc = new Scanner( System.in ); \r\n        System.out.print(\"Input a number: \"); \r\n        num = sc.nextInt(); \r\n        int num_of_digits = 0, divisor_part=1, circular_num = num; \r\n        boolean allPrime = true; \r\n        for( int i = num; i > 0; i /= 10 ){\r\n            num_of_digits++;\r\n            divisor_part *=10;\r\n        }\r\n        divisor_part /=10;\r\n        do{\r\n            circular_num = circulate_func( circular_num, divisor_part );\r\n            if( !isPrime( circular_num ) ) allPrime=false;\r\n        }while( circular_num != num );\r\n        if( allPrime ) System.out.println(\"It is Circular Prime number.\" );\r\n        else System.out.println(\"It is not a Circular Prime number.\" );\r\n    }\r\n\r\n\r\n\tpublic static boolean isPrime( int n ){\r\n        int factorCount = 0;\r\n        if( n < 2 ) return false;\r\n        else if( n == 2 ) return true;\r\n        else if( n % 2 == 0 ) return false;\r\n        else{\r\n            int num = (int) Math.sqrt( n );\r\n            for( int i = 3 ; i <= num; i+=2 ){\r\n                if( n %i == 0 ){\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    public static int circulate_func( int n, int divisor_part ){\r\n         if( n < 10 ) return n; \r\n         else return ( n % divisor_part ) * 10 + n / divisor_part; \r\n   } \r\n  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to check a number is a cube or not. \nIn arithmetic and algebra, the cube of a number n is its third power: the result of the number multiplied by itself twice:\nn3 = n \u00d7 n \u00d7 n.\nInput Data:\nInput a number: 8 \nExpected OutputNumber is a cube.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example18 {\r\n\r\n      public static void main( String args[] ){ \r\n        Scanner sc = new Scanner( System.in ); \r\n        System.out.print(\"Input a number: \"); \r\n        int num = sc.nextInt(); \r\n       int n = (int) Math.round(Math.pow(num, 1.0/3.0));\r\n        if((num == n * n * n))\r\n\t\t\t{\r\n\t\t\t   System.out.print(\"Number is a cube.\");\r\n            }\r\n\t\t   else\r\n\t\t\t{\r\n\t\t\t\tSystem.out.print(\"Number is not a cube.\");\r\n\t\t\t}\r\n\t\t\t\tSystem.out.println(\"\\n\");\r\n        }\r\n     }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to check a number is a cyclic or not. \nA cyclic number is an integer in which cyclic permutations of the digits are successive multiples of the number. The most widely known are 142857:\n142857 \u00d7 1 = 142857\n142857 \u00d7 2 = 285714\n142857 \u00d7 3 = 428571\n142857 \u00d7 4 = 571428\n142857 \u00d7 5 = 714285\n142857 \u00d7 6 = 857142\nInput Data:\nInput a number: 142857 \nExpected OutputIt is a cyclic number.", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.math.BigInteger;\r\npublic class Example19 {\r\n\r\n      public static void main( String args[] ){ \r\n            Scanner sc = new Scanner( System.in ); \r\n            System.out.print(\"Input a number: \"); \r\n            String strnum = sc.nextLine().trim();\r\n            BigInteger n = new BigInteger(strnum);\r\n            int len = strnum.length()+1;\r\n            String str = String.valueOf(len);\r\n            BigInteger n1 = new BigInteger(str);\r\n            StringBuilder buf = new StringBuilder();\r\n            for(int i = 0 ; i < (len-1); i++) {\r\n                buf.append('9');\r\n            }\r\n            BigInteger total = new BigInteger(buf.toString());\r\n            if(n.multiply(n1).equals(total)) {\r\n                System.out.println(\"It is a cyclic number.\");\r\n            }\r\n            else {\r\n                System.out.println(\"Not a cyclic number.\");\r\n            }                    \r\n        }\r\n    }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program to display first 10 Fermat numbers. \nIn mathematics, a Fermat number is a positive integer of the form\n\n\nwhere n is a nonnegative integer.\nThe first few Fermat numbers are:\n3, 5, 17, 257, 65537, 4294967297, 18446744073709551617, \u2026\nExpected Output3.0                                                                     \r\n5.0                                                                     \r\n17.0                                                                    \r\n257.0                                                                   \r\n65537.0                                                                 \r\n4.294967297E9                                                           \r\n1.8446744073709552E19                                                   \r\n3.4028236692093846E38                                                   \r\n1.157920892373162E77                                                    \r\n1.3407807929942597E154                                                  \r\nInfinity", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example20 {\r\n      \r\npublic static void main( String args[] ){ \r\n        int n = 0;        \r\n        double result;\r\n        \r\n        while (n <= 10) {\r\n            result= Math.pow (2, Math.pow(2, n)) + 1;\r\n            n++;\r\n            System.out.println (result);\r\n        }\r\n     }  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write java program to find any number between 1 and n that can be expressed as the sum of two cubes in two (or more) different ways. \n//http://introcs.cs.princeton.edu/java/13flow/Ramanujan.java.html\nHere are some examples of Ramanujan numbers :\n1729 = 1^3 + 12^3 = 9^3 + 10^3\n* 10000\n1729 = 1^3 + 12^3 = 9^3 + 10^3\n4104 = 2^3 + 16^3 = 9^3 + 15^3\n* 100000\n1729 = 1^3 + 12^3 = 9^3 + 10^3\n4104 = 2^3 + 16^3 = 9^3 + 15^3\n13832 = 2^3 + 24^3 = 18^3 + 20^3\n39312 = 2^3 + 34^3 = 15^3 + 33^3\n46683 = 3^3 + 36^3 = 27^3 + 30^3\n32832 = 4^3 + 32^3 = 18^3 + 30^3\n40033 = 9^3 + 34^3 = 16^3 + 33^3\n20683 = 10^3 + 27^3 = 19^3 + 24^3\n65728 = 12^3 + 40^3 = 31^3 + 33^3\n64232 = 17^3 + 39^3 = 26^3 + 36^3Expected Output1729 = 1^3 + 12^3 = 9^3 + 10^3                                          \r\n4104 = 2^3 + 16^3 = 9^3 + 15^3                                          \r\n13832 = 2^3 + 24^3 = 18^3 + 20^3                                        \r\n39312 = 2^3 + 34^3 = 15^3 + 33^3                                        \r\n46683 = 3^3 + 36^3 = 27^3 + 30^3                                        \r\n32832 = 4^3 + 32^3 = 18^3 + 30^3                                        \r\n40033 = 9^3 + 34^3 = 16^3 + 33^3                                        \r\n20683 = 10^3 + 27^3 = 19^3 + 24^3                                       \r\n65728 = 12^3 + 40^3 = 31^3 + 33^3                                       \r\n64232 = 17^3 + 39^3 = 26^3 + 36^3", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example21  {\r\n\r\n   public static void main(String[] args) { \r\n\r\n         int n = 100000;\r\n        // for each a, b, c, d, check whether a^3 + b^3 = c^3 + d^3\r\n        for (int a = 1; a <= n; a++) {\r\n            int a3 = a*a*a;\r\n            if (a3 > n) break;\r\n\r\n            for (int b = a; b <= n; b++) {\r\n                int b3 = b*b*b;\r\n                if (a3 + b3 > n) break;\r\n\r\n                 for (int c = a + 1; c <= n; c++) {\r\n                    int c3 = c*c*c;\r\n                    if (c3 > a3 + b3) break;\r\n\r\n                    for (int d = c; d <= n; d++) {\r\n                        int d3 = d*d*d;\r\n                        if (c3 + d3 > a3 + b3) break;\r\n\r\n                        if (c3 + d3 == a3 + b3) {\r\n                            System.out.print((a3+b3) + \" = \");\r\n                            System.out.print(a + \"^3 + \" + b + \"^3 = \"); \r\n                            System.out.print(c + \"^3 + \" + d + \"^3\"); \r\n                            System.out.println();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a program to check if a number is Mersenne number or not. \nIn mathematics, a Mersenne number is a number that can be written in the form M(n) = 2n \u2212 1 for some integer n.\nThe first four Mersenne primes are 3, 7, 31, and 127Expected OutputInput a number: 127                                                     \r\n127 is a Mersenne number.", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.math.BigInteger;\r\npublic class Example22 {\r\n\r\n    public static void main(String args[])\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a number: \");\r\n        int n = in.nextInt();\r\n        int n1 = n + 1;\r\n\r\n        int power = 0;\r\n        int ans = 0;\r\n        for(int i=0;;i++)\r\n        {\r\n            power=(int)Math.pow(2,i);\r\n            if(power>n1)\r\n            {\r\n                break;\r\n            }\r\n            else if(power==n1)\r\n            {\r\n               System.out.println(n+\" is a Mersenne number.\");\r\n               ans=1;\r\n            }\r\n        }\r\n  if(ans==0)\r\n  {\r\n   System.out.println(n+\" is not a Mersenne number.\");\r\n  }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java program to find all the narcissistic numbers between 1 and 1000. \nIn number theory, a narcissistic number is a number that is the sum of its own digits each raised to the power of the number of digits.\nFor example:\n153 = 13 + 53 + 33Expected Output1                                                      \r\n2                                                      \r\n3                                                      \r\n4                                                      \r\n5                                                      \r\n6                                                      \r\n7                                                      \r\n8                                                      \r\n9                                                      \r\n153                                                    \r\n370                                                    \r\n371                                                    \r\n407", "exercise_solution_code": "import java.util.LinkedList;\r\npublic class Example23  {\r\n\r\n    public static void main(String args[])\r\n    {\r\n        for (int i = 1; i < 1000; i++) {\r\n            int n = i;\r\n            LinkedList<Integer> data = new LinkedList<>();\r\n            while (n > 0) {\r\n                data.push( n % 10 );\r\n                n = n / 10;\r\n            }\r\n            int n1 = 0;\r\n            for(Integer num : data) {\r\n                n1 += Math.pow(num, data.size());\r\n            }\r\n            if(i == n1) {\r\n                System.out.println(i);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to check if a number is palindrome or not. \nIn number system a palindromic number is a number that is the same when written forwards or backwards, i.e., of the form .\nThe first few palindromic numbers are therefore are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99, 101, 111, \u2026Expected OutputInput a number: 5                                                       \r\nIt is a Palindrome number.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example24  {\r\n\r\n    public static void main(String args[])\r\n    {\r\n\t Scanner in = new Scanner(System.in);\r\n     System.out.print(\"Input a number: \");\r\n     int n = in.nextInt();\r\n     int sum = 0, r;\r\n\t int temp = n;    \r\n     while(n>0)\r\n\t   {    \r\n        r = n % 10;   \r\n        sum = (sum*10)+r;    \r\n        n = n/10;    \r\n       }    \r\n      if(temp==sum)    \r\n        System.out.println(\"It is a Palindrome number.\");    \r\n      else    \r\n        System.out.println(\"Not a palindrome\");    \r\n     }  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to print the first 15 numbers of the Pell series. In mathematics, the Pell numbers are an infinite sequence of integers. The sequence of Pell numbers starts with 0 and 1, and then each Pell number is the sum of twice the previous Pell number and the Pell number before that.: thus, 70 is the companion to 29, and 70 = 2 \u00d7 29 + 12 = 58 + 12.\nThe first few terms of the sequence are :\n0, 1, 2, 5, 12, 29, 70, 169, 408, 985, 2378, 5741, 13860,\u2026Expected OutputFirst 20 Pell numbers:                                                  \r\n1 2 5 12 29 70 169 408 985 2378 5741 13860 33461 80782 195025 470832 113\r\n6689 2744210 6625109 15994428", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example25  {\r\n\r\n    public static void main(String args[])\r\n    {\r\n\tint n,a=1,b=0,c;\r\n    System.out.println(\"First 20 Pell numbers: \");\r\n    for(n=1; n<=20; n++)\r\n     {\r\n      c= a + 2*b;\r\n      System.out.print(c+\" \");\r\n      a = b;\r\n      b = c;\r\n     }\r\n   }\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Program in Java to check whether a number is a Keith Number or not. In recreational mathematics, a Keith number or repfigit number (short for repetitive Fibonacci-like digit) is a number in the following integer sequence:\n14, 19, 28, 47, 61, 75, 197, 742, 1104, 1537, 2208, 2580, 3684, 4788, 7385, 7647, 7909, 31331, 34285, 34348, 55604, 62662, 86935, 93993, 120284, 129106, 147640, 156146, 174680, 183186, 298320, 355419, 694280, 925993,Expected OutputInput a number: 75                                                         \r\nKeith Number", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Example26  {\r\n\r\n   public static void main(String[] args) { \r\n\r\n     Scanner sc = new Scanner( System.in ); \r\n     System.out.print(\"Input a number: \"); \r\n     int n = sc.nextInt(); \r\n     int n1 = n;\r\n     String s = Integer.toString(n);\r\n     int d=s.length();\r\n     int arr[]=new int[n];\r\n     int i, sum; \r\n     for(i=d-1; i>=0; i--)\r\n     {\r\n         arr[i]=n1 % 10;\r\n         n1=n1/10;\r\n          \r\n     }\r\n      \r\n     i=d; sum=0;\r\n     while(sum<n)\r\n     {\r\n         sum = 0;\r\n         for(int j=1; j<=d; j++)\r\n         {\r\n             sum=sum+arr[i-j];\r\n         }\r\n         arr[i]=sum;\r\n         i++;\r\n     }\r\n \r\n    if(sum==n)\r\n        System.out.println(\"Keith Number\");\r\n     else\r\n        System.out.println(\"Not a Keith Number\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-26.php"}, {"exercise_number": 27, "exercise_content": "27. Write a Java program to create the first twenty Hamming numbers. \nIn computer science, regular numbers are often called Hamming numbers, Hamming Numbers are numbers whose only prime factors are 2, 3 and 5.\nThe first few hamming numbers are :\n1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 20, 24, 25, 27, 30, 32Expected OutputFirst Twenty Hamming numbers: 1 2 3 4 5 6 8 9 10 12 15 16 18 20 24 25 27\r\n 30 32 36", "exercise_solution_code": "// https://rosettacode.org/\r\nimport java.math.BigInteger; \r\npublic class Exercise28 {\r\n\r\n    public static void main(String args[])\r\n    {\r\n        Stream hamming = makeHamming();\r\n        System.out.print(\"First Twenty Hamming numbers: \");\r\n        for (int i=0; i<20; i++) {\r\n            System.out.print(hamming.value());\r\n            System.out.print(\" \");\r\n            hamming = hamming.advance();\r\n        }\r\n        System.out.println();\r\n     }\r\n \r\n    public interface Stream\r\n    {\r\n        BigInteger value();\r\n        Stream advance();\r\n    }\r\n \r\n    public static class MultStream implements Stream\r\n    {\r\n        MultStream(int mult)\r\n        { m_mult = BigInteger.valueOf(mult); }\r\n        MultStream setBase(Stream s)\r\n        { m_base = s; return this; }\r\n        public BigInteger value()\r\n        { return m_mult.multiply(m_base.value()); }\r\n        public Stream advance()\r\n        { return setBase(m_base.advance()); }\r\n \r\n        private final BigInteger m_mult;\r\n        private Stream m_base;\r\n    }\r\n \r\n    private final static class RegularStream implements Stream\r\n    {\r\n        RegularStream(Stream[] streams, BigInteger val)\r\n        {\r\n            m_streams = streams;\r\n            m_val = val;\r\n        }\r\n        public BigInteger value()\r\n        { return m_val; }\r\n \r\n        public Stream advance()\r\n        {\r\n            // memoized value for the next stream instance.\r\n            if (m_advance != null) { return m_advance; }\r\n \r\n            int minidx = 0 ;\r\n            BigInteger next = nextStreamValue(0);\r\n            for (int i=1; i<m_streams.length; i++) {\r\n                BigInteger v = nextStreamValue(i);\r\n                if (v.compareTo(next) < 0) {\r\n                    next = v;\r\n                    minidx = i;\r\n                }\r\n            }\r\n            RegularStream ret = new RegularStream(m_streams, next);\r\n            // memoize the value!\r\n            m_advance = ret;\r\n            m_streams[minidx].advance();\r\n            return ret;\r\n        }\r\n        private BigInteger nextStreamValue(int streamidx)\r\n        {\r\n            // skip past duplicates in the streams we're merging.\r\n            BigInteger ret = m_streams[streamidx].value();\r\n            while (ret.equals(m_val)) {\r\n                m_streams[streamidx] = m_streams[streamidx].advance();\r\n                ret = m_streams[streamidx].value();\r\n            }\r\n            return ret;\r\n        }\r\n        private final Stream[] m_streams;\r\n        private final BigInteger m_val;\r\n        private RegularStream m_advance = null;\r\n    }\r\n \r\n    private final static Stream makeHamming()\r\n    {\r\n        MultStream nums[] = new MultStream[] {\r\n            new MultStream(2),\r\n            new MultStream(3),\r\n            new MultStream(5)\r\n        };\r\n        Stream ret = new RegularStream(nums, BigInteger.ONE);\r\n        for (int i=0; i<nums.length; i++) {\r\n            nums[i].setBase(ret);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-27.php"}, {"exercise_number": 28, "exercise_content": "28. Write a Program in Java to check whether a number is an Armstrong Number or not. \nArmstrong (Michael F. Armstrong) number is a number that is equal to the sum of cubes of its digits. For example 0, 1, 153, 370, 371 and 407 are the Armstrong numbers\nExpected OutputInput an integer:  153\r\nIs Armstrong number? true", "exercise_solution_code": "import java.util.*;\r\npublic class solution {\t\r\n public static boolean is_Amstrong(int n) {\r\n        int remainder, sum = 0, temp = 0;\r\n        temp = n;\r\n        while (n > 0) {\r\n            remainder = n % 10;\r\n            sum = sum + (remainder * remainder * remainder);\r\n            n = n / 10;\r\n        }\r\n        return sum == temp;\r\n    }  \r\n\r\n   public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Input an integer: \");\r\n\t\tString input = scanner.nextLine();\r\n\t\tint number = Integer.parseInt(input); \r\n\t\tSystem.out.println(\"Is Armstrong number? \"+is_Amstrong(number));\t\t\r\n\t\t}\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-28.php"}, {"exercise_number": 29, "exercise_content": "29.Write a Program in Java to check whether a number is a Lucky Number or not. \nExpected OutputInput an integer:  25\r\nIs Lucky number? true", "exercise_solution_code": "import java.util.*;\r\npublic class solution {\t\r\n public static boolean isLucky(int n) {\r\n         //Create an array of size 10 to initialize all elements as \r\n\t\t //false to check if a digit is already seen or not. \r\n    boolean temp[]=new boolean[10]; \r\n        for (int i = 0; i < 10; i++) \r\n            temp[i] = false; \r\n        while (n > 0) \r\n        { \r\n         // Find the last digit \r\n            int digit = n % 10;       \r\n            // Return false if digit is already seen,  \r\n            if (temp[digit]) \r\n            return false;       \r\n            temp[digit] = true;            \r\n\t\t\tn = n / 10; \r\n        } \r\n        return true; \r\n }\t\r\n\r\n   public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Input an integer: \");\r\n\t\tString input = scanner.nextLine();\r\n\t\tint number = Integer.parseInt(input); \r\n\t\tSystem.out.println(\"Is Lucky number? \"+isLucky(number));\t\t\r\n\t\t}\r\n }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/numbers/java-number-exercise-29.php"}], "File Input-Output": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to get a list of all file/directory names from the given.", "exercise_solution_code": "import java.io.File;\r\nimport java.util.Date;\r\n\r\npublic class Exercise1 {\r\n     public static void main(String a[])\r\n     {\r\n        File file = new File(\"/home/students/\");\r\n        String[] fileList = file.list();\r\n        for(String name:fileList){\r\n            System.out.println(name);\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2.  Write a Java program to get specific files by extensions from a specified folder.", "exercise_solution_code": "import java.io.File;\r\nimport java.io.FilenameFilter;\r\npublic class Exercise2 {\r\n       public static void main(String a[]){\r\n        File file = new File(\"/home/students/\");\r\n           String[] list = file.list(new FilenameFilter() {\r\n           @Override\r\n            public boolean accept(File dir, String name) {\r\n             if(name.toLowerCase().endsWith(\".py\")){\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n        for(String f:list){\r\n            System.out.println(f);\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to check if a file or directory specified by pathname exists or not.", "exercise_solution_code": "import java.io.File;\r\npublic class Exercise3 {\r\n       public static void main(String[] args) {\r\n        // Create a File object\r\n        File my_file_dir = new File(\"/home/students/xyz.txt\");\r\n         if (my_file_dir.exists()) \r\n           {\r\n            System.out.println(\"The directory or file exists.\\n\");\r\n           } \r\n         else\r\n          {\r\n            System.out.println(\"The directory or file does not exist.\\n\");\r\n          }\r\n       }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to check if a file or directory has read and write permission.", "exercise_solution_code": "import java.io.File;\r\npublic class Exercise4 {\r\n       public static void main(String[] args) {\r\n        // Create a File object\r\n        File my_file_dir = new File(\"/home/students/abc.txt\");\r\n         if (my_file_dir.canWrite()) \r\n           {\r\n            System.out.println(my_file_dir.getAbsolutePath() + \" can write.\\n\");\r\n           } \r\n         else\r\n          {\r\n            System.out.println(my_file_dir.getAbsolutePath() + \" cannot write.\\n\");\r\n          }\r\n         if (my_file_dir.canRead()) \r\n           {\r\n            System.out.println(my_file_dir.getAbsolutePath() + \" can read.\\n\");\r\n           } \r\n         else\r\n          {\r\n            System.out.println(my_file_dir.getAbsolutePath() + \" cannot read.\\n\");\r\n          }  \r\n      }\r\n  }\r\n  \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to check if given pathname is a directory or a file.", "exercise_solution_code": "import java.io.File;\r\npublic class Exercise5 {\r\n       public static void main(String[] args) {\r\n        // Create a File object\r\n        File my_file_dir = new File(\"/home/students/abc.txt\");\r\n         if (my_file_dir.isDirectory()) \r\n           {\r\n            System.out.println(my_file_dir.getAbsolutePath() + \" is a directory.\\n\");\r\n           } \r\n         else\r\n          {\r\n            System.out.println(my_file_dir.getAbsolutePath() + \" is not a directory.\\n\");\r\n          }\r\n         if (my_file_dir.isFile()) \r\n           {\r\n            System.out.println(my_file_dir.getAbsolutePath() + \" is a file.\\n\");\r\n           } \r\n         else\r\n          {\r\n            System.out.println(my_file_dir.getAbsolutePath() + \" is not a file.\\n\");\r\n          }  \r\n      }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to compare two files lexicographically. \nAccording to Wikipedia:\nIn mathematics, the lexicographic or lexicographical order (also known as lexical order, dictionary order, alphabetical order or lexicographic(al) product) is a generalization of the way the alphabetical order of words is based on the alphabetical order of their component letters. This generalization consists primarily in defining a total order over the sequences (often called words in computer science) of elements of a finite totally ordered set, often called alphabet.", "exercise_solution_code": "import java.io.File;\r\npublic class Exercise6 {\r\n   public static void main(String[] args) \r\n   {\r\n       String str1 = \"Java exercises\";\r\n       String str2 = \"Java exercises\";\r\n       String str3 = \"Java examples\";\r\n\r\n       int var1 = str1.compareTo( str2 );\r\n       System.out.println(\"str1 & str2 comparison: \"+var1);\r\n\r\n       int var2 = str1.compareTo( str3 );\r\n       System.out.println(\"str1 & str3 comparison: \"+var2);\r\n\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to get last modified time of a file.", "exercise_solution_code": "import java.io.File;\r\nimport java.util.Date;\r\n\r\npublic class Example7 {\r\n       public static void main(String[] args) {\r\n       File file = new File(\"test.txt\");\r\n       Date date=new Date(file.lastModified());\r\n\t   System.out.println(\"\\nThe file was last modified on: \"+date+\"\\n\");\t   \r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write Java program to read input from java console.", "exercise_solution_code": "import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\n public class Exercise8 {\r\n  public static void main(String[] args) throws IOException\r\n  {\r\n    BufferedReader R = new BufferedReader(new InputStreamReader(System.in));\r\n    System.out.print(\"Input your name: \");\r\n    String name = R.readLine();\r\n    System.out.println(\"Your name is: \" + name);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to get file size in bytes, kb, mb.", "exercise_solution_code": "import java.io.File;\r\n \r\npublic class Exercise9 {\r\n \r\n      public static void main(String[] args) \r\n      {\r\n        File file = new File(\"/home/students/test.txt\");\r\n        if(file.exists())\r\n        {\r\n        System.out.println(filesize_in_Bytes(file));\r\n        System.out.println(filesize_in_kiloBytes(file));\r\n        System.out.println(filesize_in_megaBytes(file));\r\n        }\r\n        else \r\n        System.out.println(\"File doesn't exist\");\r\n         \r\n    }\r\n \r\n    private static String filesize_in_megaBytes(File file) {\r\n        return (double) file.length()/(1024*1024)+\" mb\";\r\n    }\r\n \r\n    private static String filesize_in_kiloBytes(File file) {\r\n        return (double) file.length()/1024+\"  kb\";\r\n    }\r\n \r\n    private static String filesize_in_Bytes(File file) {\r\n        return file.length()+\" bytes\";\r\n    }\r\n }\r\n \r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to read contents from a file into byte array.", "exercise_solution_code": "import java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\n \r\n// Reading contents from a file into byte array.\r\npublic class Exercise10 { \r\n  public static void main(String a[]){       \r\n        String file_name = \"/home/students/test.txt\";\r\n        InputStream fins = null;\r\n        try {\r\n            fins = new FileInputStream(file_name);\r\n            byte file_content[] = new byte[2*1024];\r\n            int read_count = 0;\r\n            while((read_count = fins.read(file_content)) > 0){\r\n                System.out.println(new String(file_content, 0, read_count-1));\r\n            }\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try{\r\n                if(fins != null) fins.close();\r\n            } catch(Exception ex){\r\n                 \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to read a file content line by line.", "exercise_solution_code": "import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n \r\npublic class Exercise11 {\r\n \r\n    public static void main(String a[]){\r\n        BufferedReader br = null;\r\n        String strLine = \"\";\r\n        try {\r\n            br = new BufferedReader( new FileReader(\"/home/students/test.txt\"));\r\n            while( (strLine = br.readLine()) != null){\r\n                System.out.println(strLine);\r\n            }\r\n            br.close();\r\n        } catch (FileNotFoundException e) {\r\n            System.err.println(\"File not found\");\r\n        } catch (IOException e) {\r\n            System.err.println(\"Unable to read the file.\");\r\n        }\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to read a plain text file.", "exercise_solution_code": "import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileReader;\r\n \r\npublic class Exercise12 {\r\n \r\n    public static void main(String a[]){\r\n        StringBuilder sb = new StringBuilder();\r\n        String strLine = \"\";\r\n        try {\r\n             BufferedReader br = new BufferedReader(new FileReader(\"/home/students/test.txt\"));\r\n             while (strLine != null)\r\n             {\r\n                sb.append(strLine);\r\n                sb.append(System.lineSeparator());\r\n                strLine = br.readLine();\r\n                System.out.println(strLine);\r\n            }\r\n             br.close();\r\n        } catch (FileNotFoundException e) {\r\n            System.err.println(\"File not found\");\r\n        } catch (IOException e) {\r\n            System.err.println(\"Unable to read the file.\");\r\n        }\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a java program to read a file line by line and store it into a variable.", "exercise_solution_code": "import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.FileReader;\r\n \r\npublic class exercise13 {\r\n \r\n    public static void main(String a[]){\r\n        StringBuilder sb = new StringBuilder();\r\n        String strLine = \"\";\r\n        String str_data = \"\";\r\n        try {\r\n             BufferedReader br = new BufferedReader(new FileReader(\"/home/students/test.txt\"));\r\n             while (strLine != null)\r\n             {\r\n                if (strLine == null)\r\n                  break;\r\n                str_data += strLine;\r\n                strLine = br.readLine();\r\n                \r\n            }\r\n              System.out.println(str_data);\r\n             br.close();\r\n        } catch (FileNotFoundException e) {\r\n            System.err.println(\"File not found\");\r\n        } catch (IOException e) {\r\n            System.err.println(\"Unable to read the file.\");\r\n        }\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to store text file content line by line into an array.", "exercise_solution_code": "import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.FileReader;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Arrays;\r\n\r\npublic class Exercise14 {\r\n \r\n    public static void main(String a[]){\r\n        StringBuilder sb = new StringBuilder();\r\n        String strLine = \"\";\r\n        List<String> list = new ArrayList<String>();\r\n        try {\r\n             BufferedReader br = new BufferedReader(new FileReader(\"/home/students/test.txt\"));\r\n              while (strLine != null)\r\n               {\r\n                strLine = br.readLine();\r\n                sb.append(strLine);\r\n                sb.append(System.lineSeparator());\r\n                strLine = br.readLine();\r\n                if (strLine==null)\r\n                   break;\r\n                list.add(strLine);\r\n            }\r\n         System.out.println(Arrays.toString(list.toArray()));\r\n             br.close();\r\n        } catch (FileNotFoundException e) {\r\n            System.err.println(\"File not found\");\r\n        } catch (IOException e) {\r\n            System.err.println(\"Unable to read the file.\");\r\n        }\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to write and read a plain text file.", "exercise_solution_code": "import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\n \r\npublic class Eexercise15 {\r\n     public static void main(String a[]){\r\n        StringBuilder sb = new StringBuilder();\r\n        String strLine = \"\";\r\n        try\r\n          {\r\n             String filename= \"/home/students/myfile.txt\";\r\n             FileWriter fw = new FileWriter(filename,false); \r\n             //appends the string to the file\r\n             fw.write(\"Python Exercises\\n\");\r\n             fw.close();\r\n             BufferedReader br = new BufferedReader(new FileReader(\"/home/students/myfile.txt\"));\r\n             //read the file content\r\n             while (strLine != null)\r\n             {\r\n                sb.append(strLine);\r\n                sb.append(System.lineSeparator());\r\n                strLine = br.readLine();\r\n                System.out.println(strLine);\r\n            }\r\n             br.close();                          \r\n           }\r\n           catch(IOException ioe)\r\n           {\r\n            System.err.println(\"IOException: \" + ioe.getMessage());\r\n           }\r\n        }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to append text to an existing file.", "exercise_solution_code": "import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\n \r\npublic class Exercise16 {\r\n     public static void main(String a[]){\r\n        StringBuilder sb = new StringBuilder();\r\n        String strLine = \"\";\r\n        try\r\n          {\r\n             String filename= \"/home/students/myfile.txt\";\r\n             FileWriter fw = new FileWriter(filename,true); \r\n             //appends the string to the file\r\n             fw.write(\"Java Exercises\\n\");\r\n             fw.close();\r\n             BufferedReader br = new BufferedReader(new FileReader(\"/home/students/myfile.txt\"));\r\n             //read the file content\r\n             while (strLine != null)\r\n             {\r\n                sb.append(strLine);\r\n                sb.append(System.lineSeparator());\r\n                strLine = br.readLine();\r\n                System.out.println(strLine);\r\n            }\r\n             br.close();\r\n           }\r\n           catch(IOException ioe)\r\n           {\r\n            System.err.println(\"IOException: \" + ioe.getMessage());\r\n           }\r\n        }\r\n  }\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to read first 3 lines from a file.", "exercise_solution_code": "import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.LineNumberReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.FileInputStream;\r\n \r\npublic class Exercise17 {\r\n \r\n    public static void main(String a[]){\r\n        BufferedReader br = null;\r\n        String strLine = \"\";\r\n        try {\r\n            LineNumberReader reader = new LineNumberReader(new InputStreamReader(new FileInputStream(\"/home/students/test.txt\"), \"UTF-8\"));\r\n             while (((strLine = reader.readLine()) != null) && reader.getLineNumber() <= 3){\r\n                System.out.println(strLine);\r\n            }\r\n           reader.close();\r\n        } catch (FileNotFoundException e) {\r\n            System.err.println(\"File not found\");\r\n        } catch (IOException e) {\r\n            System.err.println(\"Unable to read the file.\");\r\n        }\r\n     }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to find the longest word in a text file.", "exercise_solution_code": "import java.util.Scanner;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\n\r\npublic class Exercise18 {\r\n     public static void main(String [ ] args) throws FileNotFoundException {\r\n              new Exercise18().findLongestWords();\r\n         }\r\n\r\n     public String findLongestWords() throws FileNotFoundException {\r\n\r\n       String longest_word = \"\";\r\n       String current;\r\n       Scanner sc = new Scanner(new File(\"/home/students/test.txt\"));\r\n\r\n\r\n       while (sc.hasNext()) {\r\n          current = sc.next();\r\n           if (current.length() > longest_word.length()) {\r\n             longest_word = current;\r\n           }\r\n\r\n       }\r\n         System.out.println(\"\\n\"+longest_word+\"\\n\");\r\n            return longest_word;\r\n            }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/io/java-io-exercise-18.php"}], "Math": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to round up the result of integer division.", "exercise_solution_code": "import java.util.*;\r\n  public class Example1 {\r\n  public static void main(String[] args) {\r\n  int tot_theory_marks = 350, tot_practical_marks = 90, tot_marks = 500;\r\n  int percentage_of_marks = ((tot_theory_marks + tot_practical_marks)*100)/tot_marks;  \r\n    System.out.print(\"\\nPercentage of Marks: \"+percentage_of_marks+\"%\\n\");\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to get whole and fractional parts from a double value.", "exercise_solution_code": "import java.util.*;\r\n  public class Example2 {\r\n  public static void main(String[] args) {\r\n  double value = 12.56;\r\n  double fractional_part = value % 1;\r\n  double integral_part = value - fractional_part;  \r\n  System.out.print(\"\\nOriginal value: \"+value);\r\n  System.out.print(\"\\nIntegral part: \"+integral_part);\r\n  System.out.print(\"\\nFractional part: \"+fractional_part);\r\n  System.out.println();  \r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to test if a double number is an integer.", "exercise_solution_code": "import java.util.*;\r\npublic class Example3 {\r\n public static void main(String[] args) {\r\n  double d_num = 5.44444;\r\n  if ((d_num % 1) == 0) {\r\n   System.out.println(\"It's not a double number\");\r\n  } else {\r\n   System.out.println(\"It's a double number\");\r\n  }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to round a float number to specified decimals.", "exercise_solution_code": "import java.lang.*;\r\nimport java.math.BigDecimal;\r\npublic class Example4 {\r\n public static void main(String[] args) {\r\n        float x = 451.3256412f;\r\n        BigDecimal result;\r\n\t\tint decimal_place = 4;\r\n\t\tBigDecimal bd_num = new BigDecimal(Float.toString(x));\r\n        bd_num = bd_num.setScale(decimal_place, BigDecimal.ROUND_HALF_UP); \r\n\t\tSystem.out.printf(\"Original number: %.7f\\n\",x);\r\n        System.out.println(\"Rounded upto 4 decimal: \"+bd_num);\r\n  }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to count the absolute distinct value in an array.", "exercise_solution_code": "import java.util.*;\r\nimport java.math.*;\r\npublic class Example5 {\r\n public static void main(String[] args) {\r\n  {\r\n   int[] numbers = new int[] {\r\n    -1, -1, 0, 2, 2, 3, 0, 1, 5, 9\r\n   };\r\n   int count = 0;\r\n   HashSet < Integer > set = new HashSet < Integer > ();\r\n\r\n   for (int i = 0; i < numbers.length; i++) {\r\n    int n = Math.abs(numbers[i]);\r\n    if (!set.contains(n)) {\r\n     set.add(n);\r\n     count++;\r\n    }\r\n   }\r\n   System.out.println(count);\r\n  }\r\n }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to reverse an integer number.", "exercise_solution_code": "public class Example6 {\r\n   public static void main(String[] args) {\r\n\tint num =1287;   \r\n\tint is_positive = 1;\r\n        if (num < 0) {\r\n            is_positive = -1;\r\n            num = -1 * num;\r\n        }\r\n        int sum  = 0;\r\n        while (num > 0) {\r\n            int r = num % 10;\r\n            \r\n            int maxDiff = Integer.MAX_VALUE - sum * 10;\r\n            if (sum > Integer.MAX_VALUE / 10 || r > maxDiff) \r\n\t\t\t\tSystem.out.println(\"Wrong number\");;\r\n            \r\n            sum = sum * 10 + r;\r\n            num /= 10;\r\n        }\r\n        System.out.println(is_positive * sum);\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to convert Roman number to an integer number.", "exercise_solution_code": "public class Example7 {\r\n   public static void main(String[] args) {\r\n\tString str = \"DCCVII\";\r\n\tint len = str.length();\r\n\r\n        str = str + \" \";\r\n        int result = 0;\r\n        for (int i = 0; i < len; i++) {\r\n            char ch   = str.charAt(i);\r\n            char next_char = str.charAt(i+1);\r\n            \r\n            if (ch == 'M') {\r\n                result += 1000;\r\n            } else if (ch == 'C') {\r\n                if (next_char == 'M') {\r\n                    result += 900;\r\n                    i++;\r\n                } else if (next_char == 'D') {\r\n                    result += 400;\r\n                    i++;\r\n                } else {\r\n                    result += 100;\r\n                }\r\n            } else if (ch == 'D') {\r\n                result += 500;\r\n            } else if (ch == 'X') {\r\n                if (next_char == 'C') {\r\n                    result += 90;\r\n                    i++;\r\n                } else if (next_char == 'L') {\r\n                    result += 40;\r\n                    i++;\r\n                } else {\r\n                    result += 10;\r\n                }\r\n            } else if (ch == 'L') {\r\n                result += 50;\r\n            } else if (ch == 'I') {\r\n                if (next_char == 'X') {\r\n                    result += 9;\r\n                    i++;\r\n                } else if (next_char == 'V') {\r\n                    result += 4;\r\n                    i++;\r\n                } else {\r\n                    result++;\r\n                }\r\n            } else { // if (ch == 'V')\r\n                result += 5;\r\n            }\r\n        }\r\n       System.out.println(\"\\nRoman Number: \"+str);\r\n\t   System.out.println(\"Equivalent Integer: \"+result+\"\\n\");\r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to convert an integer value to absolute value.", "exercise_solution_code": "import java.util.*;\r\npublic class Exercise8 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input an integer number: \");\r\n        int x = in.nextInt();  \r\n        System.out.printf(\"The absolute value of %d is: %d\",x, convert (x));\r\n\t\tSystem.out.printf(\"\\n\");\r\n    }\r\n    public static int convert (int n)\r\n\t{\r\n\t\tint absvalue = (n >= 0) ? n : -n;\r\n\t\treturn absvalue;\r\n\t}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to convert a float value to absolute value.", "exercise_solution_code": "import java.util.*;\r\npublic class Example9 {\r\n\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a float number: \");\r\n        float  x = in.nextFloat();  \r\n        System.out.printf(\"The absolute value of %.2f is: %.2f\",x, convert(x));\r\n\t\tSystem.out.printf(\"\\n\");\r\n    }\r\n\r\n    public static float convert(float n)\r\n\t{\r\n\t\tfloat absvalue = (n >= 0) ? n : -n;\r\n\t\treturn absvalue;\r\n\t}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to accept a float value of number and return a rounded float value.", "exercise_solution_code": "import java.util.*;\r\npublic class Example10 {\r\n\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input a float number: \");\r\n        float  x = in.nextFloat();  \r\n        System.out.printf(\"The rounded value of %f is: %.2f\",x, round_num(x));\r\n\t\tSystem.out.printf(\"\\n\");\r\n    }\r\n\r\n\t public static float round_num(float fn)\r\n\t{\r\n\t\tfloat f_num = (float)Math.floor(fn);\r\n\t\tfloat c_num = (float)Math.ceil(fn);\r\n\t\tif ((fn - f_num) > (c_num - fn))\r\n\t\t\t{\r\n\t\t\t\treturn c_num;\r\n\t\t\t\t}\r\n\t\telse if ((c_num - fn) > (fn - f_num)) \r\n\t\t{\r\n\t\t\treturn f_num;\r\n\t\t\t}\r\n\t\telse \r\n\t\t{ \r\n\t       return c_num; \r\n\t\t   }\t\t\r\n\t}\r\n\t\r\n\t}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to accept two integers and return true if the either one is 15 or if their sum or difference is 15.", "exercise_solution_code": "import java.util.*;\r\npublic class Exerecise11 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input the first integer number: \");\r\n        int x = in.nextInt();  \r\n\t\tSystem.out.print(\"Input the second integer number: \");\r\n        int y = in.nextInt(); \r\n        System.out.print(\"The result is: \"+calculate(x, y));\r\n\t\tSystem.out.printf(\"\\n\");\r\n    }\r\n\r\n  public static boolean calculate(int p, int q)\r\n   {\r\n\tif(p == 15 || q == 15)\r\n\t\treturn true;\r\n\treturn ((p + q) == 15 || Math.abs(p - q) == 15);\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to count the number of prime numbers less than a given positive number.", "exercise_solution_code": "import java.util.*;\r\n public class Example12 {\r\n public static void main(String[] args)\r\n    {\r\n        Scanner in = new Scanner(System.in);\r\n        System.out.print(\"Input an integer: \");\r\n\t\tint x = in.nextInt(); \r\n\t\tSystem.out.print(\"The number of prime numbers: \"+countPrimes(x));\r\n\t\tSystem.out.printf(\"\\n\");\r\n\t}\r\n\r\n       public static int countPrimes(int n)\r\n    {\r\n        if(n <= 0 || n == 1 || n == 2) \r\n\t\t\treturn 0;\r\n        else if(n == 3) \r\n\t\t\treturn 1;\r\n        BitSet set = new BitSet();\r\n        n = n - 1;\r\n        int s = (int)Math.sqrt(n);\r\n        int ctr = n;\r\n        for(int p = 2; p <= s; p ++)\r\n        {\r\n            if(!set.get(p))\r\n            {\r\n                for(int q = 2; (p * q) <= n; q ++)\r\n                {\r\n                    if(!set.get(p * q))\r\n                    {\r\n                        ctr --;\r\n                        set.set(p * q);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ctr - 1;\r\n    }        \r\n }\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to find the length of the longest sequence of zeros in binary representation of an integer.", "exercise_solution_code": "import java.util.*;\r\n public class Example13 {\r\n     public static void main(String[] args){\r\n\t\t \r\n\t\tint dec_num, rem, quot, i=1, j;  \r\n        int bin_num[] = new int[100];  \r\n        Scanner scan = new Scanner(System.in);  \r\n          \r\n        System.out.print(\"Input a Decimal Number : \");  \r\n        dec_num = scan.nextInt();  \r\n          \r\n        quot = dec_num;  \r\n          \r\n        while(quot != 0)  \r\n        {  \r\n            bin_num[i++] = quot%2;  \r\n            quot = quot/2;  \r\n        }  \r\n\t\tString binary_str=\"\";\r\n\t\tSystem.out.print(\"Binary number is: \");  \r\n        for(j=i-1; j>0; j--)  \r\n        {  \r\n          binary_str = binary_str + bin_num[j];\t\r\n        }  \r\n\t\tSystem.out.print(binary_str);\r\n        i = binary_str.length()-1;\r\n        while(binary_str.charAt(i)=='0') {\r\n            i--;\r\n        }\r\n        int length = 0;\r\n        int ctr = 0;\r\n        for(; i>=0; i--) {\r\n            if(binary_str.charAt(i)=='1') {\r\n                length = Math.max(length, ctr);\r\n                ctr = 0;\r\n            } else {\r\n                ctr++;\r\n            }\r\n        }\r\n        length = Math.max(length, ctr);\r\n        System.out.println(\"\\nLength of the longest sequence: \"+length);\r\n    }\r\n }\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to find the square root of a number using Babylonian method.", "exercise_solution_code": "import java.util.*;\r\npublic class solution {\t\r\n  public static float square_Root(float num) \r\n    { \r\n        float a = num; \r\n        float b = 1; \r\n        double e = 0.000001; \r\n        while (a - b > e) { \r\n            a = (a + b) / 2; \r\n            b = num / a; \r\n        } \r\n        return a; \r\n    } \r\n \r\n   public static void main(String[] args) {\r\n        Scanner scan = new Scanner(System.in);\r\n        System.out.print(\"Input an integer: \");\r\n        int num = scan.nextInt();\r\n        scan.close(); \r\n\t\tSystem.out.println(\"Square root of a number using Babylonian method: \"+square_Root(num));\t\t\r\n\t\t}\r\n }\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to multiply two integers without using multiplication, division, bitwise operators, and loops.", "exercise_solution_code": "import java.util.*;\r\npublic class solution {\t\r\n  public static int multiply_two_nums(int a, int b) { \r\n          \r\n        /* 0 multiplied with anything gives 0 */\r\n        if (b == 0) \r\n            return 0; \r\n      \r\n        if (b > 0) \r\n            return (a + multiply_two_nums(a, b - 1)); \r\n            \r\n        if (b < 0) \r\n            return -multiply_two_nums(a, -b); \r\n              \r\n        return -1; \r\n    } \r\n \r\n   public static void main(String[] args) {\r\n        Scanner scan = new Scanner(System.in);\r\n        System.out.print(\"Input first integer: \");\r\n        int num1 = scan.nextInt();\r\n       System.out.print(\"Input second integer: \");\r\n        int num2 = scan.nextInt();\r\n        scan.close(); \r\n       System.out.println(\"Multiply of two integers: \"+multiply_two_nums(num1, num2));\t\t\r\n\t\t}\r\n }\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to calculate power of a number without using multiplication(*) and division(/) operators.", "exercise_solution_code": "import java.util.*;\r\npublic class solution {\t\r\n  public static int power(int b, int e) \r\n    { \r\n        if (e == 0) \r\n            return 1; \r\n              \r\n        int result = b; \r\n        int temp = b; \r\n        int i, j; \r\n          \r\n        for (i = 1; i < e; i++) { \r\n            for (j = 1; j < b; j++) { \r\n                result += temp; \r\n            } \r\n            temp = result; \r\n        } \r\n          \r\n        return result; \r\n    } \r\n \r\n   public static void main(String[] args) {\r\n        Scanner scan = new Scanner(System.in);\r\n        System.out.print(\"Input the base: \");\r\n        int b = scan.nextInt();\r\n\t\tSystem.out.print(\"Input the exponent: \");\r\n        int e = scan.nextInt();\r\n        scan.close(); \r\n\t\tif (b>0 && e>0)\r\n\t\tSystem.out.println(\"Power of the number: \"+power(b, e));\t\t\r\n\t\t}\r\n }\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to calculate and print average (or mean) of the stream of given numbers.", "exercise_solution_code": "import java.util.*;\r\nclass solution {   \r\n    // Prints average of a stream of numbers \r\n    static void streamAvg(float arr[]) \r\n    { \r\n        int n = arr.length; \r\n\t\tfloat avg = 0; \r\n        for (int i = 0; i < n; i++)  \r\n        { \r\n            //avg = getAvg(avg, arr[i], i); \r\n\t\t\tavg = (avg * i + arr[i]) / (i + 1);\r\n            System.out.printf(\"Average of %d numbers is %f \\n\", \r\n                                                   i + 1, avg); \r\n        } \r\n        return; \r\n    } \r\n  \r\n    // Calculate the new average\r\n    static float getAvg(float prev_avg, float x, int n) \r\n     { \r\n        return (prev_avg * n + x) / (n + 1); \r\n     }\r\n  \r\n    public static void main(String[] args) \r\n     { \r\n        float arr[] = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100}; \r\n        streamAvg(arr); \r\n     } \r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to count the numbers without digit 7, from 1 to a given number.", "exercise_solution_code": "import java.util.*;\r\nclass solution { \r\n    static int count_nums_not_7(int num) \r\n    { \r\n        if (num < 7) \r\n            return num; \r\n        if (num >= 7 && num < 10) \r\n            return num-1; \r\n \r\n        int r = 1; \r\n        while (num/r > 9) \r\n            r = r*10; \r\n  \r\n        int m = num/r; \r\n   \r\n        if (m != 7) \r\n            return count_nums_not_7(m)*count_nums_not_7(r - 1) + count_nums_not_7(m) + count_nums_not_7(num%r); \r\n        else\r\n            return count_nums_not_7(m*r - 1); \r\n    } \r\n  \r\n    public static void main(String[] args) {\r\n        Scanner scan = new Scanner(System.in);\r\n        System.out.print(\"Input a number: \");\r\n        int num = scan.nextInt();\r\n\t\tif (num>0)\r\n\t\tSystem.out.println(\"Count the numbers without digit 7, from 1 to \"+num+\": \"+count_nums_not_7(num));\t\t\r\n\t\t}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to generate a magic square of order n (all row, column, and diagonal sums are equal). \nFrom Wikipedia, \nIn recreational mathematics and combinatorial design, a magic square is a n x n square grid (where n is the number of cells on each side) filled with distinct positive integers in the range 1, 2, ..., n2 such that each cell contains a different integer and the sum of the integers in each row, column and diagonal is equal. The sum is called the magic constant or magic sum of the magic square. A square grid with n cells on each side is said to have order n.", "exercise_solution_code": "import java.util.*;\r\npublic class solution {\r\n\r\n    public static void main(String[] args) { \r\n\t\r\n\t    Scanner scan = new Scanner(System.in);\r\n        System.out.print(\"Input a number: \");\r\n        int num = scan.nextInt();\r\n        if ((num % 2 == 0) || (num <=0 ))\r\n        {\r\n            System.out.print(\"Input number must be odd and >0\"); \t\t\t\r\n\t\t\tSystem.exit(0); \r\n\t\t}\r\n\r\n        int[][] magic_square = new int[num][num];\r\n\r\n        int row_num = num-1;\r\n        int col_num = num/2;\r\n        magic_square[row_num][col_num] = 1;\r\n\r\n        for (int i = 2; i <= num*num; i++) {\r\n            if (magic_square[(row_num + 1) % num][(col_num + 1) % num] == 0) {\r\n                row_num = (row_num + 1) % num;\r\n                col_num = (col_num + 1) % num;\r\n            }\r\n            else {\r\n                row_num = (row_num - 1 + num) % num;                \r\n            }\r\n            magic_square[row_num][col_num] = i;\r\n        }\r\n\r\n        // print the square\r\n        for (int i = 0; i < num; i++) {\r\n            for (int j = 0; j < num; j++) {\r\n                if (magic_square[i][j] < 10)  System.out.print(\" \");   \r\n                if (magic_square[i][j] < 100) System.out.print(\" \");  \r\n                System.out.print(magic_square[i][j] + \" \");\r\n            }\r\n            System.out.println();\r\n        }\r\n\r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. In mathematics, the sieve of Eratosthenes is an ancient algorithm for finding all prime numbers up to any given limit.\nWrite a Java program to print all primes smaller than or equal to any given number.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class solution {\r\n\r\n    private static int [] generatePrimes(int num) {\r\n    boolean[] temp = new boolean[num + 1];\r\n    for (int i = 2; i * i <= num; i++) {\r\n        if (!temp [i]) {\r\n            for (int j = i; i * j <= num; j++) {\r\n                temp [i*j] = true;\r\n            }\r\n        }\r\n    }\r\n    int prime_nums = 0;\r\n    for (int i = 2; i <= num; i++) {\r\n        if (!temp [i]) prime_nums++;\r\n    }\r\n    int [] all_primes = new int [prime_nums];\r\n    int index = 0; \r\n    for (int i = 2; i <= num; i++) {\r\n        if (!temp [i]) all_primes [index++] = i;\r\n    }\r\n    return all_primes;\r\n}\r\n\r\n    public static void main(String[] args) \r\n     { \r\n        Scanner scan = new Scanner(System.in);\r\n        System.out.print(\"Input the number: \");\r\n        int n = scan.nextInt();\r\n        if (n>0)\r\n\t\t{\t\r\n\t\tint [] result = generatePrimes(n);\r\n\t    System.out.println(\"Prime numbers <= \" + n +\": \"+ Arrays.toString(result));\r\n\t\t}         \r\n     } \r\n\t}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to find the number which has the maximum number of distinct prime factors in a given range.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class solution {\r\n    static int max_distinct_primes(int r1, int r2) \r\n{ \r\n    long factor_count[] = new long[r2 + 1]; \r\n    boolean prime_num[] = new boolean[r2 + 1]; \r\n    for (int i = 0; i <= r2; i++) \r\n    { \r\n        factor_count[i] = 0; \r\n        prime_num[i] = true;\r\n    } \r\n  \r\n    for (int i = 2; i <= r2; i++) \r\n    { \r\n        if (prime_num[i] == true)  \r\n        { \r\n  \r\n           factor_count[i] = 1; \r\n           for (int j = i * 2; j <= r2; j += i)  \r\n            { \r\n                factor_count[j]++; \r\n                prime_num[j] = false; \r\n            } \r\n        } \r\n    } \r\n \r\n    int max_num = (int)factor_count[r1]; \r\n    int num = r1; \r\n  \r\n    for (int i = r1; i <= r2; i++) \r\n      {   \r\n        if (factor_count[i] > max_num) \r\n        { \r\n            max_num = (int)factor_count[i]; \r\n            num = i; \r\n        } \r\n    } \r\n    return num; \r\n} \r\n  \r\n   public static void main(String[] args) {\r\n       Scanner scan = new Scanner(System.in);\r\n       System.out.print(\"Input first integer: \");\r\n       int num1 = scan.nextInt();\r\n       System.out.print(\"Input second integer: \");\r\n       int num2 = scan.nextInt();\r\n       scan.close(); \r\n\t   if (num1>0 && num2>0 && num2>num1)\r\n\t   {\r\n          System.out.println(\"Maximum number of distinct prime factors of the said range: \"+max_distinct_primes(num1, num2));\t\t\r\n\t   }\r\n\t\t}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to find next smallest palindrome.", "exercise_solution_code": "import java.util.*;\r\n\r\nclass solution {\r\n\r\n    public static int nextPalindromeGenerate(int n)\r\n    {   \r\n        int ans=1, digit, rev_num=0, num;                \r\n       //For single digit number, next smallest palindrome is n+1       \r\n\t   if(n<10)\r\n        {   \r\n            ans=0;\r\n\t\t\treturn n+1;\r\n        }\r\n\r\n        num=n;\r\n        while(ans!=0)\r\n        {   rev_num=0;digit=0;\r\n            n=++num;\r\n\r\n            while(n>0)      //rev_numersing the number\r\n            {\r\n                digit=n%10;\r\n                rev_num=rev_num*10+digit;\r\n                n=n/10;\r\n            }\r\n\r\n            if(rev_num==num)   \r\n            {\r\n                ans=0;\r\n\t\t\t\treturn num;\r\n            }\r\n\r\n            else ans=1;\r\n        }\r\n\t\treturn num;\r\n    }\r\n\r\n    public static void main(String[] args)\r\n    {   \r\n       Scanner scan = new Scanner(System.in);\r\n       System.out.print(\"Input the number: \");\r\n       int n = scan.nextInt();\r\n       if (n>0)\r\n\t\t{\t\r\n\t\t System.out.println(\"Next smallest palindrome:\" + nextPalindromeGenerate(n));\r\n\t\t}         \r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. A fast scheme for evaluating a polynomial such as:\n-19+ 7x- 4x2 + 6x3\nwhen\nx=3\nis to arrange the computation as follows:((((0)x+6)x+(-4))x+7)x+(-19)\nWrite a Java program to compute the result from the innermost brackets.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\npublic class solution {\r\n   public static void main(String[] args){\r\n       List<Double> coeffs = new ArrayList<Double>();\r\n       coeffs.add(-19.0);\r\n       coeffs.add(7.0);\r\n       coeffs.add(-4.0);\r\n       coeffs.add(6.0);\r\n       System.out.println(polyEval(coeffs, 3));\r\n   }\r\n   public static double polyEval(List<Double> coefficients, double x) {\r\n       Collections.reverse(coefficients);\r\n       Double accumulator = coefficients.get(0);\r\n       for (int i = 1; i < coefficients.size(); i++) {\r\n           accumulator = (accumulator * x) + (Double) coefficients.get(i);\r\n       }\r\n       return accumulator;\r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to calculate the Binomial Coefficient of two positive numbers.", "exercise_solution_code": "import java.util.*;\r\n\r\nclass solution {\r\n\r\n  private static long binomial_Coefficient(int n, int k)\r\n    {\r\n        if (k>n-k)\r\n            k=n-k;\r\n\r\n        long result = 1;\r\n        for (int i=1, m=n; i<=k; i++, m--)\r\n            result = result*m/i;\r\n        return result;\r\n    }\r\n\r\n    public static void main(String[] args)\r\n    {   \r\n      Scanner scan = new Scanner(System.in);\r\n       System.out.print(\"Input the first number(n): \");\r\n       int n = scan.nextInt();\r\n\t   System.out.print(\"Input the second number(k): \");\r\n       int k = scan.nextInt();\r\n       if (n>0 && k>0)\r\n\t\t{\t\r\n\t\t System.out.println(\"Binomial Coefficient of the said numbers \" + binomial_Coefficient(n, k));\r\n\t\t}         \r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to calculate e raise to the power x using sum of first n terms of Taylor Series.", "exercise_solution_code": "import java.util.*;\r\n\r\nclass solution {\r\n\r\n   static float Taylor_exponential(int n, float x) \r\n    { \r\n        float exp_sum = 1;  \r\n   \r\n        for (int i = n - 1; i > 0; --i ) \r\n            exp_sum = 1 + x * exp_sum / i; \r\n   \r\n        return exp_sum; \r\n    } \r\n\r\n    public static void main(String[] args)\r\n    {   \r\n       Scanner scan = new Scanner(System.in);\r\n       System.out.print(\"Input n: \");\r\n       int n = scan.nextInt();\r\n\t   System.out.print(\"Input x: \");\r\n       float x = scan.nextInt();\r\n       if (n>0 && x>0)\r\n\t\t{\t\r\n\t\t System.out.println(\"e^x = \"+Taylor_exponential(n,x)); \r\n\t\t}         \r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to print all prime factors of a given number.", "exercise_solution_code": "import java.util.*;\r\nclass solution {\r\n    public static void main(String[] args)\r\n    {   \r\n      Scanner sc=new Scanner(System.in);\r\n      Scanner scan = new Scanner(System.in);\r\n      System.out.print(\"Input a number: \");\r\n      int n = scan.nextInt();\r\n\t  if (n>0)\r\n\t  {\t\r\n       while (n%2==0) \r\n        { \r\n            System.out.print(2 + \" \"); \r\n            n /= 2; \r\n        } \r\n  \r\n        for (int i = 3; i <= Math.sqrt(n); i+= 2) \r\n        { \r\n            while (n%i == 0) \r\n            { \r\n                System.out.print(i + \" \"); \r\n                n /= i; \r\n            } \r\n        } \r\n        if (n > 2) \r\n            System.out.print(n); \r\n       }\r\n\t}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-26.php"}, {"exercise_number": 27, "exercise_content": "27. Write a Java program to check if a given number is Fibonacci number or not.Java Practice online", "exercise_solution_code": "import java.util.*;\r\n\r\nclass solution {\r\n  static boolean isPerfectSquare(int x)\r\n    {\r\n       int s = (int) Math.sqrt(x); \r\n       return (s*s == x);\r\n     }\r\n  \r\n   static boolean isFibonacci(int x)\r\n      {\r\n         return isPerfectSquare(5*x*x + 4) ||\r\n           isPerfectSquare(5*x*x - 4);\r\n     }\r\n\r\n    public static void main(String[] args)\r\n    {   \r\n      Scanner scan = new Scanner(System.in);\r\n      System.out.print(\"Input a number: \");\r\n      int n = scan.nextInt();\t       \r\n\t  if (n>0)\r\n\t\t{\t\r\n\t\t System.out.println(\"Is Fibonacci number? \"+isFibonacci(n)); \r\n\t\t}         \r\n   }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/math/java-math-exercise-27.php"}], "Sorting": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to sort an array of given integers using Quick sort Algorithm. \nQuick sort is a comparison sort, meaning that it can sort items of any type for which a \"less-than\" relation (formally, a total order) is defined.", "exercise_solution_code": "import java.util.Arrays;\r\npublic class QuickSort {\r\n     \r\n    private int temp_array[];\r\n    private int len;\r\n \r\n    public void sort(int[] nums) {\r\n         \r\n        if (nums == null || nums.length == 0) {\r\n            return;\r\n        }\r\n        this.temp_array = nums;\r\n        len = nums.length;\r\n        quickSort(0, len - 1);\r\n    }\r\n     private void quickSort(int low_index, int high_index) {\r\n         \r\n        int i = low_index;\r\n        int j = high_index;\r\n        // calculate pivot number \r\n        int pivot = temp_array[low_index+(high_index-low_index)/2];\r\n        // Divide into two arrays\r\n        while (i <= j) {\r\n               while (temp_array[i] < pivot) {\r\n                i++;\r\n            }\r\n            while (temp_array[j] > pivot) {\r\n                j--;\r\n            }\r\n            if (i <= j) {\r\n                exchangeNumbers(i, j);\r\n                //move index to next position on both sides\r\n                i++;\r\n                j--;\r\n            }\r\n        }\r\n        // call quickSort() method recursively\r\n        if (low_index < j)\r\n            quickSort(low_index, j);\r\n        if (i < high_index)\r\n            quickSort(i, high_index);\r\n    }\r\n \r\n    private void exchangeNumbers(int i, int j) {\r\n        int temp = temp_array[i];\r\n        temp_array[i] = temp_array[j];\r\n        temp_array[j] = temp;\r\n    }\r\n     \r\n     // Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        QuickSort ob = new QuickSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.sort(nums);\r\n        System.out.println(\"Sorted Array\");\r\n        System.out.println(Arrays.toString(nums));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to sort an array of given integers using the Bubble sorting Algorithm. \nAccording to Wikipedia \"Bubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order. The pass through the list is repeated until no swaps are needed, which indicates that the list is sorted. The algorithm, which is a comparison sort, is named for the way smaller elements \"bubble\" to the top of the list. Although the algorithm is simple, it is too slow and impractical for most problems even when compared to insertion sort. It can be practical if the input is usually in sort order but may occasionally have some out-of-order elements nearly in position.\"", "exercise_solution_code": "import java.util.Arrays;\r\nclass BubbleSort\r\n{\r\n    void bubbleSort(int nums[])\r\n    {\r\n        int n = nums.length;\r\n        for (int i = 0; i < n-1; i++)\r\n            for (int j = 0; j < n-i-1; j++)\r\n                if (nums[j] > nums[j+1])\r\n                {\r\n                    // swap temp and nums[i]\r\n                    int temp = nums[j];\r\n                    nums[j] = nums[j+1];\r\n                    nums[j+1] = temp;\r\n                }\r\n    }\r\n \r\n    // Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        BubbleSort ob = new BubbleSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.bubbleSort(nums);\r\n        System.out.println(\"Sorted Array\");\r\n        System.out.println(Arrays.toString(nums));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to sort an array of given integers using Radix sort Algorithm. \nAccording to Wikipedia \"In computer science,\u00a0radix sort\u00a0is a non-comparative integer\u00a0sorting\u00a0algorithm that\u00a0sorts\u00a0data with integer keys by grouping keys by the individual digits which share the same significant position and value\".", "exercise_solution_code": "//https://bit.ly/2MJHo7J\r\nimport java.util.Arrays;\r\npublic class RadixSort {\r\n    public static void sort(int[] array) {\r\n        RadixSort.sort(array, 10);\r\n    }\r\n\r\n    public static void sort(int[] array, int radix) {\r\n        if (array.length == 0) {\r\n            return;\r\n        }\r\n\r\n        // Determine minimum and maximum values\r\n        int minValue = array[0];\r\n        int maxValue = array[0];\r\n        for (int i = 1; i < array.length; i++) {\r\n            if (array[i] < minValue) {\r\n                minValue = array[i];\r\n            } else if (array[i] > maxValue) {\r\n                maxValue = array[i];\r\n            }\r\n        }\r\n\r\n        // Perform counting sort on each exponent/digit, starting at the least\r\n        // significant digit\r\n        int exponent = 1;\r\n        while ((maxValue - minValue) / exponent >= 1) {\r\n            RadixSort.countingSortByDigit(array, radix, exponent, minValue);\r\n            exponent *= radix;\r\n        }\r\n    }\r\n\r\n    private static void countingSortByDigit(\r\n            int[] array, int radix, int exponent, int minValue) {\r\n        int bucketIndex;\r\n        int[] buckets = new int[radix];\r\n        int[] output = new int[array.length];\r\n\r\n        // Initialize bucket\r\n        for (int i = 0; i < radix; i++) {\r\n            buckets[i] = 0;\r\n        }\r\n\r\n        // Count frequencies\r\n        for (int i = 0; i < array.length; i++) {\r\n            bucketIndex = (int)(((array[i] - minValue) / exponent) % radix);\r\n            buckets[bucketIndex]++;\r\n        }\r\n\r\n        // Compute cumulates\r\n        for (int i = 1; i < radix; i++) {\r\n            buckets[i] += buckets[i - 1];\r\n        }\r\n\r\n        // Move records\r\n        for (int i = array.length - 1; i >= 0; i--) {\r\n            bucketIndex = (int)(((array[i] - minValue) / exponent) % radix);\r\n            output[--buckets[bucketIndex]] = array[i];\r\n        }\r\n\r\n        // Copy back\r\n        for (int i = 0; i < array.length; i++) {\r\n            array[i] = output[i];\r\n        }\r\n    }\r\n\t// Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        RadixSort ob = new RadixSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.sort(nums);\r\n         System.out.println(\"Sorted Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        }        \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to sort an array of given integers using Merge sort Algorithm. \nAccording to Wikipedia \"Merge sort (also commonly spelled mergesort) is an O (n log n) comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the implementation preserves the input order of equal elements in the sorted output.\"", "exercise_solution_code": "import java.util.Arrays;  \r\nclass MergeSort\r\n{\r\n    void merge(int nums[], int left, int m, int right)\r\n    {\r\n        int n1 = m - left + 1;\r\n        int n2 = right - m;\r\n \r\n        int Left_part_arra[] = new int [n1];\r\n        int Right_part_arra[] = new int [n2];\r\n \r\n        for (int i=0; i<n1; ++i)\r\n            Left_part_arra[i] = nums[left + i];\r\n        for (int j=0; j<n2; ++j)\r\n            Right_part_arra[j] = nums[m + 1+ j];\r\n\r\n        int i = 0, j = 0;\r\n \r\n        int k = left;\r\n        while (i < n1 && j < n2)\r\n        {\r\n            if (Left_part_arra[i] <= Right_part_arra[j])\r\n            {\r\n                nums[k] = Left_part_arra[i];\r\n                i++;\r\n            }\r\n            else\r\n            {\r\n                nums[k] = Right_part_arra[j];\r\n                j++;\r\n            }\r\n            k++;\r\n        }\r\n \r\n        while (i < n1)\r\n        {\r\n            nums[k] = Left_part_arra[i];\r\n            i++;\r\n            k++;\r\n        }\r\n \r\n        while (j < n2)\r\n        {\r\n            nums[k] = Right_part_arra[j];\r\n            j++;\r\n            k++;\r\n        }\r\n    }\r\n \r\n    // merge()\r\n    void sort(int nums[], int left, int right)\r\n    {\r\n        if (left < right)\r\n        {\r\n            // Find the middle point\r\n            int m = (left+right)/2;\r\n \r\n            // Sort first halve\r\n            sort(nums, left, m);\r\n\t\t\t// Sort second halve\r\n            sort(nums , m+1, right);\r\n \r\n            // Merge the sorted halves\r\n            merge(nums, left, m, right);\r\n        }\r\n    }\r\n \r\n\t// Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        MergeSort ob = new MergeSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.sort(nums, 0, nums.length-1);\r\n         System.out.println(\"Sorted Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        }    \r\n    \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to sort an array of given integers using Heap sort Algorithm.In computer science, heapsort (invented by J. W. J. Williams in 1964) is a comparison-based sorting algorithm. Heapsort can be thought of as an improved selection sort: like that algorithm, it divides its input into a sorted and an unsorted region, and it interactively shrinks the unsorted region by extracting the largest element and moving that to the sorted region. The improvement consists of the use of a heap data structure rather than a linear-time search to find the maximum. Although somewhat slower in practice on most machines than a well-implemented quicksort, it has the advantage of a more favorable worst-case O(n log n) runtime. Heapsort is an in-place algorithm, but it is not a stable sort.", "exercise_solution_code": "// Ref.: https://bit.ly/2DBQsFI\r\nfunction heapSort(a, count) is\r\n   input: an unordered array a of length count\r\n \r\n   (first place a in max-heap order)\r\n   heapify(a, count)\r\n \r\n   end := count - 1\r\n   while end > 0 do\r\n      (swap the root(maximum value) of the heap with the\r\n       last element of the heap)\r\n      swap(a[end], a[0])\r\n      (decrement the size of the heap so that the previous\r\n       max value will stay in its proper place)\r\n      end := end - 1\r\n      (put the heap back in max-heap order)\r\n      siftDown(a, 0, end)\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to sort an array of given integers using Selection Sort Algorithm.According to Wikipedia \"In computer science, selection sort is a sorting algorithm, specifically an in-place comparison sort. It has O(n2) time complexity, making it inefficient on large lists, and generally performs worse than the similar insertion sort\".", "exercise_solution_code": "import  java.util.Arrays;\r\n  public class  SelectionSort {\r\n  public static void sort(int[] nums)\r\n  {\r\n  for(int currentPlace = 0;currentPlace<nums.length-1;currentPlace++){\r\n  int smallest =  Integer.MAX_VALUE;\r\n  int smallestAt =  currentPlace+1;\r\n  for(int check =  currentPlace; check<nums.length;check++){\r\n  if(nums[check]<smallest){\r\n  smallestAt  = check;\r\n  smallest  = nums[check];\r\n  }\r\n  }\r\n  int temp =  nums[currentPlace];\r\n  nums[currentPlace]  = nums[smallestAt];\r\n  nums[smallestAt]  = temp;\r\n  }\r\n  }\r\n  // Method to test above\r\n  public static void main(String args[])\r\n  {\r\n  SelectionSort ob = new SelectionSort();\r\n  int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n  System.out.println(\"Original  Array:\");\r\n  System.out.println(Arrays.toString(nums));\r\n  ob.sort(nums);\r\n  System.out.println(\"Sorted  Array:\");\r\n  System.out.println(Arrays.toString(nums));\r\n  }\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \r\n  }\r\n  ", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program to sort an array of given integers using Insertion sort Algorithm.Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time. It is much less efficient on large lists than other algorithms such as quicksort, heapsort, or merge sort.", "exercise_solution_code": "import java.util.Arrays;\r\n\r\npublic class InsertionSort {\r\n  void InsertionSort(int[] nums){\r\n  for(int i = 1; i < nums.length; i++){\r\n    int value = nums[i];\r\n    int j = i - 1;\r\n    while(j >= 0 && nums[j] > value){\r\n      nums[j + 1] = nums[j];\r\n      j = j - 1;\r\n    }\r\n    nums[j + 1] = value;\r\n  }\r\n}\r\n    \r\n\t// Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        InsertionSort ob = new InsertionSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.InsertionSort(nums);\r\n        System.out.println(\"Sorted Array\");\r\n        System.out.println(Arrays.toString(nums));\r\n    }\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to sort an array of positive integers using the Bead Sort Algorithm. \nAccording to Wikipedia \"Bead sort, also called gravity sort, is a natural sorting algorithm, developed by Joshua J. Arulanandham, Cristian S. Calude and Michael J. Dinneen in 2002, and published in The Bulletin of the European Association for Theoretical Computer Science. Both digital and analog hardware implementations of bead sort can achieve a sorting time of O(n); however, the implementation of this algorithm tends to be significantly slower in software and can only be used to sort lists of positive integers. Also, it would seem that even in the best case, the algorithm requires O(n2) space\".", "exercise_solution_code": "public class BeadSort \r\n{\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tBeadSort now=new BeadSort();\r\n\t\tint[] arr=new int[(int)(Math.random()*11)+5];\r\n\t\tfor(int i=0;i<arr.length;i++)\r\n\t\t\tarr[i]=(int)(Math.random()*10);\r\n\t\tSystem.out.print(\"Unsorted: \");\r\n\t\tnow.display1D(arr);\r\n \r\n\t\tint[] sort=now.beadSort(arr);\r\n\t\tSystem.out.print(\"Sorted: \");\r\n\t\tnow.display1D(sort);\r\n\t}\r\n\tint[] beadSort(int[] arr)\r\n\t{\r\n\t\tint max=0;\r\n\t\tfor(int i=0;i<arr.length;i++)\r\n\t\t\tif(arr[i]>max)\r\n\t\t\t\tmax=arr[i];\r\n \r\n\t\t//Set up abacus\r\n\t\tchar[][] grid=new char[arr.length][max];\r\n\t\tint[] levelcount=new int[max];\r\n\t\tfor(int i=0;i<max;i++)\r\n\t\t{\r\n\t\t\tlevelcount[i]=0;\r\n\t\t\tfor(int j=0;j<arr.length;j++)\r\n\t\t\t\tgrid[j][i]='_';\r\n\t\t}\r\n\t\t/*\r\n\t\tdisplay1D(arr);\r\n\t\tdisplay1D(levelcount);\r\n\t\tdisplay2D(grid);\r\n\t\t*/\r\n \r\n\t\t//Drop the beads\r\n\t\r\n\t\tfor(int i=0;i<arr.length;i++)\r\n\t\t{\r\n\t\t\tint num=arr[i];\r\n\t\t\tfor(int j=0;num>0;j++)\r\n\t\t\t{\r\n\t\t\t\tgrid[levelcount[j]++][j]='*';\r\n\t\t\t\tnum--;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println();\r\n\t\tdisplay2D(grid);\r\n\t\t//Count the beads\r\n\t\tint[] sorted=new int[arr.length];\r\n\t\tfor(int i=0;i<arr.length;i++)\r\n\t\t{\r\n\t\t\tint putt=0;\r\n\t\t\tfor(int j=0;j<max&&grid[arr.length-1-i][j]=='*';j++)\r\n\t\t\t\tputt++;\r\n\t\t\tsorted[i]=putt;\r\n\t\t}\r\n \r\n\t\treturn sorted;\r\n\t}\r\n\tvoid display1D(int[] arr)\r\n\t{\r\n\t\tfor(int i=0;i<arr.length;i++)\r\n\t\t\tSystem.out.print(arr[i]+\" \");\r\n\t\tSystem.out.println();\r\n\t}\r\n\tvoid display1D(char[] arr)\r\n\t{\r\n\t\tfor(int i=0;i<arr.length;i++)\r\n\t\t\tSystem.out.print(arr[i]+\" \");\r\n\t\tSystem.out.println();\r\n\t}\r\n\tvoid display2D(char[][] arr)\r\n\t{\r\n\t\tfor(int i=0;i<arr.length;i++)\r\n\t\t\tdisplay1D(arr[i]);\r\n\t\tSystem.out.println();\r\n\t}\r\n}\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program to sort an array of positive integers using the BogoSort Sort Algorithm.In computer science, bogosort is a particularly ineffective sorting algorithm based on the generate and test paradigm. The algorithm successively generates permutations of its input until it finds one that is sorted. It is not useful for sorting but may be used for educational purposes, to contrast it with other more realistic algorithms.", "exercise_solution_code": "public class BogoSort \r\n{\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\t//Enter array to be sorted here\r\n\t\tint[] arr={4,5,6,0,7,8,9,1,2,3};\r\n \r\n\t\tBogoSort now=new BogoSort();\r\n\t\tSystem.out.print(\"Unsorted: \");\r\n\t\tnow.display1D(arr);\r\n \r\n\t\tnow.bogo(arr);\r\n \r\n\t\tSystem.out.print(\"Sorted: \");\r\n\t\tnow.display1D(arr);\r\n\t}\r\n\tvoid bogo(int[] arr)\r\n\t{\r\n\t\t//Keep a track of the number of shuffles\r\n\t\tint shuffle=1;\r\n\t\tfor(;!isSorted(arr);shuffle++)\r\n\t\t\tshuffle(arr);\r\n\t\t//Boast\r\n\t\tSystem.out.println(\"This took \"+shuffle+\" shuffles.\");\r\n\t}\r\n\tvoid shuffle(int[] arr)\r\n\t{\r\n\t\t//Standard Fisher-Yates shuffle algorithm\r\n\t\tint i=arr.length-1;\r\n\t\twhile(i>0)\r\n\t\t\tswap(arr,i--,(int)(Math.random()*i));\r\n\t}\r\n\tvoid swap(int[] arr,int i,int j)\r\n\t{\r\n\t\tint temp=arr[i];\r\n\t\tarr[i]=arr[j];\r\n\t\tarr[j]=temp;\r\n\t}\r\n\tboolean isSorted(int[] arr)\r\n\t{\r\n \r\n\t\tfor(int i=1;i<arr.length;i++)\r\n\t\t\tif(arr[i]<arr[i-1])\r\n\t\t\t\treturn false;\r\n\t\treturn true;\r\n\t}\r\n\tvoid display1D(int[] arr)\r\n\t{\r\n\t\tfor(int i=0;i<arr.length;i++)\r\n\t\t\tSystem.out.print(arr[i]+\" \");\r\n\t\tSystem.out.println();\r\n\t} \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to sort an array of positive integers using the Cocktail sort Algorithm.Cocktail shaker sort (also known as bidirectional bubble sort, cocktail sort, shaker sort, ripple sort, shuffle sort, or shuttle sort ) is a variation of bubble sort that is both a stable sorting algorithm and a comparison sort. The algorithm differs from a bubble sort in that it sorts in both directions on each pass through the list. This sorting algorithm is only marginally more difficult to implement than a bubble sort and solves the problem of turtles in bubble sorts. It provides only marginal performance improvements, and does not improve asymptotic performance; like the bubble sort, it is not of practical interest, though it finds some use in education.", "exercise_solution_code": "import java.util.Arrays;\r\nclass cocktailSort\r\n{\r\n    void cocktailSort(int nums[])\r\n    {\r\n\t  boolean swapped;\r\n\t  do {\r\n\t\tswapped = false;\r\n\t\tfor (int i =0; i<=  nums.length  - 2;i++) {\r\n\t\t\tif (nums[ i ] > nums[ i + 1 ]) {\r\n\t\t\t\t//test if two elements are in the wrong order\r\n\t\t\t\tint temp = nums[i];\r\n\t\t\t\tnums[i] = nums[i+1];\r\n\t\t\t\tnums[i+1]=temp;\r\n\t\t\t\tswapped = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!swapped) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tswapped = false;\r\n\t\tfor (int i= nums.length - 2;i>=0;i--) {\r\n\t\t\tif (nums[ i ] > nums[ i + 1 ]) {\r\n\t\t\t\tint temp = nums[i];\r\n\t\t\t\tnums[i] = nums[i+1];\r\n\t\t\t\tnums[i+1]=temp;\r\n\t\t\t\tswapped = true;\r\n\t\t\t}\r\n\t\t}\r\n\t} while (swapped);\r\n}\r\n    // Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        cocktailSort ob = new cocktailSort();\r\n        int nums[] = {7, 5, 3, 2, 1, 12, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.cocktailSort(nums);\r\n        System.out.println(\"Sorted Array\");\r\n        System.out.println(Arrays.toString(nums));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to sort an array of given integers using the CombSort Algorithm.The Comb Sort is a variant of the Bubble Sort. Like the Shell sort, the Comb Sort increases the gap used in comparisons and exchanges. Some implementations use the insertion sort once the gap is less than a certain amount. The basic idea is to eliminate turtles, or small values near the end of the list, since in a bubble sort these slow the sorting down tremendously. Rabbits, large values around the beginning of the list do not pose a problem in bubble sort.", "exercise_solution_code": "import java.util.Arrays;\r\nclass CombSort {\r\n        void CombSort(int nums[]){\r\n        int gap_length = nums.length;\r\n        float shrinkFactor = 1.3f;\r\n        boolean swapped = false;\r\n\r\n        while (gap_length > 1 || swapped) {\r\n            if (gap_length > 1) {\r\n                gap_length = (int)(gap_length / shrinkFactor);\r\n            }\r\n\r\n            swapped = false;\r\n\r\n            for (int i = 0; gap_length + i < nums.length; i++) {\r\n                if (nums[i] > nums[i + gap_length]) {\r\n                    swap(nums, i, i + gap_length);\r\n                    swapped = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n     private static void swap(int nums[], int x, int y) {\r\n        Integer temp = nums[x];\r\n        nums[x] = nums[y];\r\n        nums[y] = temp;\r\n    }\r\n    // Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        CombSort ob = new CombSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.CombSort(nums);\r\n        System.out.println(\"Sorted Array\");\r\n        System.out.println(Arrays.toString(nums));\r\n    }\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to sort an array of given integers using CountingSort Algorithm.According to Wikipedia \"In computer science, counting sort is an algorithm for sorting a collection of objects according to keys that are small integers; that is, it is an integer sorting algorithm. It operates by counting the number of objects that have each distinct key value, and using arithmetic on those counts to determine the positions of each key value in the output sequence. Its running time is linear in the number of items and the difference between the maximum and minimum key values, so it is only suitable for direct use in situations where the variation in keys is not significantly greater than the number of items. However, it is often used as a subroutine in another sorting algorithm, radix sort, that can handle larger keys more efficiently\".", "exercise_solution_code": "import java.util.Arrays;\r\nclass countingSort {\r\n    void countingSort(int[] nums, int min, int max){\r\n\t  int[] ctr = new int[max - min + 1];\r\n\t  for(int number : nums){\r\n\t\tctr[number - min]++;\r\n    \t}\r\n\t  int z= 0;\r\n\t  for(int i= min;i <= max;i++){\r\n\t\t while(ctr[i - min] > 0){\r\n\t\t \tnums[z]= i;\r\n\t\t \tz++;\r\n\t\t\tctr[i - min]--;\r\n\t\t   }\r\n\t   }\r\n  }\r\n  \r\n    // Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        countingSort ob = new countingSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        int minValue = -5, maxValue = 45;\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.countingSort(nums,minValue,maxValue);\r\n        System.out.println(\"Sorted Array\");\r\n        System.out.println(Arrays.toString(nums));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to sort an array of given integers using Gnome sort Algorithm.Gnome sort is a sorting algorithm originally proposed by Dr. Hamid Sarbazi-Azad (Professor of Computer Engineering at Sharif University of Technology) in 2000 and called \"stupid sort\" (not to be confused with bogosort), and then later on described by Dick Grune and named \"gnome sort\".\nThe algorithm always finds the first place where two adjacent elements are in the wrong order, and swaps them. It takes advantage of the fact that performing a swap can introduce a new out-of-order adjacent pair only next to the two swapped elements.", "exercise_solution_code": "import java.util.Arrays;\r\nclass gnomeSort {\r\n void gnomeSort(int[] nums)\r\n  {\r\n  int i=1;\r\n  int j=2;\r\n \r\n  while(i < nums.length) {\r\n    if ( nums[i-1] <= nums[i] ) \r\n\t{\r\n      i = j; j++;\r\n    } else {\r\n      int tmp = nums[i-1];\r\n      nums[i-1] = nums[i];\r\n      nums[i--] = tmp;\r\n      i = (i==0) ? j++ : i;\r\n    }\r\n  }\r\n}\r\n  \r\n    // Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        gnomeSort ob = new gnomeSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.gnomeSort(nums);\r\n        System.out.println(\"Sorted Array\");\r\n        System.out.println(Arrays.toString(nums));\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to sort an array of given integers using Pancake sort Algorithm.Pancake sorting is the colloquial term for the mathematical problem of sorting a disordered stack of pancakes in order of size when a spatula can be inserted at any point in the stack and used to flip all pancakes above it. A pancake number is the minimum number of flips required for a given number of pancakes. The problem was first discussed by American geometer Jacob E. Goodman. It is a variation of the sorting problem in which the only allowed operation is to reverse the elements of some prefix of the sequence.", "exercise_solution_code": "import java.util.Arrays;  \r\n\r\npublic class PancakeSort\r\n{\r\n   int[] heap;\r\n \r\n   public String toString() {\r\n      String info = \"\";\r\n      for (int x: heap)\r\n         info += x + \" \";\r\n      return info;\r\n   }\r\n \r\n   public void flip(int n) {\r\n      for (int i = 0; i < (n+1) / 2; ++i) {\r\n         int tmp = heap[i];\r\n         heap[i] = heap[n-i];\r\n         heap[n-i] = tmp;\r\n      }      \r\n     // System.out.println(\"flip(0..\" + n + \"): \" + toString());\r\n   }\r\n \r\n   public int[] minmax(int n) {\r\n      int xm, xM;\r\n      xm = xM = heap[0];\r\n      int posm = 0, posM = 0;\r\n \r\n      for (int i = 1; i < n; ++i) {\r\n         if (heap[i] < xm) {\r\n            xm = heap[i];\r\n            posm = i;\r\n         }\r\n         else if (heap[i] > xM) {\r\n            xM = heap[i];\r\n            posM = i;\r\n         }\r\n      }\r\n      return new int[] {posm, posM};\r\n   }\r\n \r\n   public void sort(int n, int dir) {\r\n      if (n == 0) return;\r\n \r\n      int[] mM = minmax(n);\r\n      int bestXPos = mM[dir];\r\n      int altXPos = mM[1-dir];\r\n      boolean flipped = false;\r\n \r\n      if (bestXPos == n-1) {\r\n         --n;\r\n      }\r\n      else if (bestXPos == 0) {\r\n         flip(n-1);\r\n         --n;\r\n      }\r\n      else if (altXPos == n-1) {\r\n         dir = 1-dir;\r\n         --n;\r\n         flipped = true;\r\n      }\r\n      else {\r\n         flip(bestXPos);      }\r\n      sort(n, dir);\r\n \r\n      if (flipped) {\r\n         flip(n);\r\n      }\r\n   }\r\n \r\n   PancakeSort(int[] numbers) {\r\n      heap = numbers;\r\n      sort(numbers.length, 1);\r\n   } \r\n \r\n   public static void main(String[] args) {\r\n      int numbers[] = {7, -5, 3, 2, 1, 0, 45};\r\n      System.out.println(\"Original Array:\");\r\n      System.out.println(Arrays.toString(numbers));\r\n      PancakeSort pancakes = new PancakeSort(numbers);\r\n      System.out.println(\"Sorted Array:\");\r\n      System.out.println(Arrays.toString(numbers));\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to sort an array of given integers using Permutation sort Algorithm.Implement a permutation sort, which proceeds by generating the possible permutations of the input array/list until discovering the sorted one.", "exercise_solution_code": "import java.util.List;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\n \r\npublic class PermutationSort \r\n{\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tint[] a={7, -5, 3, 2, 1, 0, 45};\r\n\t\tSystem.out.println(\"Unsorted: \" + Arrays.toString(a));\r\n\t\ta=pSort(a);\r\n\t\tSystem.out.println(\"Sorted: \" + Arrays.toString(a));\r\n\t}\r\n\tpublic static int[] pSort(int[] a)\r\n\t{\r\n\t\tList<int[]> list=new ArrayList<int[]>();\r\n\t\tpermute(a,a.length,list);\r\n\t\tfor(int[] x : list)\r\n\t\t\tif(isSorted(x))\r\n\t\t\t\treturn x;\r\n\t\treturn a;\r\n\t}\r\n\tprivate static void permute(int[] a, int n, List<int[]> list) \r\n\t{\r\n\t\tif (n == 1) \r\n\t\t{\r\n\t\t\tint[] b=new int[a.length];\r\n\t\t\tSystem.arraycopy(a, 0, b, 0, a.length);\r\n\t\t\tlist.add(b);\r\n\t\t    return;\r\n\t\t}\r\n\t\tfor (int i = 0; i < n; i++) \r\n\t\t{\r\n\t\t        swap(a, i, n-1);\r\n\t\t        permute(a, n-1, list);\r\n\t\t        swap(a, i, n-1);\r\n\t\t }\r\n\t}\r\n\tprivate static boolean isSorted(int[] a)\r\n\t{\r\n\t\tfor(int i=1;i<a.length;i++)\r\n\t\t\tif(a[i-1]>a[i])\r\n\t\t\t\treturn false;\r\n\t\treturn true;\r\n\t}\r\n\tprivate static void swap(int[] arr,int i, int j)\r\n\t{\r\n\t\tint temp=arr[i];\r\n\t\tarr[i]=arr[j];\r\n\t\tarr[j]=temp;\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to sort an array of given integers Shell Sort Algorithm.According to Wikipedia \"Shell sort or Shell's method, is an in-place comparison sort. It can be seen as either a generalization of sorting by exchange (bubble sort) or sorting by insertion (insertion sort). The method starts by sorting pairs of elements far apart from each other, then progressively reducing the gap between elements to be compared. Starting with far apart elements can move some out-of-place elements into position faster than a simple nearest neighbor exchange.\"", "exercise_solution_code": "import java.util.Arrays;\r\npublic class ShellSort {   \r\n    public static void shell(int[] a) {\r\n\tint increment = a.length / 2;\r\n\twhile (increment > 0) {\r\n\t\tfor (int i = increment; i < a.length; i++) {\r\n\t\t\tint j = i;\r\n\t\t\tint temp = a[i];\r\n\t\t\twhile (j >= increment && a[j - increment] > temp) {\r\n\t\t\t\ta[j] = a[j - increment];\r\n\t\t\t\tj = j - increment;\r\n\t\t\t}\r\n\t\t\ta[j] = temp;\r\n\t\t}\r\n\t\tif (increment == 2) {\r\n\t\t\tincrement = 1;\r\n\t\t} else {\r\n\t\t\tincrement *= (5.0 / 11);\r\n\t\t}\r\n\t}\r\n    }\r\n\r\n\t// Method to test above\r\n    public static void main(String args[])\r\n    {\r\n        ShellSort ob = new ShellSort();\r\n        int nums[] = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(\"Original Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        ob.shell(nums);\r\n        System.out.println(\"Sorted Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n        }        \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to sort an array of given non-negative integers using Sleep Sort Algorithm.Sleep sort works by starting a separate task for each item to be sorted, where each task sleeps for an interval corresponding to the item's sort key, then emits the item. Items are then collected sequentially in time.", "exercise_solution_code": "import java.util.concurrent.CountDownLatch;\r\n \r\npublic class SleepSort {\r\n\tpublic static void sleepSortAndPrint(int[] nums) {\r\n\t\tfinal CountDownLatch doneSignal = new CountDownLatch(nums.length);\r\n\t\tfor (final int num : nums) {\r\n\t\t\tnew Thread(new Runnable() {\r\n\t\t\t\tpublic void run() {\r\n\t\t\t\t\tdoneSignal.countDown();\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdoneSignal.await();\r\n \r\n\t\t\t\t\t\t//using straight milliseconds produces unpredictable\r\n\t\t\t\t\t\t//results with small numbers\r\n\t\t\t\t\t\t//using 1000 here gives a nifty demonstration\r\n\t\t\t\t\t\tThread.sleep(num * 500);\r\n\t\t\t\t\t\tSystem.out.println(num);\r\n\t\t\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).start();\r\n\t\t}\r\n\t}\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] nums ={7, 3, 2, 1, 0, 5};\r\n\t\tfor (int i = 0; i < args.length; i++)\r\n\t\t\tnums[i] = Integer.parseInt(args[i]);\r\n\t\tsleepSortAndPrint(nums);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to sort an array of given non-negative integers using Stooge Sort Algorithm.Stooge sort\u00a0is a\u00a0recursive\u00a0sorting algorithm\u00a0with a\u00a0time complexity\u00a0of\u00a0O(nlog 3 / log 1.5\u00a0) = O(n2.7095...). The running time of the algorithm is thus slower compared to efficient sorting algorithms, such as\u00a0Merge sort, and is even slower than\u00a0Bubble sort.", "exercise_solution_code": "import java.util.Arrays;\r\n public class Stooge {\r\n    public static void main(String[] args) {\r\n      System.out.println(\"Original Array:\");\r\n        int[] nums = {7, -5, 3, 2, 1, 0, 45};\r\n        System.out.println(Arrays.toString(nums));\r\n        stoogeSort(nums);\r\n        System.out.println(\"Sorted Array:\");\r\n        System.out.println(Arrays.toString(nums));\r\n    }\r\n \r\n    public static void stoogeSort(int[] L) {\r\n        stoogeSort(L, 0, L.length - 1);\r\n    }\r\n \r\n    public static void stoogeSort(int[] L, int i, int j) {\r\n        if (L[j] < L[i]) {\r\n            int tmp = L[i];\r\n            L[i] = L[j];\r\n            L[j] = tmp;\r\n        }\r\n        if (j - i > 1) {\r\n            int t = (j - i + 1) / 3;\r\n            stoogeSort(L, i, j - t);\r\n            stoogeSort(L, i + t, j);\r\n            stoogeSort(L, i, j - t);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to sort an array of given integers using Bucket Sort Algorithm.Bucket sort is a sorting algorithm that works by distributing the elements of an array into a number of buckets. Each bucket is then sorted individually, either using a different sorting algorithm, or by recursively applying the bucket sorting algorithm. It is a distribution sort, a generalization of pigeonhole sort, and is a cousin of radix sort in the most-to-least significant digit flavor.", "exercise_solution_code": "import java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Random;\r\nimport java.util.Arrays;\r\n/*Ref. https://bit.ly/3mAyUj3 */\r\n/** Wikipedia: https://en.wikipedia.org/wiki/Bucket_sort */\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n    int[] arr = new int[10];\r\n    /* generate 10 random numbers from -50 to 49 */\r\n    Random random = new Random();\r\n    for (int i = 0; i < arr.length; ++i) {\r\n      arr[i] = random.nextInt(100) - 50;\r\n    }\r\n    System.out.println(\"Original Array: \"+Arrays.toString(arr));\r\n    bucketSort(arr);\r\n    /* check array is sorted or not */\r\n    for (int i = 0, limit = arr.length - 1; i < limit; ++i) {\r\n         assert arr[i] <= arr[i + 1];\r\n       }\r\n    System.out.println(\"Sorted array: \"+Arrays.toString(arr));\r\n  }\r\n  /**\r\n   * BucketSort algorithms implements\r\n   *\r\n   * @param arr the array contains elements\r\n   */\r\n  private static void bucketSort(int[] arr) {\r\n    /* get max value of arr */\r\n    int max = max(arr);\r\n    /* get min value of arr */\r\n    int min = min(arr);\r\n    /* number of buckets */\r\n    int numberOfBuckets = max - min + 1;\r\n    List<List<Integer>> buckets = new ArrayList<>(numberOfBuckets);\r\n    /* init buckets */\r\n    for (int i = 0; i < numberOfBuckets; ++i) {\r\n      buckets.add(new ArrayList<>());\r\n    }\r\n    /* store elements to buckets */\r\n    for (int value : arr) {\r\n      int hash = hash(value, min, numberOfBuckets);\r\n      buckets.get(hash).add(value);\r\n    }\r\n    /* sort individual bucket */\r\n    for (List<Integer> bucket : buckets) {\r\n      Collections.sort(bucket);\r\n    }\r\n    /* concatenate buckets to origin array */\r\n    int index = 0;\r\n    for (List<Integer> bucket : buckets) {\r\n      for (int value : bucket) {\r\n        arr[index++] = value;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get index of bucket which of our elements gets placed into it.\r\n   *\r\n   * @param elem the element of array to be sorted\r\n   * @param min min value of array\r\n   * @param numberOfBucket the number of bucket\r\n   * @return index of bucket\r\n   */\r\n  private static int hash(int elem, int min, int numberOfBucket) {\r\n    return (elem - min) / numberOfBucket;\r\n  }\r\n  /**\r\n   * Calculate max value of array\r\n   *\r\n   * @param arr the array contains elements\r\n   * @return max value of given array\r\n   */\r\n  public static int max(int[] arr) {\r\n    int max = arr[0];\r\n    for (int value : arr) {\r\n      if (value > max) {\r\n        max = value;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  /**\r\n   * Calculate min value of array\r\n   *\r\n   * @param arr the array contains elements\r\n   * @return min value of given array\r\n   */\r\n  public static int min(int[] arr) {\r\n    int min = arr[0];\r\n    for (int value : arr) {\r\n      if (value < min) {\r\n        min = value;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/sorting/java-sorting-algorithm-exercise-19.php"}], "Search": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to find a specified element in a given array of elements using Binary Search.", "exercise_solution_code": "public class Main {\r\n     public static int binarySearch(int[] nums, int flag) {\r\n        int hi_num = nums.length - 1;\r\n        int lo_num = 0;\r\n        while (hi_num >= lo_num) {\r\n            int guess = (lo_num + hi_num) >>> 1;   \r\n            if (nums[guess] > flag) {\r\n                hi_num = guess - 1;\r\n            } else if (nums[guess] < flag) {\r\n                lo_num = guess + 1;\r\n            } else {\r\n                return guess;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n \r\n    public static void main(String[] args) {\r\n        int[] nums = {1, 5, 6, 7, 8, 11};\r\n        int search_num = 7;\r\n        int index = binarySearch(nums, search_num);\r\n        if (index == -1) {\r\n            System.out.println(search_num + \" is not in the array\");\r\n        } else {\r\n            System.out.println(search_num + \" is at index \" + index);\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/search/java-search-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2. Write a Java program to find a specified element in a given array of elements using Linear Search.", "exercise_solution_code": "public class Main {\r\n\tstatic int [] nums;\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tnums = new int[]{3,2,4,5,6,6,7,8,9,9,0,9};\r\n\t\tint result = Linear_Search(nums, 6);\r\n\t\tif(result == -1)\r\n\t\t{\r\n\t\t\tSystem.out.print(\"Not present in the array!\");\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\tSystem.out.print(\"Number found at index \"+result);\t\r\n\t}\r\n\t\r\n\tprivate static int Linear_Search(int [] nums,int search)\r\n\t{\r\n\t\tfor(int i=0;i<nums.length;i++)\r\n\t\t{\r\n\t\t\tif(nums[i]==search)\r\n\t\t\t{\r\n\t\t\t\treturn i;\r\n\t\t\t\t\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\treturn -1;\r\n\t\t\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/search/java-search-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to find a specified element in a given sorted array of elements using Jump Search.  \nFrom Wikipedia, in computer science, a jump search or block search refers to a search algorithm for ordered lists. It works by first checking all items Lkm, where \u211c \u2208 \u2135 and m is the block size, until an item is found that is larger than the search key. To find the exact position of the search key in the list a linear search is performed on the sublist L[(k-1)m, km].", "exercise_solution_code": "public class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n        int nums[] = {1, 2, 3, 4, 5, 6, 7, 8, 21, 34, 45, 91, 120, 130, 456, 564};\r\n        int search_num = 120;\r\n\r\n       // Find the index of searched item\r\n       int index_result = jumpSearch(nums, search_num);\r\n\r\n       System.out.println(search_num + \" is found at index \" + index_result);\r\n\r\n\t}\r\n\t\r\n\t    public static int jumpSearch(int[] nums, int item)\t    {\r\n\t        \r\n\t    \tint array_size = nums.length;\r\n\t \r\n\t        // Find block size to be jumped\r\n\t        int block_size = (int)Math.floor(Math.sqrt(array_size));\r\n\t \r\n\t        // If the element is present find the block where element is present\r\n\t        int prev_item = 0;\r\n\t        while (nums[Math.min(block_size, array_size)-1] < item)\r\n\t        {\r\n\t            prev_item = block_size;\r\n\t            block_size += (int)Math.floor(Math.sqrt(array_size));\r\n\t            if (prev_item >= array_size)\r\n\t                return -1;\r\n\t        }\r\n\t \r\n\t        // Using a linear search for element in block beginning with previous item\r\n\t        while (nums[prev_item] < item)\r\n\t        {\r\n\t            prev_item++;\r\n\t            if (prev_item == Math.min(block_size, array_size))\r\n\t                return -1;\r\n\t        }\r\n\t \r\n\t        // If element is found\r\n\t        if (nums[prev_item] == item)\r\n\t            return prev_item;\r\n\t \r\n\t        return -1;\r\n\t    } \t    \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/search/java-search-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to find a specified element in a given array of elements using Interpolation Search.  \nFrom Wikipedia, Interpolation search is an algorithm for searching for a key in an array that has been ordered by numerical values assigned to the keys (key values). It was first described by W. W. Peterson in 1957. Interpolation search resembles the method by which people search a telephone directory for a name (the key value by which the book's entries are ordered): in each step the algorithm calculates where in the remaining search space the sought item might be, based on the key values at the bounds of the search space and the value of the sought key, usually via a linear interpolation. The key value actually found at this estimated position is then compared to the key value being sought. If it is not equal, then depending on the comparison, the remaining search space is reduced to the part before or after the estimated position. This method will only work if calculations on the size of differences between key values are sensible.", "exercise_solution_code": "public class Main {\r\n\r\n    public static void main(String[] args){\r\n        int nums[] = {1, 2, 2, 3, 4, 5, 5, 6, 7, 8, 21, 34, 45, 91, 120, 130, 456, 564};\r\n        int searched_num = 91;\r\n\t   // Find the index of searched item\r\n        int index_result = Interpolation_search(nums, searched_num);\r\n        System.out.println(searched_num + \" is found at index \" + index_result);\r\n    }\r\n\r\n    public static int Interpolation_search(int[] nums, int searched_num) {\r\n        int low_num = 0;\r\n        int high_num = nums.length - 1;\r\n        int mid_num;\r\n        while (nums[high_num] != nums[low_num] && nums[low_num] < searched_num && nums[high_num] >= searched_num) {\r\n            mid_num = low_num + ((searched_num - nums[low_num]) * (high_num - low_num) / (nums[high_num] - nums[low_num]));\r\n            if (searched_num > nums[mid_num])\r\n                low_num = mid_num + 1;\r\n            else if (searched_num < nums[mid_num])\r\n                high_num = mid_num - 1;\r\n            else\r\n                return mid_num;\r\n        }\r\n        if (nums[low_num] == searched_num) {\r\n            return low_num;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/search/java-search-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program to find a specified element in a given sorted array of elements using Exponential search.From Wikipedia, in computer science, an exponential search (also called doubling search or galloping search or Struzik search) is an algorithm, created by Jon Bentley and Andrew Chi-Chih Yao in 1976, for searching sorted, unbounded/infinite lists. There are numerous ways to implement this with the most common being to determine a range that the search key resides in and performing a binary search within that range. This takes O(log i) where i is the position of the search key in the list, if the search key is in the list, or the position where the search key should be, if the search key is not in the list.", "exercise_solution_code": "import java.util.Arrays;\r\npublic class abc {\r\n\tpublic static void main(String[] args) {\r\n\t\tint nums[] = {1, 2, 3, 4, 5, 6, 7, 8, 21, 34, 45, 91, 120, 130, 456, 564};\r\n        int search_num = 120;\r\n\t\t\r\n\t\t// Find the index of searched item\r\n       int index_result = exponentialSearch(nums, search_num);\r\n\r\n       System.out.println(search_num + \" is found at index \" + index_result);\t\t\r\n\t\t\r\n\t}\r\n\r\n\tprivate static int exponentialSearch(int[] arr, int i) {\r\n\t\tint start_num = 0;\r\n\t\t\r\n\t\tif(arr[start_num] == i)\r\n\t\t\treturn start_num;\r\n\t\tstart_num =1;\r\n\t\twhile(start_num < arr.length && arr[start_num] <= i) {\r\n\t\t\tstart_num*=2;\r\n\t\t}\r\n\t\treturn Arrays.binarySearch(arr, start_num/2, Math.min(start_num, arr.length), i);\r\n\t}\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/search/java-search-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to find a specified element in a given array of elements using Ternary search.From Wikipedia, a ternary search algorithm is a technique in computer science for finding the minimum or maximum of a unimodal function. A ternary search determines either that the minimum or maximum cannot be in the first third of the domain or that it cannot be in the last third of the domain, then repeats on the remaining two thirds. A ternary search is an example of a divide and conquer algorithm.", "exercise_solution_code": "import java.util.*;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner scan = new Scanner(System.in);\r\n        int[] nums = new int[]{0,1,2,3,5,7,9,12,15,17,18,21,25,32,52,54,75,89,90,93,97,104,120};\r\n\t\tSystem.out.println(\"Original array:\");\r\n\t\tSystem.out.println(Arrays.toString(nums));\r\n        System.out.println(\"Input an element to search:\");\r\n        int val = scan.nextInt();\r\n        int position = ternary_search(nums, val, 0, nums.length-1);\r\n        if(position == -1)\r\n            System.out.println(\"\\n\" +val+ \" Element not found\");\r\n        else\r\n            System.out.println(\"\\n\"+ val +\" element found at position \"+ position);\r\n\r\n    }\r\n\r\n static int ternary_search(int[] nums, int val, int first_element, int last_element)\r\n    {\r\n        if(first_element > last_element)\r\n        {\r\n            return -1;\r\n        }\r\n        int mid1_element = first_element + (last_element - first_element) / 3;\r\n        int mid2_element = first_element + 2*(last_element - first_element) / 3;\r\n        if(val == nums[mid1_element])\r\n        {\r\n            return mid1_element;\r\n        }\r\n        else if(val == nums[mid2_element])\r\n        {\r\n            return mid2_element;\r\n        }\r\n        else if(val > nums[mid1_element])\r\n        {\r\n            first_element = mid1_element+1;\r\n        }\r\n        else if(val < nums[mid2_element])\r\n        {\r\n            last_element = mid2_element-1;\r\n        }\r\n        return ternary_search(nums, val, first_element, last_element);\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/search/java-search-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Given is a 2-dimensional integer array [0..m-1, 0..n-1], each row and column of which is in ascending order (see example)\n\nWrite a Java program to find the row, column position of a specified number (row, column position) in a given 2-dimensional array.", "exercise_solution_code": "import java.util.*;\r\npublic class abc {\r\n\r\n  public static void main(String[] args) {\r\n   int nums[][] = {{12, 20, 30, 40}, \r\n                  {15, 25, 35, 45}, \r\n                  {24, 29, 39, 51}, \r\n                  {35, 30, 39, 50}, \r\n                  {50, 60, 75, 72}}; \r\n\t\t\t   \r\n\t int rows = 5;    \r\n\t int search_element = 39;\t\t   \r\n     int ans[] = Saddleback(nums, rows - 1, 0, search_element);\r\n        System.out.println(\"Position of \"+search_element+\" in the matrix is (\"+ans[0] + \",\" + ans[1]+\")\");\t\t\t   \r\n    } \r\n\r\n    /**\r\n     * @param nums, the matrix.  \r\n     * @param row the current row.\r\n     * @param col the current column.\r\n     * @param search_element  the element that we want to search for.\r\n     * @return value: If found the index(row and column) of the element.\r\n     *  else return (-1 -1).\r\n     */\r\n    private static int[] Saddleback(int nums[][], int row, int col, int search_element) {\r\n\r\n        //numsay to store the row and column of the searched element\r\n        int element_pos[] = {-1, -1};\r\n        if (row < 0 || col >= nums[row].length) {\r\n            return element_pos;\r\n        }\r\n        if (nums[row][col] == search_element) {\r\n            element_pos[0] = row;\r\n            element_pos[1] = col;\r\n            return element_pos;\r\n        }\r\n        //move up if the current element is greater than the given element  \r\n        else if (nums[row][col] > search_element) {\r\n            return Saddleback(nums, row - 1, col, search_element);\r\n        }\r\n        //otherwise move right\r\n        return Saddleback(nums, row, col + 1, search_element);\r\n    }\r\n\r\n    /**\r\n     * Main method\r\n     *\r\n     * @param args Command line arguments\r\n     */\r\n  \r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/search/java-search-exercise-7.php"}], "Regular Expression": [{"exercise_number": 1, "exercise_content": "1. Write a Java program to check whether a string contains only a certain set of characters (in this case a-z, A-Z and 0-9).", "exercise_solution_code": "import java.util.Scanner;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"ABCDEFabcdef123450\"));\r\n\t\tSystem.out.println(validate(\"SQL\"));\t\t\r\n\t\tSystem.out.println(validate(\"Java\"));\r\n\t\tSystem.out.println(validate(\"*&%@#!}{\"));\r\n\t\tSystem.out.println(validate(\"w3resource.com\"));\r\n        }\r\n\r\n   public static boolean validate(String text) {\r\n    return text.matches(\"^[\\\\w]+$\");\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-1.php"}, {"exercise_number": 2, "exercise_content": "2.  Write a Java program that matches a string that has a p followed by zero or more q's.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"p\"));\r\n\t\tSystem.out.println(validate(\"pq\"));\r\n\t\tSystem.out.println(validate(\"pqq\"));\t\t\r\n\t\tSystem.out.println(validate(\"pqr\"));\r\n\t\tSystem.out.println(validate(\"prr\"));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t   if (text.matches(\"pq*?\"))\r\n                return \"Found a match!\";\r\n        else\r\n                return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-2.php"}, {"exercise_number": 3, "exercise_content": "3. Write a Java program to find sequences of lowercase letters joined with a underscore.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"java_exercises\"));\r\n\t\tSystem.out.println(validate(\"Java_exercises\"));\r\n\t\tSystem.out.println(validate(\"java_Exercises\"));\t\t\r\n\t\tSystem.out.println(validate(\"Java_Exercises\"));\t\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t   if (text.matches(\"^[a-z]+_[a-z]+$\"))\r\n                return \"Found a match!\";\r\n       else\r\n                return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-3.php"}, {"exercise_number": 4, "exercise_content": "4. Write a Java program to find the sequences of one upper case letter followed by lower case letters.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class Main {\r\n   public static void main(String[] args) {\r\n\t  \r\n\t    System.out.println(validate(\"Java\"));\r\n\t    System.out.println(validate(\"java\"));\r\n\t    System.out.println(validate(\"javA\"));\r\n\t    System.out.println(validate(\"JAVa\"));\r\n      System.out.println(validate(\"Ja\"));\r\n      System.out.println(validate(\"aJ\"));\t\t\r\n        }\r\n   public static String validate(String text) {\r\n\t   if (text.matches(\"[A-Z][a-z]+$\"))\r\n                return \"Found a match!\";\r\n       else\r\n                return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-4.php"}, {"exercise_number": 5, "exercise_content": "5. Write a Java program that matches a string that has a 'p' followed by anything, ending in 'q'.", "exercise_solution_code": "import java.util.Scanner;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"phkuyrt\"));\r\n\t\tSystem.out.println(validate(\"pq\"));\r\n\t\tSystem.out.println(validate(\"pccddbbjjjq\"));\r\n        System.out.println(validate(\"Jar\"));\r\n        System.out.println(validate(\"pjhut\"));\t\t\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t   if (text.matches(\"p.*?q$\"))\r\n                return \"Found a match!\";\r\n       else\r\n                return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-5.php"}, {"exercise_number": 6, "exercise_content": "6. Write a Java program to check a word contains the character 'g' in a given string.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"The quick brown fox jumps over the lazy dog.\"));\r\n\t    System.out.println(validate(\"Java Exercises.\"));\r\n\t    System.out.println(validate(\"Do humans eat gizzards?\"));\r\n\t    System.out.println(validate(\"gizzards?\"));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t    Pattern pattern = Pattern.compile(\"\\\\w*g.\\\\w*\");\r\n\t\t Matcher m = pattern.matcher(text);\r\n\t\t\r\n\t   if (m.find())\r\n                return \"Found a match!\";\r\n       else\r\n                return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-6.php"}, {"exercise_number": 7, "exercise_content": "7. Write a Java program that matches a word containing 'g', not at the start or end of the word.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"The quick brown fox jumps over the lazy dog.\"));\r\n\t\tSystem.out.println(validate(\"Java Exercises.\"));\r\n\t\tSystem.out.println(validate(\"Programming Language\"));\r\n\t\tSystem.out.println(validate(\"Do humans eat gizzards?\"));\r\n\t\tSystem.out.println(validate(\"PostgreSQL\"));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t    Pattern pattern = Pattern.compile(\"\\\\Bg\\\\B\");\r\n\t\t Matcher m = pattern.matcher(text);\r\n\t\t\r\n\t   if (m.find())\r\n                return \"Found a match!\";\r\n       else\r\n                return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-7.php"}, {"exercise_number": 8, "exercise_content": "8. Write a Java program to match a string that contains only upper and lowercase letters, numbers, and underscores.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"The quick brown fox jumps over the lazy dog.\"));\r\n\t    System.out.println(validate(\"Java_Exercises_1\"));\r\n\t    System.out.println(validate(\"Java_Exercises_11.0\"));\r\n\t    System.out.println(validate(\"w3r\"));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t    Pattern pattern = Pattern.compile(\"^[a-zA-Z0-9_]*$\");\r\n\t\t Matcher m = pattern.matcher(text);\r\n\t\t\r\n\t   if (m.find())\r\n                return \"Found a match!\";\r\n       else\r\n                return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-8.php"}, {"exercise_number": 9, "exercise_content": "9. Write a Java program where a string starts with a specific number.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"5-2345861\"));\r\n\t\tSystem.out.println(validate(\"6-2345861\"));\r\n\t\tSystem.out.println(validate(\"6-5555861\"));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t    Pattern pattern = Pattern.compile(\"^5.*$\");\r\n\t\t Matcher m = pattern.matcher(text);\r\n\t\t\r\n\t   if (m.find())\r\n                return \"Found a match!\";\r\n       else\r\n                return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-9.php"}, {"exercise_number": 10, "exercise_content": "10. Write a Java program to remove leading zeros from a given IP address.", "exercise_solution_code": "import java.util.*;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t     \r\n\t    System.out.println(validate(\"216.08.094.196\"));\r\n\t\tSystem.out.println(validate(\"08.008.0008.00008\"));\r\n\t\tSystem.out.println(validate(\"01.102.103.104\"));\r\n        }\r\n\r\n   public static String validate(String ip) {\r\n          return ip.replaceAll(\"(?<=^|\\\\.)0+(?!\\\\.|$)\",\"\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-10.php"}, {"exercise_number": 11, "exercise_content": "11. Write a Java program to check for a number at the end of a given string.", "exercise_solution_code": "import java.util.*;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    System.out.println(validate(\"abcdef\"));\r\n\t\tSystem.out.println(validate(\"3abcdef\"));\r\n        System.out.println(validate(\"abcdef9\"));\r\n\t\tSystem.out.println(validate(\"abcdef3459\"));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t    Pattern pattern = Pattern.compile(\".*[0-9]$\");\r\n\t\tMatcher m = pattern.matcher(text);\r\n\t\t\r\n\t    if (m.find())\r\n            return \"Found a match!\";\r\n        else\r\n            return \"Not matched!\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-11.php"}, {"exercise_number": 12, "exercise_content": "12. Write a Java program to replace Python with Java and code with coding in a given string.", "exercise_solution_code": "import java.util.*;\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    String text = \"Python is an interpreted high-level general-purpose programming language. \" + \r\n\t\t\"Its design philosophy emphasizes code readability with its use of significant indentation. \" +\r\n\t\t\"Its language constructs as well as its object-oriented approach aim to help programmers write\" +\r\n\t\t\"clear, logical code for small and large-scale projects.\";\r\n\t\tSystem.out.println(\"Original string:\");\r\n\t\tSystem.out.println(text);\r\n\t\tSystem.out.println(\"\\nAfter replacing Python to Java and code to coding in the said string:\");\r\n\t\tSystem.out.println(validate(text));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t   return text.replace(\"Python\", \"Java\").replace(\"code\", \"coding\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-12.php"}, {"exercise_number": 13, "exercise_content": "13. Write a Java program to find the word Python in a given string, if the word Python present in the string return Java otherwise return C++. Ignore case sensitive.", "exercise_solution_code": "import java.util.*;\r\n\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\r\n\t   \r\n\t    String text = \"python\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"New string: \"+validate(text));\r\n\t\ttext = \"JavaScript\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"New string: \"+validate(text));\r\n\t\ttext = \"PYTHON\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"New string: \"+validate(text));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t   \tString str = text.toLowerCase();\r\n\t\tif (str.contains(\"python\")) {\r\n\t\t\treturn \"Java\";\r\n\t\t} \r\n\t\treturn \"C++\";\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-13.php"}, {"exercise_number": 14, "exercise_content": "14. Write a Java program to count number of vowels in a given string using regular expression.", "exercise_solution_code": "public class test { \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"C++\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"New string: \"+validate(text));\r\n\t\ttext = \"Java\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"New string: \"+validate(text));\r\n\t\ttext = \"MID-CENTRALIZED\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"New string: \"+validate(text));\r\n\t\ttext = \"LOWERED\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"New string: \"+validate(text));\r\n        }\r\n\r\n   public static int validate(String text) {\r\n\t   return text.replaceAll(\"[^aeiouAEIOU]\", \"\").length();\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-14.php"}, {"exercise_number": 15, "exercise_content": "15. Write a Java program to remove all the vowels of a given string. Return the new string.", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"LOWERED\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"After removing vowels: New string: \"+validate(text));\r\n\t\ttext = \"Java\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"After removing vowels: New string: \"+validate(text));\r\n\t\ttext = \"MID-CENTRALIZED\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"After removing vowels: New string: \"+validate(text));\r\n\t\ttext = \"C++\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"After removing vowels: New string: \"+validate(text));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t   String result = text.replaceAll(\"(?i)[aeiou]\", \"\");\r\n\t   return result;\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-15.php"}, {"exercise_number": 16, "exercise_content": "16. Write a Java program to replace all the vowels in a given string with a specified character.", "exercise_solution_code": "public class test { \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"LOWERED\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"After replacing vowel(s) with specified Character: \"+validate(text, '#'));\r\n\t\ttext = \"Java\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"After replacing vowel(s) with specified Character: \"+validate(text, '*'));\r\n\t\ttext = \"MID-CENTRALIZED\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"After replacing vowel(s) with specified Character: \"+validate(text, '^'));\r\n\t\ttext = \"C++\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"After replacing vowel(s) with specified Character: \"+validate(text, '@'));\r\n        }\r\n\r\n   public static String validate(String text, char chr) {\r\n\t   return text.replaceAll(\"[aeiouAEIOU]\", \"\" + chr);\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-16.php"}, {"exercise_number": 17, "exercise_content": "17. Write a Java program to count the number of decimal places in a given number.", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t   String n = \"123\";\r\n\t   System.out.println(\"Original Number: \"+n);\r\n\t   System.out.println(\"Number of decimal places in the said number: \"+validate(n));\r\n\t   n = \"112.3\";\r\n    \t   System.out.println(\"\\nOriginal Number: \"+n);\r\n\t   System.out.println(\"Number of decimal places in the said number: \"+validate(n));\r\n\t   n = \"112.03\";\r\n    \t  System.out.println(\"\\nOriginal Number: \"+n);\r\n\t  System.out.println(\"Number of decimal places in the said number: \"+validate(n));\r\n\t  n = \"112.233\";\r\n    \t System.out.println(\"\\nOriginal Number: \"+n);\r\n\t System.out.println(\"Number of decimal places in the said number: \"+validate(n));\r\n        }\r\n\r\n   public static Integer validate(String n) {\r\n\t   \tif(n.contains(\".\"))\r\n\t\t\treturn n.replaceAll(\".*\\\\.(?=\\\\d?)\", \"\").length();\r\n\t\treturn 0;\r\n  }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-17.php"}, {"exercise_number": 18, "exercise_content": "18. Write a Java program to validate a personal identification number (PIN). Assume the length of a PIN number is 4, 6 or 8.", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String n = \"123\";\r\n\t\tSystem.out.println(\"Original PIN Number: \"+n);\r\n\t\tSystem.out.println(\"Is the said PIN number is valid? \"+validate(n));\r\n\t    n = \"1234\";\r\n\t\tSystem.out.println(\"Original PIN Number: \"+n);\r\n\t\tSystem.out.println(\"Is the said PIN number is valid? \"+validate(n));\r\n\t    n = \"12345\";\r\n\t\tSystem.out.println(\"Original PIN Number: \"+n);\r\n\t\tSystem.out.println(\"Is the said PIN number is valid? \"+validate(n));\t\r\n\t    n = \"123456\";\r\n\t\tSystem.out.println(\"Original PIN Number: \"+n);\r\n\t\tSystem.out.println(\"Is the said PIN number is valid? \"+validate(n));\r\n\t    n = \"1234567\";\r\n\t\tSystem.out.println(\"Original PIN Number: \"+n);\r\n\t\tSystem.out.println(\"Is the said PIN number is valid? \"+validate(n));\t    \r\n\t\tn = \"12345678\";\r\n\t\tSystem.out.println(\"Original PIN Number: \"+n);\r\n\t\tSystem.out.println(\"Is the said PIN number is valid? \"+validate(n));\r\n\t\tn = \"123456789\";\r\n\t\tSystem.out.println(\"Original PIN Number: \"+n);\r\n\t\tSystem.out.println(\"Is the said PIN number is valid? \"+validate(n));\t\t\r\n        }\r\n\r\n   public static boolean validate(String n) {\r\n\t   return n.matches(\"\\\\d{4}|\\\\d{6}|\\\\d{8}\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-18.php"}, {"exercise_number": 19, "exercise_content": "19. Write a Java program to remove the specific letters from a string and return the new string. Specific letters: \"p\", \"q\", or \"r\".", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"The quick brown fox jumps over the lazy dog.\";\r\n\t\tSystem.out.println(\"Original Text: \"+text);\r\n\t\tSystem.out.println(\"Remove p,q,r characters from the said string(if present): \"+validate(text));\r\n\t\ttext = \"Java Exercises.\";\r\n\t\tSystem.out.println(\"\\nOriginal Text: \"+text);\r\n\t\tSystem.out.println(\"Remove p,q,r characters from the said string(if present): \"+validate(text));\r\n\t\ttext = \"Java linkedlist.\";\r\n\t\tSystem.out.println(\"\\nOriginal Text: \"+text);\r\n\t\tSystem.out.println(\"Remove p,q,r characters from the said string(if present): \"+validate(text));\r\n\t    \r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t     \tString s = text.replaceAll(\"(?i)[pqr]\", \"\");\r\n    return text.equals(s) ? \"Not found.\" : s;\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-19.php"}, {"exercise_number": 20, "exercise_content": "20. Write a Java program that takes a number and set thousands separator in that number.", "exercise_solution_code": "import java.text.NumberFormat;\r\nimport java.util.Locale;\r\nimport java.text.Format;\r\n\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    int n = 100;\r\n\t\tSystem.out.println(\"Original Number: \"+n);\r\n\t\tSystem.out.println(\"Set thousands separator in the said number): \"+validate(n));\r\n\t    n = 1000;\r\n\t\tSystem.out.println(\"\\nOriginal Number: \"+n);\r\n\t\tSystem.out.println(\"Set thousands separator in the said number): \"+validate(n));\r\n\t    n = 10000;\r\n\t\tSystem.out.println(\"\\nOriginal Number: \"+n);\r\n\t\tSystem.out.println(\"Set thousands separator in the said number): \"+validate(n));\t\r\n\t    n = 100000;\r\n\t\tSystem.out.println(\"\\nOriginal Number: \"+n);\r\n\t\tSystem.out.println(\"Set thousands separator in the said number): \"+validate(n));\t\t\r\n\t    n = 1000000;\r\n\t\tSystem.out.println(\"\\nOriginal Number: \"+n);\r\n\t\tSystem.out.println(\"Set thousands separator in the said number): \"+validate(n));\t\t\r\n\t\t    \t\t    \r\n        }\r\n\r\n   public static String validate(int n) {\r\n\t\tString num = Integer.toString(n);\r\n\t\tint len = num.length();\r\n\t\tif(len < 4) {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\t//You can use any character as separator \r\n\t\treturn validate(Integer.parseInt(num.substring(0, len-3))) + '#' + num.substring(len-3);\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-20.php"}, {"exercise_number": 21, "exercise_content": "21. Write a Java program to remove all non-alphanumeric characters from a given string.", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String text =\"Java Exercises\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"After removing all non-alphanumeric characters from the said string: \"+validate(text));\r\n\t    text =\"[email\u00a0protected]^%&%(ercis*&)&es\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"After removing all non-alphanumeric characters from the said string: \"+validate(text));\t\r\n        }\r\n\r\n   public static String validate(String text) {\r\n        return text.replaceAll(\"(?i)[^A-Z]\", \"\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-21.php"}, {"exercise_number": 22, "exercise_content": "22. Write a Java program to validate a given phone number.", "exercise_solution_code": "//Ref.https://bit.ly/33gB1TY\r\npublic class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String text =\"(123)4567890\";\r\n\t\tSystem.out.println(\"Original Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\r\n\t    text =\"(123)4567890\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\r\n\t    text =\"1234567890\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\t\t\r\n\t    text =\"123-456-7890\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\t\t\r\n\t    text =\"(1234567890)\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\t\t\r\n\t    text =\"123)4567890\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\t\t\r\n\t    text =\"12345678901\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\t\t\r\n\t    text =\"(1)234567890\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\t\t\r\n\t    text =\"(123)-4567890\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\t\t\r\n\t    text =\"1\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\t\t\r\n\t    text =\"12-3456-7890\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\r\n\t    text =\"123-4567\";\r\n\t\tSystem.out.println(\"\\nOriginal Phone number: \"+text);\r\n\t\tSystem.out.println(\"Check the said Phone number is true or not! \"+validate(text));\r\n\t}\r\n   public static Boolean validate(String text) {\r\n        return text.matches(\"\\\\d{10}|(?:\\\\d{3}-){2}\\\\d{4}|\\\\(\\\\d{3}\\\\)\\\\d{3}-?\\\\d{4}\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-22.php"}, {"exercise_number": 23, "exercise_content": "23. Write a Java program to move all lower case letters to the front of a given word keeping the relative position all the letters(both upper and lower case) same.", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"Java\";\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Move all lower case letters to the front of the said word: \"+validate(text));\r\n\t\ttext = \"JavaScript\";\r\n\t\tSystem.out.println(\"\\nOriginal String: \"+text);\r\n\t\tSystem.out.println(\"Move all lower case letters to the front of the said word: \"+validate(text));\r\n\t\ttext = \"SQLite\";\r\n\t\tSystem.out.println(\"\\nOriginal String: \"+text);\r\n\t\tSystem.out.println(\"Move all lower case letters to the front of the said word: \"+validate(text));\t\t\r\n\t}\r\n\r\n   public static String validate(String text) {\r\n        return text.replaceAll(\"[A-Z]\", \"\") + text.replaceAll(\"[a-z]\", \"\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-23.php"}, {"exercise_number": 24, "exercise_content": "24. Write a Java program to separate consonants and vowels from a given string.", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"Java\";\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Separate consonants and vowels of the said string: \"+validate(text));\r\n\t\ttext = \"JavaScript\";\r\n\t\tSystem.out.println(\"\\nOriginal String: \"+text);\r\n\t\tSystem.out.println(\"Separate consonants and vowels of the said string: \"+validate(text));\r\n\t\ttext = \"SQLite\";\r\n\t\tSystem.out.println(\"\\nOriginal String: \"+text);\r\n\t\tSystem.out.println(\"Separate consonants and vowels of the said string: \"+validate(text));\t\t\r\n\t}\r\n\r\n   public static String validate(String text) {\r\n\t\tString text1 = text.replaceAll(\"(?i)[^aeiou]\", \"\");\r\n\t\tString text2 = text.replaceAll(\"(?i)[aeiou]\", \"\");\r\n\t\treturn text2 + text1;\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-24.php"}, {"exercise_number": 25, "exercise_content": "25. Write a Java program to get last n vowels of a given string.", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"Java\";\r\n\t\tint n = 2;\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Last \"+ n + \" vowels of a given string: \"+validate(text,n));\r\n\t\ttext = \"JavaScript\";\r\n\t\tn = 2;\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Last \"+ n + \" vowels of a given string: \"+validate(text,n));\r\n\t\tn = 3;\r\n\t\tSystem.out.println(\"Last \"+ n + \" vowels of a given string: \"+validate(text,n));\r\n\t\ttext = \"SQLite\";\r\n\t\tn = 2;\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Last \"+ n + \" vowels of a given string: \"+validate(text,n));\r\n\t\ttext = \"The quick brown fox jumps over the lazy dog.\";\r\n\t\tn = 2;\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Last \"+ n + \" vowels of a given string: \"+validate(text,n));\r\n\t\tn = 3;\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Last \"+ n + \" vowels of a given string: \"+validate(text,n));\r\n\t\tn = 15;\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Last \"+ n + \" vowels of a given string: \"+validate(text,n));\t\t\r\n\t}\r\n\r\n   public static String validate(String text, int n) {\r\n\t\tString s = text.replaceAll(\"(?i)[^aeiou]\", \"\");\r\n\t\tint l = s.length();\r\n\t\treturn (n > s.length()) ? \"Number of vowels mismatch!!!\" : s.substring(s.length() - n);\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-25.php"}, {"exercise_number": 26, "exercise_content": "26. Write a Java program to check whether a given string is a valid hex code or not.", "exercise_solution_code": "public class test {\r\n \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"123456\";\r\n\t\tSystem.out.println(\"Original String: \"+text);\r\n\t\tSystem.out.println(\"Check the said string is a valid hex code or not? \"+validate(text));\r\n\t\ttext = \"#eaecff\";\r\n\t\tSystem.out.println(\"\\nOriginal String: \"+text);\r\n\t\tSystem.out.println(\"Check the said string is a valid hex code or not? \"+validate(text));\r\n\t\ttext = \"#FF0000\";\r\n\t\tSystem.out.println(\"\\nOriginal String: \"+text);\r\n\t\tSystem.out.println(\"Check the said string is a valid hex code or not? \"+validate(text));\r\n\t\ttext = \"#DD5C5C\";\r\n\t\tSystem.out.println(\"\\nOriginal String: \"+text);\r\n\t\tSystem.out.println(\"Check the said string is a valid hex code or not? \"+validate(text));\r\n\t\ttext = \"#0000000\";\r\n\t\tSystem.out.println(\"\\nOriginal String: \"+text);\r\n\t\tSystem.out.println(\"Check the said string is a valid hex code or not? \"+validate(text));\t\t\r\n\t}\r\n\r\n   public static boolean validate(String text) {\r\n\t   return text.matches(\"#[0-9A-Fa-f]{6}\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-26.php"}, {"exercise_number": 27, "exercise_content": "27. Write a Java program to add a dash before and after every vowel in a given string.", "exercise_solution_code": "public class test { \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"C++\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Add a dash before and after every vowel in the said string: \"+validate(text));\r\n\t\ttext = \"Java\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"Add a dash before and after every vowel in the said string: \"+validate(text));\r\n\t\ttext = \"MID-CENTRALIZED\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"Add a dash before and after every vowel in the said string: \"+validate(text));\r\n\t\ttext = \"LOWERED\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"Add a dash before and after every vowel in the said string: \"+validate(text));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t   return text.replaceAll(\"([AEIOUaeiou])\",\"-$1-\");\r\n   }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-27.php"}, {"exercise_number": 28, "exercise_content": "28. Write a Java program to reverse the words of length higher than 3 in a given string.", "exercise_solution_code": "import java.lang.StringBuilder;\r\npublic class test { \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"Add a dash before and after every vowel in the said string:\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Reverse the words of length higher than 3 in the said string:\\n\"+validate(text));\r\n\t\ttext = \"The quick brown fox jumps over the lazy dog.\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"Reverse the words of length higher than 3 in the said string:\\n\"+validate(text));\t\t\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t    String[] words = text.split(\" \");\r\n        StringBuilder result_str = new StringBuilder();\r\n        for (String word : words) {\r\n            if (word.length() >= 4) {\r\n                result_str.append(new StringBuilder(word).reverse());\r\n            } else {\r\n                result_str.append(word);\r\n            }\r\n            result_str.append(\" \");\r\n        }\r\n        return result_str.toString().trim();\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-28.php"}, {"exercise_number": 29, "exercise_content": "29. Write a Java program to check if a given string is a Mathematical Expression or not.", "exercise_solution_code": "public class test { \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"10\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Check if the said string is a mathematical expression or not: \"+validate(text));\r\n\t\ttext = \"10 + 20\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Check if the said string is a mathematical expression or not: \"+validate(text));\r\n\t\ttext = \" 10 * 20 * 30 \";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Check if the said string is a mathematical expression or not: \"+validate(text));\r\n\t\ttext = \"-10 * 20 - -30\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Check if the said string is a mathematical expression or not: \"+validate(text));\r\n\t\ttext = \"-10 * 20 - -2e4\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Check if the said string is a mathematical expression or not: \"+validate(text));\r\n\t\ttext = \"100 +\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"Check if the said string is a mathematical expression or not: \"+validate(text));\r\n\t\ttext = \"100 + foo\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Check if the said string is a mathematical expression or not: \"+validate(text));\r\n\t\ttext = \" 10 *+ 20 * 30 \";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Check if the said string is a mathematical expression or not: \"+validate(text));\r\n        }\r\n\r\n   public static boolean validate(String text) {\r\n\t   return text.matches(\"((?:(?:^|[-+_*/])(?:\\\\s*-?\\\\d+(\\\\.\\\\d+)?(?:[eE][+-]?\\\\d+)?\\\\s*))+$)\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-29.php"}, {"exercise_number": 30, "exercise_content": "30. Write a Java program to insert a dash (-) between an upper case letter and a lower case letter in a given string.", "exercise_solution_code": "public class test { \r\n   public static void main(String[] args) {\t   \r\n\t    String text = \"Python Exercises\";\r\n\t\tSystem.out.println(\"Original string: \"+text);\r\n\t\tSystem.out.println(\"Insert a dash between an upper case letter and a lower case letter in the said string:\\n\"+validate(text));\r\n\t\ttext = \"The quick brown Fox jumps over the lazy Dog.\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"Insert a dash between an upper case letter and a lower case letter in the said string:\\n\"+validate(text));\t\r\n\t\ttext = \"java exercises\";\r\n\t\tSystem.out.println(\"\\nOriginal string: \"+text);\r\n\t\tSystem.out.println(\"Insert a dash between an upper case letter and a lower case letter in the said string:\\n\"+validate(text));\r\n        }\r\n\r\n   public static String validate(String text) {\r\n\t   return text.replaceAll(\"(?<=[A-Z])(?=[a-z])\", \"-\");\r\n    }\r\n}\r\n\r\n", "exercise_solution_link": "https://www.w3resource.com/java-exercises/re/java-re-exercise-30.php"}]}